{"ast":null,"code":"import { BaseError } from './base.js';\nexport class AccountStateConflictError extends BaseError {\n  constructor(_ref) {\n    let {\n      address\n    } = _ref;\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError'\n    });\n  }\n}\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError'\n    });\n  }\n}\n/** @internal */\nexport function prettyStateMapping(stateMapping) {\n  return stateMapping.reduce((pretty, _ref2) => {\n    let {\n      slot,\n      value\n    } = _ref2;\n    return `${pretty}        ${slot}: ${value}\\n`;\n  }, '');\n}\nexport function prettyStateOverride(stateOverride) {\n  return stateOverride.reduce((pretty, _ref3) => {\n    let {\n      address,\n      ...state\n    } = _ref3;\n    let val = `${pretty}    ${address}:\\n`;\n    if (state.nonce) val += `      nonce: ${state.nonce}\\n`;\n    if (state.balance) val += `      balance: ${state.balance}\\n`;\n    if (state.code) val += `      code: ${state.code}\\n`;\n    if (state.state) {\n      val += '      state:\\n';\n      val += prettyStateMapping(state.state);\n    }\n    if (state.stateDiff) {\n      val += '      stateDiff:\\n';\n      val += prettyStateMapping(state.stateDiff);\n    }\n    return val;\n  }, '  State Override:\\n').slice(0, -1);\n}","map":{"version":3,"names":["BaseError","AccountStateConflictError","constructor","_ref","address","name","StateAssignmentConflictError","prettyStateMapping","stateMapping","reduce","pretty","_ref2","slot","value","prettyStateOverride","stateOverride","_ref3","state","val","nonce","balance","code","stateDiff","slice"],"sources":["/Users/emmanasseri/Desktop/my-own-words/node_modules/viem/errors/stateOverride.ts"],"sourcesContent":["import type { StateMapping, StateOverride } from '../types/stateOverride.js'\nimport { BaseError } from './base.js'\n\nexport type AccountStateConflictErrorType = AccountStateConflictError & {\n  name: 'AccountStateConflictError'\n}\n\nexport class AccountStateConflictError extends BaseError {\n  constructor({ address }: { address: string }) {\n    super(`State for account \"${address}\" is set multiple times.`, {\n      name: 'AccountStateConflictError',\n    })\n  }\n}\n\nexport type StateAssignmentConflictErrorType = StateAssignmentConflictError & {\n  name: 'StateAssignmentConflictError'\n}\n\nexport class StateAssignmentConflictError extends BaseError {\n  constructor() {\n    super('state and stateDiff are set on the same account.', {\n      name: 'StateAssignmentConflictError',\n    })\n  }\n}\n\n/** @internal */\nexport function prettyStateMapping(stateMapping: StateMapping) {\n  return stateMapping.reduce((pretty, { slot, value }) => {\n    return `${pretty}        ${slot}: ${value}\\n`\n  }, '')\n}\n\nexport function prettyStateOverride(stateOverride: StateOverride) {\n  return stateOverride\n    .reduce((pretty, { address, ...state }) => {\n      let val = `${pretty}    ${address}:\\n`\n      if (state.nonce) val += `      nonce: ${state.nonce}\\n`\n      if (state.balance) val += `      balance: ${state.balance}\\n`\n      if (state.code) val += `      code: ${state.code}\\n`\n      if (state.state) {\n        val += '      state:\\n'\n        val += prettyStateMapping(state.state)\n      }\n      if (state.stateDiff) {\n        val += '      stateDiff:\\n'\n        val += prettyStateMapping(state.stateDiff)\n      }\n      return val\n    }, '  State Override:\\n')\n    .slice(0, -1)\n}\n"],"mappings":"AACA,SAASA,SAAS,QAAQ,WAAW;AAMrC,OAAM,MAAOC,yBAA0B,SAAQD,SAAS;EACtDE,YAAAC,IAAA,EAA4C;IAAA,IAAhC;MAAEC;IAAO,CAAuB,GAAAD,IAAA;IAC1C,KAAK,CAAC,sBAAsBC,OAAO,0BAA0B,EAAE;MAC7DC,IAAI,EAAE;KACP,CAAC;EACJ;;AAOF,OAAM,MAAOC,4BAA6B,SAAQN,SAAS;EACzDE,YAAA;IACE,KAAK,CAAC,kDAAkD,EAAE;MACxDG,IAAI,EAAE;KACP,CAAC;EACJ;;AAGF;AACA,OAAM,SAAUE,kBAAkBA,CAACC,YAA0B;EAC3D,OAAOA,YAAY,CAACC,MAAM,CAAC,CAACC,MAAM,EAAAC,KAAA,KAAqB;IAAA,IAAnB;MAAEC,IAAI;MAAEC;IAAK,CAAE,GAAAF,KAAA;IACjD,OAAO,GAAGD,MAAM,WAAWE,IAAI,KAAKC,KAAK,IAAI;EAC/C,CAAC,EAAE,EAAE,CAAC;AACR;AAEA,OAAM,SAAUC,mBAAmBA,CAACC,aAA4B;EAC9D,OAAOA,aAAa,CACjBN,MAAM,CAAC,CAACC,MAAM,EAAAM,KAAA,KAA2B;IAAA,IAAzB;MAAEZ,OAAO;MAAE,GAAGa;IAAK,CAAE,GAAAD,KAAA;IACpC,IAAIE,GAAG,GAAG,GAAGR,MAAM,OAAON,OAAO,KAAK;IACtC,IAAIa,KAAK,CAACE,KAAK,EAAED,GAAG,IAAI,gBAAgBD,KAAK,CAACE,KAAK,IAAI;IACvD,IAAIF,KAAK,CAACG,OAAO,EAAEF,GAAG,IAAI,kBAAkBD,KAAK,CAACG,OAAO,IAAI;IAC7D,IAAIH,KAAK,CAACI,IAAI,EAAEH,GAAG,IAAI,eAAeD,KAAK,CAACI,IAAI,IAAI;IACpD,IAAIJ,KAAK,CAACA,KAAK,EAAE;MACfC,GAAG,IAAI,gBAAgB;MACvBA,GAAG,IAAIX,kBAAkB,CAACU,KAAK,CAACA,KAAK,CAAC;IACxC;IACA,IAAIA,KAAK,CAACK,SAAS,EAAE;MACnBJ,GAAG,IAAI,oBAAoB;MAC3BA,GAAG,IAAIX,kBAAkB,CAACU,KAAK,CAACK,SAAS,CAAC;IAC5C;IACA,OAAOJ,GAAG;EACZ,CAAC,EAAE,qBAAqB,CAAC,CACxBK,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}