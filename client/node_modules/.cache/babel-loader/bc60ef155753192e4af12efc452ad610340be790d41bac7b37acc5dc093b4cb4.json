{"ast":null,"code":"import { etherUnits } from '../../constants/unit.js';\nimport { parseUnits } from './parseUnits.js';\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether) {\n  let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'wei';\n  return parseUnits(ether, etherUnits[unit]);\n}","map":{"version":3,"names":["etherUnits","parseUnits","parseEther","ether","unit","arguments","length","undefined"],"sources":["/Users/emmanasseri/Desktop/my-own-words/node_modules/viem/utils/unit/parseEther.ts"],"sourcesContent":["import { etherUnits } from '../../constants/unit.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\nimport { type ParseUnitsErrorType, parseUnits } from './parseUnits.js'\n\nexport type ParseEtherErrorType = ParseUnitsErrorType | ErrorType\n\n/**\n * Converts a string representation of ether to numerical wei.\n *\n * - Docs: https://viem.sh/docs/utilities/parseEther\n *\n * @example\n * import { parseEther } from 'viem'\n *\n * parseEther('420')\n * // 420000000000000000000n\n */\nexport function parseEther(ether: string, unit: 'wei' | 'gwei' = 'wei') {\n  return parseUnits(ether, etherUnits[unit])\n}\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,yBAAyB;AAGpD,SAAmCC,UAAU,QAAQ,iBAAiB;AAItE;;;;;;;;;;;AAWA,OAAM,SAAUC,UAAUA,CAACC,KAAa,EAA8B;EAAA,IAA5BC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuB,KAAK;EACpE,OAAOJ,UAAU,CAACE,KAAK,EAAEH,UAAU,CAACI,IAAI,CAAC,CAAC;AAC5C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}