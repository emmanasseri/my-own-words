{"ast":null,"code":"import { BaseError } from './base.js';\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor(_ref) {\n    let {\n      max,\n      min,\n      signed,\n      size,\n      value\n    } = _ref;\n    super(`Number \"${value}\" is not in safe ${size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''}integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`, {\n      name: 'IntegerOutOfRangeError'\n    });\n  }\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes) {\n    super(`Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`, {\n      name: 'InvalidBytesBooleanError'\n    });\n  }\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex) {\n    super(`Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`, {\n      name: 'InvalidHexBooleanError'\n    });\n  }\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value) {\n    super(`Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`, {\n      name: 'InvalidHexValueError'\n    });\n  }\n}\nexport class SizeOverflowError extends BaseError {\n  constructor(_ref2) {\n    let {\n      givenSize,\n      maxSize\n    } = _ref2;\n    super(`Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`, {\n      name: 'SizeOverflowError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","IntegerOutOfRangeError","constructor","_ref","max","min","signed","size","value","name","InvalidBytesBooleanError","bytes","InvalidHexBooleanError","hex","InvalidHexValueError","length","SizeOverflowError","_ref2","givenSize","maxSize"],"sources":["/Users/emmanasseri/Desktop/my-own-words/node_modules/viem/errors/encoding.ts"],"sourcesContent":["import type { ByteArray, Hex } from '../types/misc.js'\n\nimport { BaseError } from './base.js'\n\nexport type IntegerOutOfRangeErrorType = IntegerOutOfRangeError & {\n  name: 'IntegerOutOfRangeError'\n}\nexport class IntegerOutOfRangeError extends BaseError {\n  constructor({\n    max,\n    min,\n    signed,\n    size,\n    value,\n  }: {\n    max?: string | undefined\n    min: string\n    signed?: boolean | undefined\n    size?: number | undefined\n    value: string\n  }) {\n    super(\n      `Number \"${value}\" is not in safe ${\n        size ? `${size * 8}-bit ${signed ? 'signed' : 'unsigned'} ` : ''\n      }integer range ${max ? `(${min} to ${max})` : `(above ${min})`}`,\n      { name: 'IntegerOutOfRangeError' },\n    )\n  }\n}\n\nexport type InvalidBytesBooleanErrorType = InvalidBytesBooleanError & {\n  name: 'InvalidBytesBooleanError'\n}\nexport class InvalidBytesBooleanError extends BaseError {\n  constructor(bytes: ByteArray) {\n    super(\n      `Bytes value \"${bytes}\" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`,\n      {\n        name: 'InvalidBytesBooleanError',\n      },\n    )\n  }\n}\n\nexport type InvalidHexBooleanErrorType = InvalidHexBooleanError & {\n  name: 'InvalidHexBooleanError'\n}\nexport class InvalidHexBooleanError extends BaseError {\n  constructor(hex: Hex) {\n    super(\n      `Hex value \"${hex}\" is not a valid boolean. The hex value must be \"0x0\" (false) or \"0x1\" (true).`,\n      { name: 'InvalidHexBooleanError' },\n    )\n  }\n}\n\nexport type InvalidHexValueErrorType = InvalidHexValueError & {\n  name: 'InvalidHexValueError'\n}\nexport class InvalidHexValueError extends BaseError {\n  constructor(value: Hex) {\n    super(\n      `Hex value \"${value}\" is an odd length (${value.length}). It must be an even length.`,\n      { name: 'InvalidHexValueError' },\n    )\n  }\n}\n\nexport type SizeOverflowErrorType = SizeOverflowError & {\n  name: 'SizeOverflowError'\n}\nexport class SizeOverflowError extends BaseError {\n  constructor({ givenSize, maxSize }: { givenSize: number; maxSize: number }) {\n    super(\n      `Size cannot exceed ${maxSize} bytes. Given size: ${givenSize} bytes.`,\n      { name: 'SizeOverflowError' },\n    )\n  }\n}\n"],"mappings":"AAEA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,sBAAuB,SAAQD,SAAS;EACnDE,YAAAC,IAAA,EAYC;IAAA,IAZW;MACVC,GAAG;MACHC,GAAG;MACHC,MAAM;MACNC,IAAI;MACJC;IAAK,CAON,GAAAL,IAAA;IACC,KAAK,CACH,WAAWK,KAAK,oBACdD,IAAI,GAAG,GAAGA,IAAI,GAAG,CAAC,QAAQD,MAAM,GAAG,QAAQ,GAAG,UAAU,GAAG,GAAG,EAChE,iBAAiBF,GAAG,GAAG,IAAIC,GAAG,OAAOD,GAAG,GAAG,GAAG,UAAUC,GAAG,GAAG,EAAE,EAChE;MAAEI,IAAI,EAAE;IAAwB,CAAE,CACnC;EACH;;AAMF,OAAM,MAAOC,wBAAyB,SAAQV,SAAS;EACrDE,YAAYS,KAAgB;IAC1B,KAAK,CACH,gBAAgBA,KAAK,gGAAgG,EACrH;MACEF,IAAI,EAAE;KACP,CACF;EACH;;AAMF,OAAM,MAAOG,sBAAuB,SAAQZ,SAAS;EACnDE,YAAYW,GAAQ;IAClB,KAAK,CACH,cAAcA,GAAG,gFAAgF,EACjG;MAAEJ,IAAI,EAAE;IAAwB,CAAE,CACnC;EACH;;AAMF,OAAM,MAAOK,oBAAqB,SAAQd,SAAS;EACjDE,YAAYM,KAAU;IACpB,KAAK,CACH,cAAcA,KAAK,uBAAuBA,KAAK,CAACO,MAAM,+BAA+B,EACrF;MAAEN,IAAI,EAAE;IAAsB,CAAE,CACjC;EACH;;AAMF,OAAM,MAAOO,iBAAkB,SAAQhB,SAAS;EAC9CE,YAAAe,KAAA,EAA0E;IAAA,IAA9D;MAAEC,SAAS;MAAEC;IAAO,CAA0C,GAAAF,KAAA;IACxE,KAAK,CACH,sBAAsBE,OAAO,uBAAuBD,SAAS,SAAS,EACtE;MAAET,IAAI,EAAE;IAAmB,CAAE,CAC9B;EACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}