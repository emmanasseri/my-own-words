{"ast":null,"code":"import { InvalidDefinitionTypeError } from '../../errors/abi.js';\nexport function formatAbiItem(abiItem) {\n  let {\n    includeName = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (abiItem.type !== 'function' && abiItem.type !== 'event' && abiItem.type !== 'error') throw new InvalidDefinitionTypeError(abiItem.type);\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, {\n    includeName\n  })})`;\n}\nexport function formatAbiParams(params) {\n  let {\n    includeName = false\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!params) return '';\n  return params.map(param => formatAbiParam(param, {\n    includeName\n  })).join(includeName ? ', ' : ',');\n}\nfunction formatAbiParam(param, _ref) {\n  let {\n    includeName\n  } = _ref;\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(param.components, {\n      includeName\n    })})${param.type.slice('tuple'.length)}`;\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '');\n}","map":{"version":3,"names":["InvalidDefinitionTypeError","formatAbiItem","abiItem","includeName","arguments","length","undefined","type","name","formatAbiParams","inputs","params","map","param","formatAbiParam","join","_ref","startsWith","components","slice"],"sources":["/Users/emmanasseri/Desktop/my-own-words/client/node_modules/viem/utils/abi/formatAbiItem.ts"],"sourcesContent":["import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n"],"mappings":"AAEA,SACEA,0BAA0B,QAErB,qBAAqB;AAS5B,OAAM,SAAUC,aAAaA,CAC3BC,OAAgB,EACmD;EAAA,IAAnE;IAAEC,WAAW,GAAG;EAAK,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4C,EAAE;EAEnE,IACEF,OAAO,CAACK,IAAI,KAAK,UAAU,IAC3BL,OAAO,CAACK,IAAI,KAAK,OAAO,IACxBL,OAAO,CAACK,IAAI,KAAK,OAAO,EAExB,MAAM,IAAIP,0BAA0B,CAACE,OAAO,CAACK,IAAI,CAAC;EAEpD,OAAO,GAAGL,OAAO,CAACM,IAAI,IAAIC,eAAe,CAACP,OAAO,CAACQ,MAAM,EAAE;IAAEP;EAAW,CAAE,CAAC,GAAG;AAC/E;AAIA,OAAM,SAAUM,eAAeA,CAC7BE,MAA2C,EACwB;EAAA,IAAnE;IAAER,WAAW,GAAG;EAAK,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAA4C,EAAE;EAEnE,IAAI,CAACO,MAAM,EAAE,OAAO,EAAE;EACtB,OAAOA,MAAM,CACVC,GAAG,CAAEC,KAAK,IAAKC,cAAc,CAACD,KAAK,EAAE;IAAEV;EAAW,CAAE,CAAC,CAAC,CACtDY,IAAI,CAACZ,WAAW,GAAG,IAAI,GAAG,GAAG,CAAC;AACnC;AAIA,SAASW,cAAcA,CACrBD,KAAmB,EAAAG,IAAA,EACsB;EAAA,IAAzC;IAAEb;EAAW,CAA4B,GAAAa,IAAA;EAEzC,IAAIH,KAAK,CAACN,IAAI,CAACU,UAAU,CAAC,OAAO,CAAC,EAAE;IAClC,OAAO,IAAIR,eAAe,CACvBI,KAAmD,CAACK,UAAU,EAC/D;MAAEf;IAAW,CAAE,CAChB,IAAIU,KAAK,CAACN,IAAI,CAACY,KAAK,CAAC,OAAO,CAACd,MAAM,CAAC,EAAE;EACzC;EACA,OAAOQ,KAAK,CAACN,IAAI,IAAIJ,WAAW,IAAIU,KAAK,CAACL,IAAI,GAAG,IAAIK,KAAK,CAACL,IAAI,EAAE,GAAG,EAAE,CAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}