{"ast":null,"code":"import { LruMap } from '../lru.js';\n/** @internal */\nexport const promiseCache = /*#__PURE__*/new LruMap(8192);\n/** Deduplicates in-flight promises. */\nexport function withDedupe(fn, _ref) {\n  let {\n    enabled = true,\n    id\n  } = _ref;\n  if (!enabled || !id) return fn();\n  if (promiseCache.get(id)) return promiseCache.get(id);\n  const promise = fn().finally(() => promiseCache.delete(id));\n  promiseCache.set(id, promise);\n  return promise;\n}","map":{"version":3,"names":["LruMap","promiseCache","withDedupe","fn","_ref","enabled","id","get","promise","finally","delete","set"],"sources":["/Users/emmanasseri/Desktop/my-own-words/node_modules/viem/utils/promise/withDedupe.ts"],"sourcesContent":["import { LruMap } from '../lru.js'\n\n/** @internal */\nexport const promiseCache = /*#__PURE__*/ new LruMap<Promise<any>>(8192)\n\ntype WithDedupeOptions = {\n  enabled?: boolean | undefined\n  id?: string | undefined\n}\n\n/** Deduplicates in-flight promises. */\nexport function withDedupe<data>(\n  fn: () => Promise<data>,\n  { enabled = true, id }: WithDedupeOptions,\n): Promise<data> {\n  if (!enabled || !id) return fn()\n  if (promiseCache.get(id)) return promiseCache.get(id)!\n  const promise = fn().finally(() => promiseCache.delete(id))\n  promiseCache.set(id, promise)\n  return promise\n}\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,WAAW;AAElC;AACA,OAAO,MAAMC,YAAY,GAAG,aAAc,IAAID,MAAM,CAAe,IAAI,CAAC;AAOxE;AACA,OAAM,SAAUE,UAAUA,CACxBC,EAAuB,EAAAC,IAAA,EACkB;EAAA,IAAzC;IAAEC,OAAO,GAAG,IAAI;IAAEC;EAAE,CAAqB,GAAAF,IAAA;EAEzC,IAAI,CAACC,OAAO,IAAI,CAACC,EAAE,EAAE,OAAOH,EAAE,EAAE;EAChC,IAAIF,YAAY,CAACM,GAAG,CAACD,EAAE,CAAC,EAAE,OAAOL,YAAY,CAACM,GAAG,CAACD,EAAE,CAAE;EACtD,MAAME,OAAO,GAAGL,EAAE,EAAE,CAACM,OAAO,CAAC,MAAMR,YAAY,CAACS,MAAM,CAACJ,EAAE,CAAC,CAAC;EAC3DL,YAAY,CAACU,GAAG,CAACL,EAAE,EAAEE,OAAO,CAAC;EAC7B,OAAOA,OAAO;AAChB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}