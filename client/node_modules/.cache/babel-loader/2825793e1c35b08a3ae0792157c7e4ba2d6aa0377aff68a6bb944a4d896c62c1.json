{"ast":null,"code":"import { BaseError } from './base.js';\nexport class AccountNotFoundError extends BaseError {\n  constructor() {\n    let {\n      docsPath\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(['Could not find an Account to execute with this Action.', 'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.'].join('\\n'), {\n      docsPath,\n      docsSlug: 'account',\n      name: 'AccountNotFoundError'\n    });\n  }\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor(_ref) {\n    let {\n      docsPath,\n      metaMessages,\n      type\n    } = _ref;\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError'\n    });\n  }\n}","map":{"version":3,"names":["BaseError","AccountNotFoundError","constructor","docsPath","arguments","length","undefined","join","docsSlug","name","AccountTypeNotSupportedError","_ref","metaMessages","type"],"sources":["/Users/emmanasseri/Desktop/my-own-words/client/node_modules/viem/errors/account.ts"],"sourcesContent":["import { BaseError } from './base.js'\n\nexport type AccountNotFoundErrorType = AccountNotFoundError & {\n  name: 'AccountNotFoundError'\n}\nexport class AccountNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath?: string | undefined } = {}) {\n    super(\n      [\n        'Could not find an Account to execute with this Action.',\n        'Please provide an Account with the `account` argument on the Action, or by supplying an `account` to the Client.',\n      ].join('\\n'),\n      {\n        docsPath,\n        docsSlug: 'account',\n        name: 'AccountNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AccountTypeNotSupportedErrorType = AccountTypeNotSupportedError & {\n  name: 'AccountTypeNotSupportedError'\n}\nexport class AccountTypeNotSupportedError extends BaseError {\n  constructor({\n    docsPath,\n    metaMessages,\n    type,\n  }: {\n    docsPath?: string | undefined\n    metaMessages?: string[] | undefined\n    type: string\n  }) {\n    super(`Account type \"${type}\" is not supported.`, {\n      docsPath,\n      metaMessages,\n      name: 'AccountTypeNotSupportedError',\n    })\n  }\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,WAAW;AAKrC,OAAM,MAAOC,oBAAqB,SAAQD,SAAS;EACjDE,YAAA,EAAgE;IAAA,IAApD;MAAEC;IAAQ,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAwC,EAAE;IAC9D,KAAK,CACH,CACE,wDAAwD,EACxD,kHAAkH,CACnH,CAACG,IAAI,CAAC,IAAI,CAAC,EACZ;MACEJ,QAAQ;MACRK,QAAQ,EAAE,SAAS;MACnBC,IAAI,EAAE;KACP,CACF;EACH;;AAMF,OAAM,MAAOC,4BAA6B,SAAQV,SAAS;EACzDE,YAAAS,IAAA,EAQC;IAAA,IARW;MACVR,QAAQ;MACRS,YAAY;MACZC;IAAI,CAKL,GAAAF,IAAA;IACC,KAAK,CAAC,iBAAiBE,IAAI,qBAAqB,EAAE;MAChDV,QAAQ;MACRS,YAAY;MACZH,IAAI,EAAE;KACP,CAAC;EACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}