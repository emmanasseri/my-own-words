{"ast":null,"code":"import { isAddress, checksumAddress, encodeFunctionData, decodeEventLog, zeroAddress, getAddress as getAddress$2, toFunctionSelector, keccak256, encodeAbiParameters, toHex, zeroHash, stringToHex, maxUint32, createPublicClient, createWalletClient } from 'viem';\nimport * as dotenv from 'dotenv';\nimport { defineChain } from 'viem/utils';\nfunction toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function (t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function (t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(typeof e + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function () {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function (e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function (t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    catch: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nvar iliad = defineChain({\n  id: 1513,\n  name: \"iliad\",\n  nativeCurrency: {\n    name: \"IP\",\n    symbol: \"IP\",\n    decimals: 18\n  },\n  rpcUrls: {\n    \"default\": {\n      http: [\"https://testnet.storyrpc.io\"],\n      webSocket: [\"wss://story-network.rpc.caldera.xyz/ws\"]\n    }\n  },\n  blockExplorers: {\n    \"default\": {\n      name: \"Explorer\",\n      url: \"https://testnet.storyscan.xyz\"\n    }\n  },\n  contracts: {\n    multicall3: {\n      address: \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n      blockCreated: 5882\n    }\n  },\n  testnet: true\n});\nfunction chainStringToViemChain(chainId) {\n  switch (chainId) {\n    case \"1513\":\n    case \"iliad\":\n      return iliad;\n    default:\n      throw new Error(\"chainId \".concat(chainId, \" not supported\"));\n  }\n}\nvar chain = {\n  iliad: 1513n,\n  1513: 1513n\n};\nvar getAddress$1 = function getAddress(address, name, chainId) {\n  if (!isAddress(address, {\n    strict: false\n  })) {\n    throw Error(\"\".concat(name, \" address is invalid: \").concat(address, \", Address must be a hex value of 20 bytes (40 hex characters) and match its checksum counterpart.\"));\n  }\n  return checksumAddress(address, chainId);\n};\nfunction handleError(error, msg) {\n  if (error instanceof Error) {\n    throw new Error(\"\".concat(msg, \": \").concat(error.message));\n  }\n  throw new Error(\"\".concat(msg, \": Unknown error type\"));\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function () {\n    return !!t;\n  })();\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AccessController\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar accessControllerAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"moduleRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessController__BothCallerAndRecipientAreNotRegisteredModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__CallerIsNotIPAccountOrOwner\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessController__IPAccountIsNotValid\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__IPAccountIsZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"AccessController__PermissionDenied\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__PermissionIsNotValid\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__SignerIsZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ToAndFuncAreZeroAddressShouldCallSetAllPermissions\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ZeroIPAccountRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ZeroModuleRegistry\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipAccountOwner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\",\n    indexed: false\n  }, {\n    name: \"permission\",\n    internalType: \"uint8\",\n    type: \"uint8\",\n    indexed: false\n  }],\n  name: \"PermissionSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MODULE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IModuleRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"checkPermission\",\n  outputs: [],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"getPermission\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"permission\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"setAllPermissions\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"permissions\",\n    internalType: \"struct AccessPermission.Permission[]\",\n    type: \"tuple[]\",\n    components: [{\n      name: \"ipAccount\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"to\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"func\",\n      internalType: \"bytes4\",\n      type: \"bytes4\"\n    }, {\n      name: \"permission\",\n      internalType: \"uint8\",\n      type: \"uint8\"\n    }]\n  }],\n  name: \"setBatchPermissions\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }, {\n    name: \"permission\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"setPermission\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar accessControllerAddress = {\n  1513: \"0x01d470c28822d3701Db6325333cEE9737524776E\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CoreMetadataModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar coreMetadataModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"CoreMetadataModule__MetadataAlreadyFrozen\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"CoreMetadataModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"MetadataFrozen\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"metadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"MetadataURISet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"nftTokenURI\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"nftMetadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"NFTTokenURISet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"freezeMetadata\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isMetadataFrozen\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"pure\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"metadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"nftMetadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"setAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"metadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"setMetadataURI\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"nftMetadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"updateNftTokenURI\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar coreMetadataModuleAddress = {\n  1513: \"0x290F414EA46b361ECFB6b430F98346CB593D02b9\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DisputeModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar disputeModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAssetRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotAbleToResolve\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotAllowedToWhitelist\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotDerivative\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotDisputeInitiator\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotInDisputeState\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotRegisteredIpId\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotWhitelistedArbitrationPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotWhitelistedArbitrationRelayer\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotWhitelistedDisputeTag\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ParentDisputeNotResolved\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ParentIpIdMismatch\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ParentNotTagged\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroAccessController\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroArbitrationPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroArbitrationRelayer\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroDisputeTag\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroIPAssetRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroLinkToDisputeEvidence\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"str\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"StringTooLong\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"ArbitrationPolicySet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"ArbitrationPolicyWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"arbitrationRelayer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"ArbitrationRelayerWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"DefaultArbitrationPolicyUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"derivativeIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"parentDisputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"DerivativeTaggedOnParentInfringement\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"DisputeCancelled\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"decision\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"DisputeJudgementSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"targetIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"disputeInitiator\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"linkToDisputeEvidence\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"targetTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"DisputeRaised\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"DisputeResolved\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"TagWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IN_DISPUTE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ASSET_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAssetRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"arbitrationPolicies\",\n  outputs: [{\n    name: \"policy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"baseArbitrationPolicy\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"cancelDispute\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"disputeCounter\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"disputes\",\n  outputs: [{\n    name: \"targetIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeInitiator\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"linkToDisputeEvidence\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"targetTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"currentTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"parentDisputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isIpTagged\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedArbitrationPolicy\",\n  outputs: [{\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbitrationRelayer\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedArbitrationRelayer\",\n  outputs: [{\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"isWhitelistedDisputeTag\",\n  outputs: [{\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"data\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  name: \"multicall\",\n  outputs: [{\n    name: \"results\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"targetIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"linkToDisputeEvidence\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"targetTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"raiseDispute\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"resolveDispute\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setArbitrationPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setBaseArbitrationPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"decision\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"setDisputeJudgement\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"derivativeIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentDisputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tagDerivativeIfParentInfringed\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistArbitrationPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbPolicyRelayer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistArbitrationRelayer\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistDisputeTag\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar disputeModuleAddress = {\n  1513: \"0xDae11663438a0958E7075F604E3a5eEe77FD3878\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IPAccountImpl\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar ipAccountImplAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAssetRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"moduleRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FnSelectorNotRecognized\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__InvalidBatchLengths\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"module\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"IPAccountStorage__NotRegisteredModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__ZeroIpAssetRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__ZeroModuleRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__ExpiredSignature\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidCalldata\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidOperation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidSignature\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidSigner\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__ZeroAccessController\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"OperationNotSupported\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SelfOwnDetected\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"Unauthorized\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UpgradeFailed\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }, {\n    name: \"nonce\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"Executed\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }, {\n    name: \"nonce\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"deadline\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"signature\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"ExecutedWithSig\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"fallback\",\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ASSET_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MODULE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"bytes32Data\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"bytesData\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"eip712Domain\",\n  outputs: [{\n    name: \"fields\",\n    internalType: \"bytes1\",\n    type: \"bytes1\"\n  }, {\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"version\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"verifyingContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"salt\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"extensions\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"operation\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"execute\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"execute\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"calls\",\n    internalType: \"struct ERC6551.Call[]\",\n    type: \"tuple[]\",\n    components: [{\n      name: \"target\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"value\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"data\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"operation\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"executeBatch\",\n  outputs: [{\n    name: \"results\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"deadline\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"signature\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"executeWithSig\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespace\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespace\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes32\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes32\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespaces\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  name: \"getBytes32Batch\",\n  outputs: [{\n    name: \"values\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespaces\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  name: \"getBytesBatch\",\n  outputs: [{\n    name: \"values\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"hash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"signature\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"isValidSignature\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"isValidSigner\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"isValidSigner\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"owner\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"value\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"setBytes\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"value\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"setBytes32\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"values\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  name: \"setBytes32Batch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"values\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  name: \"setBytesBatch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"state\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"token\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"receive\",\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar ipAccountImplAddress = {\n  1513: \"0x8F763c16753e830a8020c80f9F0131Eb8Ef52879\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IPAssetRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar ipAssetRegistryAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"erc6551Registry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountImpl\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountRegistry_ZeroERC6551Registry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountRegistry_ZeroIpAccountImpl\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAssetRegistry__AlreadyRegistered\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"contractAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"IPAssetRegistry__InvalidToken\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"contractAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"IPAssetRegistry__UnsupportedIERC721\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"contractAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"IPAssetRegistry__UnsupportedIERC721Metadata\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAssetRegistry__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"length\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"StringsInsufficientHexLength\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"IPAccountRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"uri\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"registrationDate\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"IPRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ERC6551_PUBLIC_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_IMPL\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_SALT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getIPAccountImpl\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ipAccount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ipId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"id\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isRegistered\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"chainid\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"register\",\n  outputs: [{\n    name: \"id\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar ipAssetRegistryAddress = {\n  1513: \"0xe34A78B3d658aF7ad69Ff1EFF9012ECa025a14Be\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IpRoyaltyVaultImpl\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar ipRoyaltyVaultImplAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"royaltyPolicyLAP\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__AlreadyClaimed\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__ClaimerNotAnAncestor\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__IpGraphCallFailed\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__IpTagged\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__NotRoyaltyPolicyLAP\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__SnapshotIntervalTooShort\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__ZeroRoyaltyPolicyLAP\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"Approval\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint8\",\n    type: \"uint8\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"claimer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"RevenueTokenClaimed\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"royaltyTokensCollected\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"RoyaltyTokensCollected\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"id\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"Snapshot\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"snapshotTimestamp\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"unclaimedTokens\",\n    internalType: \"uint32\",\n    type: \"uint32\",\n    indexed: false\n  }],\n  name: \"SnapshotCompleted\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"Transfer\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_CONTRACT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_POLICY_LAP\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IRoyaltyPolicyLAP\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"addIpRoyaltyVaultTokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ancestorsVaultAmount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"balanceOfAt\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimRevenueBySnapshotBatch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenList\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  name: \"claimRevenueByTokenBatch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimVaultAmount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimableAtSnapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimableRevenue\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"_tokens\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  name: \"collectAccruedTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"collectRoyaltyTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"collectableAmount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"decimals\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"subtractedValue\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"decreaseAllowance\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"addedValue\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"increaseAllowance\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"symbol\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"supply\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }, {\n    name: \"unclaimedTokens\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }, {\n    name: \"ipIdAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ipId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"claimer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isClaimedAtSnapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isCollectedByAncestor\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"lastSnapshotTimestamp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"snapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"tokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"totalSupplyAt\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"unclaimedAtSnapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unclaimedRoyaltyTokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}];\n\n/**\n *\n */\nvar ipRoyaltyVaultImplAddress = {\n  1513: \"0xfb5b5B61c9a437E06Ba87367aaBf3766d091E3D1\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LicenseRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar licenseRegistryAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipGraphAcl\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  name: \"LicenseRegistry__AddParentIpToIPGraphFailed\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__CallerNotLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeAlreadyRegistered\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeIpAlreadyHasChild\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeIpAlreadyHasLicense\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeIsParent\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__DuplicateLicense\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"length\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__IndexOutOfBounds\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__IpExpired\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__LicenseTermsAlreadyAttached\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__LicenseTermsNotExists\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__LicensorIpHasNoLicenseTerms\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__NotLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__ParentIpExpired\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__ParentIpHasNoLicenseTerms\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__ParentIpTagged\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__ParentIpUnmatchedLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"newLicenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__UnmatchedLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__UnregisteredLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroIPGraphACL\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__DerivativesCannotAddLicenseTerms\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicensingModule__LicenseTermsNotFound\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"DefaultLicenseTermsSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"expireTime\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"ExpirationTimeSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"LicenseTemplateRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }],\n    indexed: false\n  }],\n  name: \"LicensingConfigSetForIP\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"LicensingConfigSetForLicense\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"EXPIRATION_TIME\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_ACL\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IPGraphACL\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_CONTRACT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"attachLicenseTermsToIp\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"exists\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getAttachedLicenseTerms\",\n  outputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getAttachedLicenseTermsCount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getDefaultLicenseTerms\",\n  outputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getDerivativeIp\",\n  outputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getDerivativeIpCount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getExpireTime\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicensingConfig\",\n  outputs: [{\n    name: \"\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getParentIp\",\n  outputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getParentIpCount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"hasDerivativeIps\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"hasIpAttachedLicenseTerms\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isDerivativeIp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isExpiredNow\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isParentIp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isRegisteredLicenseTemplate\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"isUsingLicenseToken\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"registerDerivativeIp\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"registerLicenseTemplate\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newLicenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"newLicenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"setDefaultLicenseTerms\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"setLicensingConfigForIp\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"setLicensingConfigForLicense\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"isMintedByIpOwner\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"verifyMintLicenseToken\",\n  outputs: [{\n    name: \"\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  stateMutability: \"view\"\n}];\n\n/**\n *\n */\nvar licenseRegistryAddress = {\n  1513: \"0xF542AF9a5A6E4A85a4f084D38B322516ec336097\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LicenseToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar licenseTokenAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC721EnumerableForbiddenBatchMint\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"sender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721IncorrectOwner\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ERC721InsufficientApproval\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"approver\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidApprover\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidOperator\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidOwner\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidReceiver\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"sender\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidSender\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ERC721NonexistentToken\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ERC721OutOfBoundsIndex\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"anotherLicenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseToken__AllLicenseTokensMustFromSameLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"childIpIp\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"actualTokenOwner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseToken__CallerAndChildIPNotTokenOwner\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseToken__CallerNotLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseToken__NotTransferable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseToken__RevokedLicense\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseToken__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"length\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"StringsInsufficientHexLength\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"approved\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"Approval\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"ApprovalForAll\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"_fromTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"_toTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"BatchMetadataUpdate\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"minter\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"LicenseTokenMinted\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"Transfer\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"holder\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"burnLicenseTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getApproved\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTemplate\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTermsId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTokenMetadata\",\n  outputs: [{\n    name: \"\",\n    internalType: \"struct ILicenseToken.LicenseTokenMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"licensorIpId\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTemplate\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTermsId\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicensorIpId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"imageUrl\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isApprovedForAll\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"isLicenseTokenRevoked\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"minter\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"mintLicenseTokens\",\n  outputs: [{\n    name: \"startLicenseTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ownerOf\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"url\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"setLicensingImageUrl\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tokenByIndex\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tokenOfOwnerByIndex\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"id\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tokenURI\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalMintedTokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"validateLicenseTokensForDerivative\",\n  outputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensorIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\"\n}];\n\n/**\n *\n */\nvar licenseTokenAddress = {\n  1513: \"0xB31FE33De46A1FA5d4Ec669EDB049892E0A1EB4C\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LicensingModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar licensingModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"moduleRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseToken\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__DisputedIpId\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"anotherRoyaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__IncompatibleRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicensingModule__InvalidLicenseTermsId\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"hook\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__InvalidLicensingHook\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__LicenseDenyMintLicenseToken\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__LicenseNotCompatibleForDerivative\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipLength\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licenseTermsLength\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicensingModule__LicenseTermsLengthMismatch\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"LicensingModule__LicenseTokenNotCompatibleForDerivative\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__LicensorIpNotRegistered\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__MintAmountZero\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__NoLicenseToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__NoParentIp\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ReceiverZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroLicenseToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroModuleRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\",\n    indexed: false\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\",\n    indexed: false\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\",\n    indexed: false\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"DerivativeRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"LicenseTermsAttached\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"startLicenseTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"LicenseTokensMinted\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_NFT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseToken\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MODULE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IModuleRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract RoyaltyModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"attachLicenseTerms\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"mintLicenseTokens\",\n  outputs: [{\n    name: \"startLicenseTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"registerDerivative\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"registerDerivativeWithLicenseTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"setLicensingConfig\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar licensingModuleAddress = {\n  1513: \"0xf49da534215DA7b48E57A41d41dac25C912FCC60\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// PILicenseTemplate\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar piLicenseTemplateAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddAttribution\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddCommercializers\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddDerivativeRevCeiling\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddRevCeiling\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddRevShare\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialEnabled_RoyaltyPolicyRequired\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"checker\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"PILicenseTemplate__CommercializerCheckerDoesNotSupportHook\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CurrencyTokenNotWhitelisted\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddApproval\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddAttribution\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddDerivativeRevCeiling\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddReciprocal\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__RoyaltyPolicyNotWhitelisted\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__RoyaltyPolicyRequiresCurrencyToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__ZeroRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"DerivativeApproved\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTerms\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"LicenseTermsRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IRoyaltyModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"TERMS_RENDERER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract PILTermsRenderer\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"exists\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"start\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getEarlierExpireTime\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"start\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getExpireTime\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"selectedLicenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTerms\",\n  outputs: [{\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"getLicenseTermsId\",\n  outputs: [{\n    name: \"selectedLicenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTermsURI\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getMetadataURI\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getRoyaltyPolicy\",\n  outputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"mintingFee\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"currency\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isDerivativeApproved\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"isLicenseTransferable\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"registerLicenseTerms\",\n  outputs: [{\n    name: \"id\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"setApproval\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"toJson\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalRegisteredLicenseTerms\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"verifyCompatibleLicenses\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensee\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"verifyMintLicenseToken\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensee\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"verifyRegisterDerivative\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"childIpOwner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"verifyRegisterDerivativeForAllParents\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar piLicenseTemplateAddress = {\n  1513: \"0x8BB1ADE72E21090Fc891e1d4b88AC5E57b27cB31\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RoyaltyModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar royaltyModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__CanOnlyMintSelectedPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__IncompatibleRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__IpIsExpired\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__IpIsTagged\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NoParentsOnLinking\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NoRoyaltyPolicySet\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NotAllowedCaller\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NotWhitelistedRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NotWhitelistedRoyaltyToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroRoyaltyToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"payerAddress\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"LicenseMintingFeePaid\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"payerIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"sender\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"RoyaltyPaid\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"RoyaltyPolicyWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"RoyaltyTokenWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedRoyaltyPolicy\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedRoyaltyToken\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLicenseMinting\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLinkToParents\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"payerAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRoyaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"payLicenseMintingFee\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"payerIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"payRoyaltyOnBehalf\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"royaltyPolicies\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistRoyaltyPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistRoyaltyToken\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar royaltyModuleAddress = {\n  1513: \"0x968beb5432c362c12b5Be6967a5d6F1ED5A63F01\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RoyaltyPolicyLAP\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar royaltyPolicyLapAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipGraphAcl\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressInsufficientBalance\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__AboveAncestorsLimit\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__AboveParentLimit\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__AboveRoyaltyStackLimit\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__LastPositionNotAbleToMintLicense\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__NotRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__UnlinkableToParents\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroIPGraphACL\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroIpRoyaltyVaultBeacon\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"SafeERC20FailedOperation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"beacon\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"IpRoyaltyVaultBeaconSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"ipRoyaltyVault\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"royaltyStack\",\n    internalType: \"uint32\",\n    type: \"uint32\",\n    indexed: false\n  }],\n  name: \"PolicyInitialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"vault\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"RevenueTokenAddedToVault\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"interval\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"SnapshotIntervalSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_ACL\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IPGraphACL\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_CONTRACT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MAX_ANCESTORS\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MAX_PARENTS\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"TOTAL_RT_SUPPLY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getIpRoyaltyVaultBeacon\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getRoyaltyData\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }, {\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getSnapshotInterval\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLicenseMinting\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLinkToParents\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"onRoyaltyPayment\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"beacon\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setIpRoyaltyVaultBeacon\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"timestampInterval\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"setSnapshotInterval\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newVault\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"upgradeVaults\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar royaltyPolicyLapAddress = {\n  1513: \"0x61A5c7570f5bDB118D65053Ba60DE87e050E664e\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SPG\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar spgAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAssetRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"coreMetadataModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"pilTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseToken\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressInsufficientBalance\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"actualTokenOwner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"SPG__CallerAndNotTokenOwner\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SPG__CallerNotMinterRole\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SPG__EmptyLicenseTokens\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SPG__ZeroAddressParam\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"SafeERC20FailedOperation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"CollectionCreated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"CORE_METADATA_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ICoreMetadataModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ASSET_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAssetRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_TOKEN\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseToken\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"PIL_TEMPLATE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IPILicenseTemplate\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IRoyaltyModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"symbol\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"maxSupply\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }, {\n    name: \"mintFee\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"mintFeeToken\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"createCollection\",\n  outputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }],\n  name: \"mintAndRegisterIp\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"mintAndRegisterIpAndAttachPILTerms\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"derivData\",\n    internalType: \"struct IStoryProtocolGateway.MakeDerivative\",\n    type: \"tuple\",\n    components: [{\n      name: \"parentIpIds\",\n      internalType: \"address[]\",\n      type: \"address[]\"\n    }, {\n      name: \"licenseTemplate\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTermsIds\",\n      internalType: \"uint256[]\",\n      type: \"uint256[]\"\n    }, {\n      name: \"royaltyContext\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"mintAndRegisterIpAndMakeDerivative\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"data\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  name: \"multicall\",\n  outputs: [{\n    name: \"results\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onERC721Received\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIp\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"sigAttach\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIpAndAttachPILTerms\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"derivData\",\n    internalType: \"struct IStoryProtocolGateway.MakeDerivative\",\n    type: \"tuple\",\n    components: [{\n      name: \"parentIpIds\",\n      internalType: \"address[]\",\n      type: \"address[]\"\n    }, {\n      name: \"licenseTemplate\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTermsIds\",\n      internalType: \"uint256[]\",\n      type: \"uint256[]\"\n    }, {\n      name: \"royaltyContext\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"sigRegister\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIpAndMakeDerivative\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"sigRegister\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"registerPILTermsAndAttach\",\n  outputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newNftContractBeacon\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setNftContractBeacon\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newNftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"upgradeCollections\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar spgAddress = {\n  1513: \"0x69415CE984A79a3Cfbe3F51024C63b6C107331e3\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SDK\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// COMMON =============================================================\n\nfunction getAddress(address, chainId) {\n  return address[chainId || 0] || \"0x\";\n}\n\n// Contract AccessController =============================================================\n\n/**\n * AccessControllerPermissionSetEvent\n *\n * @param ipAccountOwner address\n * @param ipAccount address\n * @param signer address\n * @param to address\n * @param func bytes4\n * @param permission uint8\n */\n\n/**\n * AccessControllerSetAllPermissionsRequest\n *\n * @param ipAccount address\n * @param signer address\n * @param permission uint8\n */\n\n/**\n * AccessControllerSetBatchPermissionsRequest\n *\n * @param permissions tuple[]\n */\n\n/**\n * AccessControllerSetPermissionRequest\n *\n * @param ipAccount address\n * @param signer address\n * @param to address\n * @param func bytes4\n * @param permission uint8\n */\n\n/**\n * contract AccessController event\n */\nvar AccessControllerEventClient = /*#__PURE__*/function () {\n  function AccessControllerEventClient(rpcClient, address) {\n    var _rpcClient$chain;\n    _classCallCheck(this, AccessControllerEventClient);\n    this.address = address || getAddress(accessControllerAddress, (_rpcClient$chain = rpcClient.chain) === null || _rpcClient$chain === void 0 ? void 0 : _rpcClient$chain.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event PermissionSet for contract AccessController\n   */\n  return _createClass(AccessControllerEventClient, [{\n    key: \"watchPermissionSetEvent\",\n    value: function watchPermissionSetEvent(_onLogs) {\n      return this.rpcClient.watchContractEvent({\n        abi: accessControllerAbi,\n        address: this.address,\n        eventName: \"PermissionSet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event PermissionSet for contract AccessController\n     */\n  }, {\n    key: \"parseTxPermissionSetEvent\",\n    value: function parseTxPermissionSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator = _createForOfIteratorHelper(txReceipt.logs),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var log = _step.value;\n          try {\n            var event = decodeEventLog({\n              abi: accessControllerAbi,\n              eventName: \"PermissionSet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"PermissionSet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract AccessController write method\n */\nvar AccessControllerClient = /*#__PURE__*/function (_AccessControllerEven) {\n  function AccessControllerClient(rpcClient, wallet, address) {\n    var _this;\n    _classCallCheck(this, AccessControllerClient);\n    _this = _callSuper(this, AccessControllerClient, [rpcClient, address]);\n    _this.wallet = wallet;\n    return _this;\n  }\n\n  /**\n   * method setAllPermissions for contract AccessController\n   *\n   * @param request AccessControllerSetAllPermissionsRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(AccessControllerClient, _AccessControllerEven);\n  return _createClass(AccessControllerClient, [{\n    key: \"setAllPermissions\",\n    value: function () {\n      var _setAllPermissions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _yield$this$rpcClient, call;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: accessControllerAbi,\n                address: this.address,\n                functionName: \"setAllPermissions\",\n                account: this.wallet.account,\n                args: [request.ipAccount, request.signer, request.permission]\n              });\n            case 2:\n              _yield$this$rpcClient = _context.sent;\n              call = _yield$this$rpcClient.request;\n              _context.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function setAllPermissions(_x) {\n        return _setAllPermissions.apply(this, arguments);\n      }\n      return setAllPermissions;\n    }()\n    /**\n     * method setAllPermissions for contract AccessController with only encode\n     *\n     * @param request AccessControllerSetAllPermissionsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setAllPermissionsEncode\",\n    value: function setAllPermissionsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: accessControllerAbi,\n          functionName: \"setAllPermissions\",\n          args: [request.ipAccount, request.signer, request.permission]\n        })\n      };\n    }\n\n    /**\n     * method setBatchPermissions for contract AccessController\n     *\n     * @param request AccessControllerSetBatchPermissionsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setBatchPermissions\",\n    value: function () {\n      var _setBatchPermissions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _yield$this$rpcClient2, call;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: accessControllerAbi,\n                address: this.address,\n                functionName: \"setBatchPermissions\",\n                account: this.wallet.account,\n                args: [request.permissions]\n              });\n            case 2:\n              _yield$this$rpcClient2 = _context2.sent;\n              call = _yield$this$rpcClient2.request;\n              _context2.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function setBatchPermissions(_x2) {\n        return _setBatchPermissions.apply(this, arguments);\n      }\n      return setBatchPermissions;\n    }()\n    /**\n     * method setBatchPermissions for contract AccessController with only encode\n     *\n     * @param request AccessControllerSetBatchPermissionsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setBatchPermissionsEncode\",\n    value: function setBatchPermissionsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: accessControllerAbi,\n          functionName: \"setBatchPermissions\",\n          args: [request.permissions]\n        })\n      };\n    }\n\n    /**\n     * method setPermission for contract AccessController\n     *\n     * @param request AccessControllerSetPermissionRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setPermission\",\n    value: function () {\n      var _setPermission = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _yield$this$rpcClient3, call;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: accessControllerAbi,\n                address: this.address,\n                functionName: \"setPermission\",\n                account: this.wallet.account,\n                args: [request.ipAccount, request.signer, request.to, request.func, request.permission]\n              });\n            case 2:\n              _yield$this$rpcClient3 = _context3.sent;\n              call = _yield$this$rpcClient3.request;\n              _context3.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function setPermission(_x3) {\n        return _setPermission.apply(this, arguments);\n      }\n      return setPermission;\n    }()\n    /**\n     * method setPermission for contract AccessController with only encode\n     *\n     * @param request AccessControllerSetPermissionRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setPermissionEncode\",\n    value: function setPermissionEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: accessControllerAbi,\n          functionName: \"setPermission\",\n          args: [request.ipAccount, request.signer, request.to, request.func, request.permission]\n        })\n      };\n    }\n  }]);\n}(AccessControllerEventClient);\n\n// Contract CoreMetadataModule =============================================================\n\n/**\n * CoreMetadataModuleAuthorityUpdatedEvent\n *\n * @param authority address\n */\n\n/**\n * CoreMetadataModuleInitializedEvent\n *\n * @param version uint64\n */\n\n/**\n * CoreMetadataModuleMetadataFrozenEvent\n *\n * @param ipId address\n */\n\n/**\n * CoreMetadataModuleMetadataUriSetEvent\n *\n * @param ipId address\n * @param metadataURI string\n * @param metadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleNftTokenUriSetEvent\n *\n * @param ipId address\n * @param nftTokenURI string\n * @param nftMetadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleUpgradedEvent\n *\n * @param implementation address\n */\n\n/**\n * CoreMetadataModuleIsMetadataFrozenRequest\n *\n * @param ipId address\n */\n\n/**\n * CoreMetadataModuleSupportsInterfaceRequest\n *\n * @param interfaceId bytes4\n */\n\n/**\n * CoreMetadataModuleFreezeMetadataRequest\n *\n * @param ipId address\n */\n\n/**\n * CoreMetadataModuleInitializeRequest\n *\n * @param accessManager address\n */\n\n/**\n * CoreMetadataModuleSetAllRequest\n *\n * @param ipId address\n * @param metadataURI string\n * @param metadataHash bytes32\n * @param nftMetadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleSetAuthorityRequest\n *\n * @param newAuthority address\n */\n\n/**\n * CoreMetadataModuleSetMetadataUriRequest\n *\n * @param ipId address\n * @param metadataURI string\n * @param metadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleUpdateNftTokenUriRequest\n *\n * @param ipId address\n * @param nftMetadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleUpgradeToAndCallRequest\n *\n * @param newImplementation address\n * @param data bytes\n */\n\n/**\n * contract CoreMetadataModule event\n */\nvar CoreMetadataModuleEventClient = /*#__PURE__*/function () {\n  function CoreMetadataModuleEventClient(rpcClient, address) {\n    var _rpcClient$chain2;\n    _classCallCheck(this, CoreMetadataModuleEventClient);\n    this.address = address || getAddress(coreMetadataModuleAddress, (_rpcClient$chain2 = rpcClient.chain) === null || _rpcClient$chain2 === void 0 ? void 0 : _rpcClient$chain2.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event AuthorityUpdated for contract CoreMetadataModule\n   */\n  return _createClass(CoreMetadataModuleEventClient, [{\n    key: \"watchAuthorityUpdatedEvent\",\n    value: function watchAuthorityUpdatedEvent(_onLogs2) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"AuthorityUpdated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs2(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event AuthorityUpdated for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxAuthorityUpdatedEvent\",\n    value: function parseTxAuthorityUpdatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator2 = _createForOfIteratorHelper(txReceipt.logs),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var log = _step2.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"AuthorityUpdated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"AuthorityUpdated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Initialized for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchInitializedEvent\",\n    value: function watchInitializedEvent(_onLogs3) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"Initialized\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs3(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Initialized for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxInitializedEvent\",\n    value: function parseTxInitializedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator3 = _createForOfIteratorHelper(txReceipt.logs),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var log = _step3.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"Initialized\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Initialized\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event MetadataFrozen for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchMetadataFrozenEvent\",\n    value: function watchMetadataFrozenEvent(_onLogs4) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"MetadataFrozen\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs4(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event MetadataFrozen for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxMetadataFrozenEvent\",\n    value: function parseTxMetadataFrozenEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator4 = _createForOfIteratorHelper(txReceipt.logs),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var log = _step4.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"MetadataFrozen\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"MetadataFrozen\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event MetadataURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchMetadataUriSetEvent\",\n    value: function watchMetadataUriSetEvent(_onLogs5) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"MetadataURISet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs5(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event MetadataURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxMetadataUriSetEvent\",\n    value: function parseTxMetadataUriSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator5 = _createForOfIteratorHelper(txReceipt.logs),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var log = _step5.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"MetadataURISet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"MetadataURISet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event NFTTokenURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchNftTokenUriSetEvent\",\n    value: function watchNftTokenUriSetEvent(_onLogs6) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"NFTTokenURISet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs6(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event NFTTokenURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxNftTokenUriSetEvent\",\n    value: function parseTxNftTokenUriSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator6 = _createForOfIteratorHelper(txReceipt.logs),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var log = _step6.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"NFTTokenURISet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"NFTTokenURISet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Upgraded for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchUpgradedEvent\",\n    value: function watchUpgradedEvent(_onLogs7) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"Upgraded\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs7(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Upgraded for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxUpgradedEvent\",\n    value: function parseTxUpgradedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator7 = _createForOfIteratorHelper(txReceipt.logs),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var log = _step7.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"Upgraded\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Upgraded\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract CoreMetadataModule readonly method\n */\nvar CoreMetadataModuleReadOnlyClient = /*#__PURE__*/function (_CoreMetadataModuleEv) {\n  function CoreMetadataModuleReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, CoreMetadataModuleReadOnlyClient);\n    return _callSuper(this, CoreMetadataModuleReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method ACCESS_CONTROLLER for contract CoreMetadataModule\n   *\n   * @param request CoreMetadataModuleAccessControllerRequest\n   * @return Promise<CoreMetadataModuleAccessControllerResponse>\n   */\n  _inherits(CoreMetadataModuleReadOnlyClient, _CoreMetadataModuleEv);\n  return _createClass(CoreMetadataModuleReadOnlyClient, [{\n    key: \"accessController\",\n    value: function () {\n      var _accessController = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"ACCESS_CONTROLLER\"\n              });\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function accessController() {\n        return _accessController.apply(this, arguments);\n      }\n      return accessController;\n    }()\n    /**\n     * method IP_ACCOUNT_REGISTRY for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleIpAccountRegistryRequest\n     * @return Promise<CoreMetadataModuleIpAccountRegistryResponse>\n     */\n  }, {\n    key: \"ipAccountRegistry\",\n    value: function () {\n      var _ipAccountRegistry = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"IP_ACCOUNT_REGISTRY\"\n              });\n            case 2:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function ipAccountRegistry() {\n        return _ipAccountRegistry.apply(this, arguments);\n      }\n      return ipAccountRegistry;\n    }()\n    /**\n     * method UPGRADE_INTERFACE_VERSION for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleUpgradeInterfaceVersionRequest\n     * @return Promise<CoreMetadataModuleUpgradeInterfaceVersionResponse>\n     */\n  }, {\n    key: \"upgradeInterfaceVersion\",\n    value: function () {\n      var _upgradeInterfaceVersion = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"UPGRADE_INTERFACE_VERSION\"\n              });\n            case 2:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function upgradeInterfaceVersion() {\n        return _upgradeInterfaceVersion.apply(this, arguments);\n      }\n      return upgradeInterfaceVersion;\n    }()\n    /**\n     * method authority for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleAuthorityRequest\n     * @return Promise<CoreMetadataModuleAuthorityResponse>\n     */\n  }, {\n    key: \"authority\",\n    value: function () {\n      var _authority = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"authority\"\n              });\n            case 2:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function authority() {\n        return _authority.apply(this, arguments);\n      }\n      return authority;\n    }()\n    /**\n     * method isConsumingScheduledOp for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleIsConsumingScheduledOpRequest\n     * @return Promise<CoreMetadataModuleIsConsumingScheduledOpResponse>\n     */\n  }, {\n    key: \"isConsumingScheduledOp\",\n    value: function () {\n      var _isConsumingScheduledOp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"isConsumingScheduledOp\"\n              });\n            case 2:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function isConsumingScheduledOp() {\n        return _isConsumingScheduledOp.apply(this, arguments);\n      }\n      return isConsumingScheduledOp;\n    }()\n    /**\n     * method isMetadataFrozen for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleIsMetadataFrozenRequest\n     * @return Promise<CoreMetadataModuleIsMetadataFrozenResponse>\n     */\n  }, {\n    key: \"isMetadataFrozen\",\n    value: function () {\n      var _isMetadataFrozen = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(request) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"isMetadataFrozen\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context9.abrupt(\"return\", _context9.sent);\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function isMetadataFrozen(_x4) {\n        return _isMetadataFrozen.apply(this, arguments);\n      }\n      return isMetadataFrozen;\n    }()\n    /**\n     * method name for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleNameRequest\n     * @return Promise<CoreMetadataModuleNameResponse>\n     */\n  }, {\n    key: \"name\",\n    value: function () {\n      var _name = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"name\"\n              });\n            case 2:\n              return _context10.abrupt(\"return\", _context10.sent);\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function name() {\n        return _name.apply(this, arguments);\n      }\n      return name;\n    }()\n    /**\n     * method proxiableUUID for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleProxiableUuidRequest\n     * @return Promise<CoreMetadataModuleProxiableUuidResponse>\n     */\n  }, {\n    key: \"proxiableUuid\",\n    value: function () {\n      var _proxiableUuid = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"proxiableUUID\"\n              });\n            case 2:\n              return _context11.abrupt(\"return\", _context11.sent);\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function proxiableUuid() {\n        return _proxiableUuid.apply(this, arguments);\n      }\n      return proxiableUuid;\n    }()\n    /**\n     * method supportsInterface for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSupportsInterfaceRequest\n     * @return Promise<CoreMetadataModuleSupportsInterfaceResponse>\n     */\n  }, {\n    key: \"supportsInterface\",\n    value: function () {\n      var _supportsInterface = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"supportsInterface\",\n                args: [request.interfaceId]\n              });\n            case 2:\n              return _context12.abrupt(\"return\", _context12.sent);\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function supportsInterface(_x5) {\n        return _supportsInterface.apply(this, arguments);\n      }\n      return supportsInterface;\n    }()\n  }]);\n}(CoreMetadataModuleEventClient);\n\n/**\n * contract CoreMetadataModule write method\n */\nvar CoreMetadataModuleClient = /*#__PURE__*/function (_CoreMetadataModuleRe) {\n  function CoreMetadataModuleClient(rpcClient, wallet, address) {\n    var _this2;\n    _classCallCheck(this, CoreMetadataModuleClient);\n    _this2 = _callSuper(this, CoreMetadataModuleClient, [rpcClient, address]);\n    _this2.wallet = wallet;\n    return _this2;\n  }\n\n  /**\n   * method freezeMetadata for contract CoreMetadataModule\n   *\n   * @param request CoreMetadataModuleFreezeMetadataRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(CoreMetadataModuleClient, _CoreMetadataModuleRe);\n  return _createClass(CoreMetadataModuleClient, [{\n    key: \"freezeMetadata\",\n    value: function () {\n      var _freezeMetadata = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request) {\n        var _yield$this$rpcClient4, call;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"freezeMetadata\",\n                account: this.wallet.account,\n                args: [request.ipId]\n              });\n            case 2:\n              _yield$this$rpcClient4 = _context13.sent;\n              call = _yield$this$rpcClient4.request;\n              _context13.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context13.abrupt(\"return\", _context13.sent);\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function freezeMetadata(_x6) {\n        return _freezeMetadata.apply(this, arguments);\n      }\n      return freezeMetadata;\n    }()\n    /**\n     * method freezeMetadata for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleFreezeMetadataRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"freezeMetadataEncode\",\n    value: function freezeMetadataEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"freezeMetadata\",\n          args: [request.ipId]\n        })\n      };\n    }\n\n    /**\n     * method initialize for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleInitializeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"initialize\",\n    value: function () {\n      var _initialize = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request) {\n        var _yield$this$rpcClient5, call;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"initialize\",\n                account: this.wallet.account,\n                args: [request.accessManager]\n              });\n            case 2:\n              _yield$this$rpcClient5 = _context14.sent;\n              call = _yield$this$rpcClient5.request;\n              _context14.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context14.abrupt(\"return\", _context14.sent);\n            case 7:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function initialize(_x7) {\n        return _initialize.apply(this, arguments);\n      }\n      return initialize;\n    }()\n    /**\n     * method initialize for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleInitializeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"initializeEncode\",\n    value: function initializeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"initialize\",\n          args: [request.accessManager]\n        })\n      };\n    }\n\n    /**\n     * method setAll for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSetAllRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setAll\",\n    value: function () {\n      var _setAll = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee15(request) {\n        var _yield$this$rpcClient6, call;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"setAll\",\n                account: this.wallet.account,\n                args: [request.ipId, request.metadataURI, request.metadataHash, request.nftMetadataHash]\n              });\n            case 2:\n              _yield$this$rpcClient6 = _context15.sent;\n              call = _yield$this$rpcClient6.request;\n              _context15.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context15.abrupt(\"return\", _context15.sent);\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function setAll(_x8) {\n        return _setAll.apply(this, arguments);\n      }\n      return setAll;\n    }()\n    /**\n     * method setAll for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleSetAllRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setAllEncode\",\n    value: function setAllEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"setAll\",\n          args: [request.ipId, request.metadataURI, request.metadataHash, request.nftMetadataHash]\n        })\n      };\n    }\n\n    /**\n     * method setAuthority for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSetAuthorityRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setAuthority\",\n    value: function () {\n      var _setAuthority = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee16(request) {\n        var _yield$this$rpcClient7, call;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"setAuthority\",\n                account: this.wallet.account,\n                args: [request.newAuthority]\n              });\n            case 2:\n              _yield$this$rpcClient7 = _context16.sent;\n              call = _yield$this$rpcClient7.request;\n              _context16.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context16.abrupt(\"return\", _context16.sent);\n            case 7:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function setAuthority(_x9) {\n        return _setAuthority.apply(this, arguments);\n      }\n      return setAuthority;\n    }()\n    /**\n     * method setAuthority for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleSetAuthorityRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setAuthorityEncode\",\n    value: function setAuthorityEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"setAuthority\",\n          args: [request.newAuthority]\n        })\n      };\n    }\n\n    /**\n     * method setMetadataURI for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSetMetadataUriRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setMetadataUri\",\n    value: function () {\n      var _setMetadataUri = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee17(request) {\n        var _yield$this$rpcClient8, call;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"setMetadataURI\",\n                account: this.wallet.account,\n                args: [request.ipId, request.metadataURI, request.metadataHash]\n              });\n            case 2:\n              _yield$this$rpcClient8 = _context17.sent;\n              call = _yield$this$rpcClient8.request;\n              _context17.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context17.abrupt(\"return\", _context17.sent);\n            case 7:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n      function setMetadataUri(_x10) {\n        return _setMetadataUri.apply(this, arguments);\n      }\n      return setMetadataUri;\n    }()\n    /**\n     * method setMetadataURI for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleSetMetadataUriRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setMetadataUriEncode\",\n    value: function setMetadataUriEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"setMetadataURI\",\n          args: [request.ipId, request.metadataURI, request.metadataHash]\n        })\n      };\n    }\n\n    /**\n     * method updateNftTokenURI for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleUpdateNftTokenUriRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"updateNftTokenUri\",\n    value: function () {\n      var _updateNftTokenUri = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee18(request) {\n        var _yield$this$rpcClient9, call;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"updateNftTokenURI\",\n                account: this.wallet.account,\n                args: [request.ipId, request.nftMetadataHash]\n              });\n            case 2:\n              _yield$this$rpcClient9 = _context18.sent;\n              call = _yield$this$rpcClient9.request;\n              _context18.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context18.abrupt(\"return\", _context18.sent);\n            case 7:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function updateNftTokenUri(_x11) {\n        return _updateNftTokenUri.apply(this, arguments);\n      }\n      return updateNftTokenUri;\n    }()\n    /**\n     * method updateNftTokenURI for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleUpdateNftTokenUriRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"updateNftTokenUriEncode\",\n    value: function updateNftTokenUriEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"updateNftTokenURI\",\n          args: [request.ipId, request.nftMetadataHash]\n        })\n      };\n    }\n\n    /**\n     * method upgradeToAndCall for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleUpgradeToAndCallRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"upgradeToAndCall\",\n    value: function () {\n      var _upgradeToAndCall = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee19(request) {\n        var _yield$this$rpcClient10, call;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"upgradeToAndCall\",\n                account: this.wallet.account,\n                args: [request.newImplementation, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient10 = _context19.sent;\n              call = _yield$this$rpcClient10.request;\n              _context19.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context19.abrupt(\"return\", _context19.sent);\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function upgradeToAndCall(_x12) {\n        return _upgradeToAndCall.apply(this, arguments);\n      }\n      return upgradeToAndCall;\n    }()\n    /**\n     * method upgradeToAndCall for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleUpgradeToAndCallRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"upgradeToAndCallEncode\",\n    value: function upgradeToAndCallEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"upgradeToAndCall\",\n          args: [request.newImplementation, request.data]\n        })\n      };\n    }\n  }]);\n}(CoreMetadataModuleReadOnlyClient);\n\n// Contract DisputeModule =============================================================\n\n/**\n * DisputeModuleDisputeCancelledEvent\n *\n * @param disputeId uint256\n * @param data bytes\n */\n\n/**\n * DisputeModuleDisputeRaisedEvent\n *\n * @param disputeId uint256\n * @param targetIpId address\n * @param disputeInitiator address\n * @param arbitrationPolicy address\n * @param linkToDisputeEvidence bytes32\n * @param targetTag bytes32\n * @param data bytes\n */\n\n/**\n * DisputeModuleDisputeResolvedEvent\n *\n * @param disputeId uint256\n */\n\n/**\n * DisputeModuleCancelDisputeRequest\n *\n * @param disputeId uint256\n * @param data bytes\n */\n\n/**\n * DisputeModuleRaiseDisputeRequest\n *\n * @param targetIpId address\n * @param linkToDisputeEvidence string\n * @param targetTag bytes32\n * @param data bytes\n */\n\n/**\n * DisputeModuleResolveDisputeRequest\n *\n * @param disputeId uint256\n * @param data bytes\n */\n\n/**\n * contract DisputeModule event\n */\nvar DisputeModuleEventClient = /*#__PURE__*/function () {\n  function DisputeModuleEventClient(rpcClient, address) {\n    var _rpcClient$chain3;\n    _classCallCheck(this, DisputeModuleEventClient);\n    this.address = address || getAddress(disputeModuleAddress, (_rpcClient$chain3 = rpcClient.chain) === null || _rpcClient$chain3 === void 0 ? void 0 : _rpcClient$chain3.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event DisputeCancelled for contract DisputeModule\n   */\n  return _createClass(DisputeModuleEventClient, [{\n    key: \"watchDisputeCancelledEvent\",\n    value: function watchDisputeCancelledEvent(_onLogs8) {\n      return this.rpcClient.watchContractEvent({\n        abi: disputeModuleAbi,\n        address: this.address,\n        eventName: \"DisputeCancelled\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs8(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DisputeCancelled for contract DisputeModule\n     */\n  }, {\n    key: \"parseTxDisputeCancelledEvent\",\n    value: function parseTxDisputeCancelledEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator8 = _createForOfIteratorHelper(txReceipt.logs),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var log = _step8.value;\n          try {\n            var event = decodeEventLog({\n              abi: disputeModuleAbi,\n              eventName: \"DisputeCancelled\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DisputeCancelled\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DisputeRaised for contract DisputeModule\n     */\n  }, {\n    key: \"watchDisputeRaisedEvent\",\n    value: function watchDisputeRaisedEvent(_onLogs9) {\n      return this.rpcClient.watchContractEvent({\n        abi: disputeModuleAbi,\n        address: this.address,\n        eventName: \"DisputeRaised\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs9(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DisputeRaised for contract DisputeModule\n     */\n  }, {\n    key: \"parseTxDisputeRaisedEvent\",\n    value: function parseTxDisputeRaisedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator9 = _createForOfIteratorHelper(txReceipt.logs),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var log = _step9.value;\n          try {\n            var event = decodeEventLog({\n              abi: disputeModuleAbi,\n              eventName: \"DisputeRaised\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DisputeRaised\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DisputeResolved for contract DisputeModule\n     */\n  }, {\n    key: \"watchDisputeResolvedEvent\",\n    value: function watchDisputeResolvedEvent(_onLogs10) {\n      return this.rpcClient.watchContractEvent({\n        abi: disputeModuleAbi,\n        address: this.address,\n        eventName: \"DisputeResolved\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs10(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DisputeResolved for contract DisputeModule\n     */\n  }, {\n    key: \"parseTxDisputeResolvedEvent\",\n    value: function parseTxDisputeResolvedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator10 = _createForOfIteratorHelper(txReceipt.logs),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var log = _step10.value;\n          try {\n            var event = decodeEventLog({\n              abi: disputeModuleAbi,\n              eventName: \"DisputeResolved\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DisputeResolved\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract DisputeModule write method\n */\nvar DisputeModuleClient = /*#__PURE__*/function (_DisputeModuleEventCl) {\n  function DisputeModuleClient(rpcClient, wallet, address) {\n    var _this3;\n    _classCallCheck(this, DisputeModuleClient);\n    _this3 = _callSuper(this, DisputeModuleClient, [rpcClient, address]);\n    _this3.wallet = wallet;\n    return _this3;\n  }\n\n  /**\n   * method cancelDispute for contract DisputeModule\n   *\n   * @param request DisputeModuleCancelDisputeRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(DisputeModuleClient, _DisputeModuleEventCl);\n  return _createClass(DisputeModuleClient, [{\n    key: \"cancelDispute\",\n    value: function () {\n      var _cancelDispute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee20(request) {\n        var _yield$this$rpcClient11, call;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: disputeModuleAbi,\n                address: this.address,\n                functionName: \"cancelDispute\",\n                account: this.wallet.account,\n                args: [request.disputeId, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient11 = _context20.sent;\n              call = _yield$this$rpcClient11.request;\n              _context20.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context20.abrupt(\"return\", _context20.sent);\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function cancelDispute(_x13) {\n        return _cancelDispute.apply(this, arguments);\n      }\n      return cancelDispute;\n    }()\n    /**\n     * method cancelDispute for contract DisputeModule with only encode\n     *\n     * @param request DisputeModuleCancelDisputeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"cancelDisputeEncode\",\n    value: function cancelDisputeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: disputeModuleAbi,\n          functionName: \"cancelDispute\",\n          args: [request.disputeId, request.data]\n        })\n      };\n    }\n\n    /**\n     * method raiseDispute for contract DisputeModule\n     *\n     * @param request DisputeModuleRaiseDisputeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"raiseDispute\",\n    value: function () {\n      var _raiseDispute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee21(request) {\n        var _yield$this$rpcClient12, call;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: disputeModuleAbi,\n                address: this.address,\n                functionName: \"raiseDispute\",\n                account: this.wallet.account,\n                args: [request.targetIpId, request.linkToDisputeEvidence, request.targetTag, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient12 = _context21.sent;\n              call = _yield$this$rpcClient12.request;\n              _context21.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context21.abrupt(\"return\", _context21.sent);\n            case 7:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function raiseDispute(_x14) {\n        return _raiseDispute.apply(this, arguments);\n      }\n      return raiseDispute;\n    }()\n    /**\n     * method raiseDispute for contract DisputeModule with only encode\n     *\n     * @param request DisputeModuleRaiseDisputeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"raiseDisputeEncode\",\n    value: function raiseDisputeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: disputeModuleAbi,\n          functionName: \"raiseDispute\",\n          args: [request.targetIpId, request.linkToDisputeEvidence, request.targetTag, request.data]\n        })\n      };\n    }\n\n    /**\n     * method resolveDispute for contract DisputeModule\n     *\n     * @param request DisputeModuleResolveDisputeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"resolveDispute\",\n    value: function () {\n      var _resolveDispute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee22(request) {\n        var _yield$this$rpcClient13, call;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: disputeModuleAbi,\n                address: this.address,\n                functionName: \"resolveDispute\",\n                account: this.wallet.account,\n                args: [request.disputeId, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient13 = _context22.sent;\n              call = _yield$this$rpcClient13.request;\n              _context22.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context22.abrupt(\"return\", _context22.sent);\n            case 7:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function resolveDispute(_x15) {\n        return _resolveDispute.apply(this, arguments);\n      }\n      return resolveDispute;\n    }()\n    /**\n     * method resolveDispute for contract DisputeModule with only encode\n     *\n     * @param request DisputeModuleResolveDisputeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"resolveDisputeEncode\",\n    value: function resolveDisputeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: disputeModuleAbi,\n          functionName: \"resolveDispute\",\n          args: [request.disputeId, request.data]\n        })\n      };\n    }\n  }]);\n}(DisputeModuleEventClient);\n\n// Contract IPAccountImpl =============================================================\n\n/**\n * IpAccountImplStateResponse\n *\n * @param result bytes32\n */\n\n/**\n * IpAccountImplTokenResponse\n *\n * @param 0 uint256\n * @param 1 address\n * @param 2 uint256\n */\n\n/**\n * IpAccountImplExecuteRequest\n *\n * @param to address\n * @param value uint256\n * @param data bytes\n * @param operation uint8\n */\n\n/**\n * IpAccountImplExecute2Request\n *\n * @param to address\n * @param value uint256\n * @param data bytes\n */\n\n/**\n * IpAccountImplExecuteWithSigRequest\n *\n * @param to address\n * @param value uint256\n * @param data bytes\n * @param signer address\n * @param deadline uint256\n * @param signature bytes\n */\n\n/**\n * contract IPAccountImpl readonly method\n */\nvar IpAccountImplReadOnlyClient = /*#__PURE__*/function () {\n  function IpAccountImplReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain4;\n    _classCallCheck(this, IpAccountImplReadOnlyClient);\n    this.address = address || getAddress(ipAccountImplAddress, (_rpcClient$chain4 = rpcClient.chain) === null || _rpcClient$chain4 === void 0 ? void 0 : _rpcClient$chain4.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method state for contract IPAccountImpl\n   *\n   * @param request IpAccountImplStateRequest\n   * @return Promise<IpAccountImplStateResponse>\n   */\n  return _createClass(IpAccountImplReadOnlyClient, [{\n    key: \"state\",\n    value: function () {\n      var _state = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"state\"\n              });\n            case 2:\n              result = _context23.sent;\n              return _context23.abrupt(\"return\", {\n                result: result\n              });\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function state() {\n        return _state.apply(this, arguments);\n      }\n      return state;\n    }()\n    /**\n     * method token for contract IPAccountImpl\n     *\n     * @param request IpAccountImplTokenRequest\n     * @return Promise<IpAccountImplTokenResponse>\n     */\n  }, {\n    key: \"token\",\n    value: function () {\n      var _token = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"token\"\n              });\n            case 2:\n              return _context24.abrupt(\"return\", _context24.sent);\n            case 3:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function token() {\n        return _token.apply(this, arguments);\n      }\n      return token;\n    }()\n  }]);\n}();\n\n/**\n * contract IPAccountImpl write method\n */\nvar IpAccountImplClient = /*#__PURE__*/function (_IpAccountImplReadOnl) {\n  function IpAccountImplClient(rpcClient, wallet, address) {\n    var _this4;\n    _classCallCheck(this, IpAccountImplClient);\n    _this4 = _callSuper(this, IpAccountImplClient, [rpcClient, address]);\n    _this4.wallet = wallet;\n    return _this4;\n  }\n\n  /**\n   * method execute for contract IPAccountImpl\n   *\n   * @param request IpAccountImplExecuteRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(IpAccountImplClient, _IpAccountImplReadOnl);\n  return _createClass(IpAccountImplClient, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee25(request) {\n        var _yield$this$rpcClient14, call;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"execute\",\n                account: this.wallet.account,\n                args: [request.to, request.value, request.data, request.operation]\n              });\n            case 2:\n              _yield$this$rpcClient14 = _context25.sent;\n              call = _yield$this$rpcClient14.request;\n              _context25.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context25.abrupt(\"return\", _context25.sent);\n            case 7:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function execute(_x16) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\n     * method execute for contract IPAccountImpl with only encode\n     *\n     * @param request IpAccountImplExecuteRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"executeEncode\",\n    value: function executeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAccountImplAbi,\n          functionName: \"execute\",\n          args: [request.to, request.value, request.data, request.operation]\n        })\n      };\n    }\n\n    /**\n     * method execute for contract IPAccountImpl\n     *\n     * @param request IpAccountImplExecute2Request\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"execute2\",\n    value: function () {\n      var _execute2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee26(request) {\n        var _yield$this$rpcClient15, call;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"execute\",\n                account: this.wallet.account,\n                args: [request.to, request.value, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient15 = _context26.sent;\n              call = _yield$this$rpcClient15.request;\n              _context26.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context26.abrupt(\"return\", _context26.sent);\n            case 7:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function execute2(_x17) {\n        return _execute2.apply(this, arguments);\n      }\n      return execute2;\n    }()\n    /**\n     * method execute for contract IPAccountImpl with only encode\n     *\n     * @param request IpAccountImplExecute2Request\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"execute2Encode\",\n    value: function execute2Encode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAccountImplAbi,\n          functionName: \"execute\",\n          args: [request.to, request.value, request.data]\n        })\n      };\n    }\n\n    /**\n     * method executeWithSig for contract IPAccountImpl\n     *\n     * @param request IpAccountImplExecuteWithSigRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"executeWithSig\",\n    value: function () {\n      var _executeWithSig = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee27(request) {\n        var _yield$this$rpcClient16, call;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"executeWithSig\",\n                account: this.wallet.account,\n                args: [request.to, request.value, request.data, request.signer, request.deadline, request.signature]\n              });\n            case 2:\n              _yield$this$rpcClient16 = _context27.sent;\n              call = _yield$this$rpcClient16.request;\n              _context27.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context27.abrupt(\"return\", _context27.sent);\n            case 7:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function executeWithSig(_x18) {\n        return _executeWithSig.apply(this, arguments);\n      }\n      return executeWithSig;\n    }()\n    /**\n     * method executeWithSig for contract IPAccountImpl with only encode\n     *\n     * @param request IpAccountImplExecuteWithSigRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"executeWithSigEncode\",\n    value: function executeWithSigEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAccountImplAbi,\n          functionName: \"executeWithSig\",\n          args: [request.to, request.value, request.data, request.signer, request.deadline, request.signature]\n        })\n      };\n    }\n  }]);\n}(IpAccountImplReadOnlyClient);\n\n// Contract IPAssetRegistry =============================================================\n\n/**\n * IpAssetRegistryIpAccountRegisteredEvent\n *\n * @param account address\n * @param implementation address\n * @param chainId uint256\n * @param tokenContract address\n * @param tokenId uint256\n */\n\n/**\n * IpAssetRegistryIpRegisteredEvent\n *\n * @param ipId address\n * @param chainId uint256\n * @param tokenContract address\n * @param tokenId uint256\n * @param name string\n * @param uri string\n * @param registrationDate uint256\n */\n\n/**\n * IpAssetRegistryIpIdRequest\n *\n * @param chainId uint256\n * @param tokenContract address\n * @param tokenId uint256\n */\n\n/**\n * IpAssetRegistryIsRegisteredRequest\n *\n * @param id address\n */\n\n/**\n * IpAssetRegistryRegisterRequest\n *\n * @param chainid uint256\n * @param tokenContract address\n * @param tokenId uint256\n */\n\n/**\n * contract IPAssetRegistry event\n */\nvar IpAssetRegistryEventClient = /*#__PURE__*/function () {\n  function IpAssetRegistryEventClient(rpcClient, address) {\n    var _rpcClient$chain5;\n    _classCallCheck(this, IpAssetRegistryEventClient);\n    this.address = address || getAddress(ipAssetRegistryAddress, (_rpcClient$chain5 = rpcClient.chain) === null || _rpcClient$chain5 === void 0 ? void 0 : _rpcClient$chain5.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event IPAccountRegistered for contract IPAssetRegistry\n   */\n  return _createClass(IpAssetRegistryEventClient, [{\n    key: \"watchIpAccountRegisteredEvent\",\n    value: function watchIpAccountRegisteredEvent(_onLogs11) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipAssetRegistryAbi,\n        address: this.address,\n        eventName: \"IPAccountRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs11(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event IPAccountRegistered for contract IPAssetRegistry\n     */\n  }, {\n    key: \"parseTxIpAccountRegisteredEvent\",\n    value: function parseTxIpAccountRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator11 = _createForOfIteratorHelper(txReceipt.logs),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var log = _step11.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipAssetRegistryAbi,\n              eventName: \"IPAccountRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"IPAccountRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event IPRegistered for contract IPAssetRegistry\n     */\n  }, {\n    key: \"watchIpRegisteredEvent\",\n    value: function watchIpRegisteredEvent(_onLogs12) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipAssetRegistryAbi,\n        address: this.address,\n        eventName: \"IPRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs12(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event IPRegistered for contract IPAssetRegistry\n     */\n  }, {\n    key: \"parseTxIpRegisteredEvent\",\n    value: function parseTxIpRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator12 = _createForOfIteratorHelper(txReceipt.logs),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var log = _step12.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipAssetRegistryAbi,\n              eventName: \"IPRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"IPRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract IPAssetRegistry readonly method\n */\nvar IpAssetRegistryReadOnlyClient = /*#__PURE__*/function (_IpAssetRegistryEvent) {\n  function IpAssetRegistryReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, IpAssetRegistryReadOnlyClient);\n    return _callSuper(this, IpAssetRegistryReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method ipId for contract IPAssetRegistry\n   *\n   * @param request IpAssetRegistryIpIdRequest\n   * @return Promise<IpAssetRegistryIpIdResponse>\n   */\n  _inherits(IpAssetRegistryReadOnlyClient, _IpAssetRegistryEvent);\n  return _createClass(IpAssetRegistryReadOnlyClient, [{\n    key: \"ipId\",\n    value: function () {\n      var _ipId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee28(request) {\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              _context28.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAssetRegistryAbi,\n                address: this.address,\n                functionName: \"ipId\",\n                args: [request.chainId, request.tokenContract, request.tokenId]\n              });\n            case 2:\n              return _context28.abrupt(\"return\", _context28.sent);\n            case 3:\n            case \"end\":\n              return _context28.stop();\n          }\n        }, _callee28, this);\n      }));\n      function ipId(_x19) {\n        return _ipId.apply(this, arguments);\n      }\n      return ipId;\n    }()\n    /**\n     * method isRegistered for contract IPAssetRegistry\n     *\n     * @param request IpAssetRegistryIsRegisteredRequest\n     * @return Promise<IpAssetRegistryIsRegisteredResponse>\n     */\n  }, {\n    key: \"isRegistered\",\n    value: function () {\n      var _isRegistered = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee29(request) {\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              _context29.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAssetRegistryAbi,\n                address: this.address,\n                functionName: \"isRegistered\",\n                args: [request.id]\n              });\n            case 2:\n              return _context29.abrupt(\"return\", _context29.sent);\n            case 3:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this);\n      }));\n      function isRegistered(_x20) {\n        return _isRegistered.apply(this, arguments);\n      }\n      return isRegistered;\n    }()\n  }]);\n}(IpAssetRegistryEventClient);\n\n/**\n * contract IPAssetRegistry write method\n */\nvar IpAssetRegistryClient = /*#__PURE__*/function (_IpAssetRegistryReadO) {\n  function IpAssetRegistryClient(rpcClient, wallet, address) {\n    var _this5;\n    _classCallCheck(this, IpAssetRegistryClient);\n    _this5 = _callSuper(this, IpAssetRegistryClient, [rpcClient, address]);\n    _this5.wallet = wallet;\n    return _this5;\n  }\n\n  /**\n   * method register for contract IPAssetRegistry\n   *\n   * @param request IpAssetRegistryRegisterRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(IpAssetRegistryClient, _IpAssetRegistryReadO);\n  return _createClass(IpAssetRegistryClient, [{\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee30(request) {\n        var _yield$this$rpcClient17, call;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              _context30.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAssetRegistryAbi,\n                address: this.address,\n                functionName: \"register\",\n                account: this.wallet.account,\n                args: [request.chainid, request.tokenContract, request.tokenId]\n              });\n            case 2:\n              _yield$this$rpcClient17 = _context30.sent;\n              call = _yield$this$rpcClient17.request;\n              _context30.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context30.abrupt(\"return\", _context30.sent);\n            case 7:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this);\n      }));\n      function register(_x21) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n    /**\n     * method register for contract IPAssetRegistry with only encode\n     *\n     * @param request IpAssetRegistryRegisterRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerEncode\",\n    value: function registerEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAssetRegistryAbi,\n          functionName: \"register\",\n          args: [request.chainid, request.tokenContract, request.tokenId]\n        })\n      };\n    }\n  }]);\n}(IpAssetRegistryReadOnlyClient);\n\n// Contract IpRoyaltyVaultImpl =============================================================\n\n/**\n * IpRoyaltyVaultImplRevenueTokenClaimedEvent\n *\n * @param claimer address\n * @param token address\n * @param amount uint256\n */\n\n/**\n * IpRoyaltyVaultImplRoyaltyTokensCollectedEvent\n *\n * @param ancestorIpId address\n * @param royaltyTokensCollected uint256\n */\n\n/**\n * IpRoyaltyVaultImplSnapshotCompletedEvent\n *\n * @param snapshotId uint256\n * @param snapshotTimestamp uint256\n * @param unclaimedTokens uint32\n */\n\n/**\n * IpRoyaltyVaultImplClaimableRevenueRequest\n *\n * @param account address\n * @param snapshotId uint256\n * @param token address\n */\n\n/**\n * IpRoyaltyVaultImplClaimRevenueBySnapshotBatchRequest\n *\n * @param snapshotIds uint256[]\n * @param token address\n */\n\n/**\n * IpRoyaltyVaultImplClaimRevenueByTokenBatchRequest\n *\n * @param snapshotId uint256\n * @param tokenList address[]\n */\n\n/**\n * IpRoyaltyVaultImplCollectRoyaltyTokensRequest\n *\n * @param ancestorIpId address\n */\n\n/**\n * contract IpRoyaltyVaultImpl event\n */\nvar IpRoyaltyVaultImplEventClient = /*#__PURE__*/function () {\n  function IpRoyaltyVaultImplEventClient(rpcClient, address) {\n    var _rpcClient$chain6;\n    _classCallCheck(this, IpRoyaltyVaultImplEventClient);\n    this.address = address || getAddress(ipRoyaltyVaultImplAddress, (_rpcClient$chain6 = rpcClient.chain) === null || _rpcClient$chain6 === void 0 ? void 0 : _rpcClient$chain6.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event RevenueTokenClaimed for contract IpRoyaltyVaultImpl\n   */\n  return _createClass(IpRoyaltyVaultImplEventClient, [{\n    key: \"watchRevenueTokenClaimedEvent\",\n    value: function watchRevenueTokenClaimedEvent(_onLogs13) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipRoyaltyVaultImplAbi,\n        address: this.address,\n        eventName: \"RevenueTokenClaimed\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs13(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event RevenueTokenClaimed for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"parseTxRevenueTokenClaimedEvent\",\n    value: function parseTxRevenueTokenClaimedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator13 = _createForOfIteratorHelper(txReceipt.logs),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var log = _step13.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipRoyaltyVaultImplAbi,\n              eventName: \"RevenueTokenClaimed\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"RevenueTokenClaimed\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event RoyaltyTokensCollected for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"watchRoyaltyTokensCollectedEvent\",\n    value: function watchRoyaltyTokensCollectedEvent(_onLogs14) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipRoyaltyVaultImplAbi,\n        address: this.address,\n        eventName: \"RoyaltyTokensCollected\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs14(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event RoyaltyTokensCollected for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"parseTxRoyaltyTokensCollectedEvent\",\n    value: function parseTxRoyaltyTokensCollectedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator14 = _createForOfIteratorHelper(txReceipt.logs),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var log = _step14.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipRoyaltyVaultImplAbi,\n              eventName: \"RoyaltyTokensCollected\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"RoyaltyTokensCollected\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event SnapshotCompleted for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"watchSnapshotCompletedEvent\",\n    value: function watchSnapshotCompletedEvent(_onLogs15) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipRoyaltyVaultImplAbi,\n        address: this.address,\n        eventName: \"SnapshotCompleted\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs15(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event SnapshotCompleted for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"parseTxSnapshotCompletedEvent\",\n    value: function parseTxSnapshotCompletedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator15 = _createForOfIteratorHelper(txReceipt.logs),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var log = _step15.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipRoyaltyVaultImplAbi,\n              eventName: \"SnapshotCompleted\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"SnapshotCompleted\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract IpRoyaltyVaultImpl readonly method\n */\nvar IpRoyaltyVaultImplReadOnlyClient = /*#__PURE__*/function (_IpRoyaltyVaultImplEv) {\n  function IpRoyaltyVaultImplReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, IpRoyaltyVaultImplReadOnlyClient);\n    return _callSuper(this, IpRoyaltyVaultImplReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method claimableRevenue for contract IpRoyaltyVaultImpl\n   *\n   * @param request IpRoyaltyVaultImplClaimableRevenueRequest\n   * @return Promise<IpRoyaltyVaultImplClaimableRevenueResponse>\n   */\n  _inherits(IpRoyaltyVaultImplReadOnlyClient, _IpRoyaltyVaultImplEv);\n  return _createClass(IpRoyaltyVaultImplReadOnlyClient, [{\n    key: \"claimableRevenue\",\n    value: function () {\n      var _claimableRevenue = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee31(request) {\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) switch (_context31.prev = _context31.next) {\n            case 0:\n              _context31.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"claimableRevenue\",\n                args: [request.account, request.snapshotId, request.token]\n              });\n            case 2:\n              return _context31.abrupt(\"return\", _context31.sent);\n            case 3:\n            case \"end\":\n              return _context31.stop();\n          }\n        }, _callee31, this);\n      }));\n      function claimableRevenue(_x22) {\n        return _claimableRevenue.apply(this, arguments);\n      }\n      return claimableRevenue;\n    }()\n    /**\n     * method ipId for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplIpIdRequest\n     * @return Promise<IpRoyaltyVaultImplIpIdResponse>\n     */\n  }, {\n    key: \"ipId\",\n    value: function () {\n      var _ipId2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              _context32.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"ipId\"\n              });\n            case 2:\n              return _context32.abrupt(\"return\", _context32.sent);\n            case 3:\n            case \"end\":\n              return _context32.stop();\n          }\n        }, _callee32, this);\n      }));\n      function ipId() {\n        return _ipId2.apply(this, arguments);\n      }\n      return ipId;\n    }()\n  }]);\n}(IpRoyaltyVaultImplEventClient);\n\n/**\n * contract IpRoyaltyVaultImpl write method\n */\nvar IpRoyaltyVaultImplClient = /*#__PURE__*/function (_IpRoyaltyVaultImplRe) {\n  function IpRoyaltyVaultImplClient(rpcClient, wallet, address) {\n    var _this6;\n    _classCallCheck(this, IpRoyaltyVaultImplClient);\n    _this6 = _callSuper(this, IpRoyaltyVaultImplClient, [rpcClient, address]);\n    _this6.wallet = wallet;\n    return _this6;\n  }\n\n  /**\n   * method claimRevenueBySnapshotBatch for contract IpRoyaltyVaultImpl\n   *\n   * @param request IpRoyaltyVaultImplClaimRevenueBySnapshotBatchRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(IpRoyaltyVaultImplClient, _IpRoyaltyVaultImplRe);\n  return _createClass(IpRoyaltyVaultImplClient, [{\n    key: \"claimRevenueBySnapshotBatch\",\n    value: function () {\n      var _claimRevenueBySnapshotBatch = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee33(request) {\n        var _yield$this$rpcClient18, call;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              _context33.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"claimRevenueBySnapshotBatch\",\n                account: this.wallet.account,\n                args: [request.snapshotIds, request.token]\n              });\n            case 2:\n              _yield$this$rpcClient18 = _context33.sent;\n              call = _yield$this$rpcClient18.request;\n              _context33.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context33.abrupt(\"return\", _context33.sent);\n            case 7:\n            case \"end\":\n              return _context33.stop();\n          }\n        }, _callee33, this);\n      }));\n      function claimRevenueBySnapshotBatch(_x23) {\n        return _claimRevenueBySnapshotBatch.apply(this, arguments);\n      }\n      return claimRevenueBySnapshotBatch;\n    }()\n    /**\n     * method claimRevenueBySnapshotBatch for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplClaimRevenueBySnapshotBatchRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"claimRevenueBySnapshotBatchEncode\",\n    value: function claimRevenueBySnapshotBatchEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"claimRevenueBySnapshotBatch\",\n          args: [request.snapshotIds, request.token]\n        })\n      };\n    }\n\n    /**\n     * method claimRevenueByTokenBatch for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplClaimRevenueByTokenBatchRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"claimRevenueByTokenBatch\",\n    value: function () {\n      var _claimRevenueByTokenBatch = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee34(request) {\n        var _yield$this$rpcClient19, call;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) switch (_context34.prev = _context34.next) {\n            case 0:\n              _context34.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"claimRevenueByTokenBatch\",\n                account: this.wallet.account,\n                args: [request.snapshotId, request.tokenList]\n              });\n            case 2:\n              _yield$this$rpcClient19 = _context34.sent;\n              call = _yield$this$rpcClient19.request;\n              _context34.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context34.abrupt(\"return\", _context34.sent);\n            case 7:\n            case \"end\":\n              return _context34.stop();\n          }\n        }, _callee34, this);\n      }));\n      function claimRevenueByTokenBatch(_x24) {\n        return _claimRevenueByTokenBatch.apply(this, arguments);\n      }\n      return claimRevenueByTokenBatch;\n    }()\n    /**\n     * method claimRevenueByTokenBatch for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplClaimRevenueByTokenBatchRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"claimRevenueByTokenBatchEncode\",\n    value: function claimRevenueByTokenBatchEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"claimRevenueByTokenBatch\",\n          args: [request.snapshotId, request.tokenList]\n        })\n      };\n    }\n\n    /**\n     * method collectRoyaltyTokens for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplCollectRoyaltyTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"collectRoyaltyTokens\",\n    value: function () {\n      var _collectRoyaltyTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee35(request) {\n        var _yield$this$rpcClient20, call;\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) switch (_context35.prev = _context35.next) {\n            case 0:\n              _context35.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"collectRoyaltyTokens\",\n                account: this.wallet.account,\n                args: [request.ancestorIpId]\n              });\n            case 2:\n              _yield$this$rpcClient20 = _context35.sent;\n              call = _yield$this$rpcClient20.request;\n              _context35.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context35.abrupt(\"return\", _context35.sent);\n            case 7:\n            case \"end\":\n              return _context35.stop();\n          }\n        }, _callee35, this);\n      }));\n      function collectRoyaltyTokens(_x25) {\n        return _collectRoyaltyTokens.apply(this, arguments);\n      }\n      return collectRoyaltyTokens;\n    }()\n    /**\n     * method collectRoyaltyTokens for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplCollectRoyaltyTokensRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"collectRoyaltyTokensEncode\",\n    value: function collectRoyaltyTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"collectRoyaltyTokens\",\n          args: [request.ancestorIpId]\n        })\n      };\n    }\n\n    /**\n     * method snapshot for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplSnapshotRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"snapshot\",\n    value: function () {\n      var _snapshot = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n        var _yield$this$rpcClient21, call;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) switch (_context36.prev = _context36.next) {\n            case 0:\n              _context36.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"snapshot\",\n                account: this.wallet.account\n              });\n            case 2:\n              _yield$this$rpcClient21 = _context36.sent;\n              call = _yield$this$rpcClient21.request;\n              _context36.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context36.abrupt(\"return\", _context36.sent);\n            case 7:\n            case \"end\":\n              return _context36.stop();\n          }\n        }, _callee36, this);\n      }));\n      function snapshot() {\n        return _snapshot.apply(this, arguments);\n      }\n      return snapshot;\n    }()\n    /**\n     * method snapshot for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplSnapshotRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"snapshotEncode\",\n    value: function snapshotEncode() {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"snapshot\"\n        })\n      };\n    }\n  }]);\n}(IpRoyaltyVaultImplReadOnlyClient);\n\n// Contract LicenseRegistry =============================================================\n\n/**\n * LicenseRegistryAuthorityUpdatedEvent\n *\n * @param authority address\n */\n\n/**\n * LicenseRegistryDefaultLicenseTermsSetEvent\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryExpirationTimeSetEvent\n *\n * @param ipId address\n * @param expireTime uint256\n */\n\n/**\n * LicenseRegistryInitializedEvent\n *\n * @param version uint64\n */\n\n/**\n * LicenseRegistryLicenseTemplateRegisteredEvent\n *\n * @param licenseTemplate address\n */\n\n/**\n * LicenseRegistryLicensingConfigSetForIpEvent\n *\n * @param ipId address\n * @param licensingConfig tuple\n */\n\n/**\n * LicenseRegistryLicensingConfigSetForLicenseEvent\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryUpgradedEvent\n *\n * @param implementation address\n */\n\n/**\n * LicenseRegistryExistsRequest\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetAttachedLicenseTermsRequest\n *\n * @param ipId address\n * @param index uint256\n */\n\n/**\n * LicenseRegistryGetAttachedLicenseTermsResponse\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetAttachedLicenseTermsCountRequest\n *\n * @param ipId address\n */\n\n/**\n * LicenseRegistryGetDefaultLicenseTermsResponse\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetDerivativeIpRequest\n *\n * @param parentIpId address\n * @param index uint256\n */\n\n/**\n * LicenseRegistryGetDerivativeIpResponse\n *\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryGetDerivativeIpCountRequest\n *\n * @param parentIpId address\n */\n\n/**\n * LicenseRegistryGetExpireTimeRequest\n *\n * @param ipId address\n */\n\n/**\n * LicenseRegistryGetLicensingConfigRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetParentIpRequest\n *\n * @param childIpId address\n * @param index uint256\n */\n\n/**\n * LicenseRegistryGetParentIpResponse\n *\n * @param parentIpId address\n */\n\n/**\n * LicenseRegistryGetParentIpCountRequest\n *\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryHasDerivativeIpsRequest\n *\n * @param parentIpId address\n */\n\n/**\n * LicenseRegistryHasIpAttachedLicenseTermsRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryIsDerivativeIpRequest\n *\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryIsExpiredNowRequest\n *\n * @param ipId address\n */\n\n/**\n * LicenseRegistryIsParentIpRequest\n *\n * @param parentIpId address\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryIsRegisteredLicenseTemplateRequest\n *\n * @param licenseTemplate address\n */\n\n/**\n * LicenseRegistryVerifyMintLicenseTokenRequest\n *\n * @param licensorIpId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param isMintedByIpOwner bool\n */\n\n/**\n * LicenseRegistryAttachLicenseTermsToIpRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryInitializeRequest\n *\n * @param accessManager address\n */\n\n/**\n * LicenseRegistryRegisterDerivativeIpRequest\n *\n * @param childIpId address\n * @param parentIpIds address[]\n * @param licenseTemplate address\n * @param licenseTermsIds uint256[]\n * @param isUsingLicenseToken bool\n */\n\n/**\n * LicenseRegistryRegisterLicenseTemplateRequest\n *\n * @param licenseTemplate address\n */\n\n/**\n * LicenseRegistrySetAuthorityRequest\n *\n * @param newAuthority address\n */\n\n/**\n * LicenseRegistrySetDefaultLicenseTermsRequest\n *\n * @param newLicenseTemplate address\n * @param newLicenseTermsId uint256\n */\n\n/**\n * LicenseRegistrySetLicensingConfigForIpRequest\n *\n * @param ipId address\n * @param licensingConfig tuple\n */\n\n/**\n * LicenseRegistrySetLicensingConfigForLicenseRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param licensingConfig tuple\n */\n\n/**\n * LicenseRegistryUpgradeToAndCallRequest\n *\n * @param newImplementation address\n * @param data bytes\n */\n\n/**\n * contract LicenseRegistry event\n */\nvar LicenseRegistryEventClient = /*#__PURE__*/function () {\n  function LicenseRegistryEventClient(rpcClient, address) {\n    var _rpcClient$chain7;\n    _classCallCheck(this, LicenseRegistryEventClient);\n    this.address = address || getAddress(licenseRegistryAddress, (_rpcClient$chain7 = rpcClient.chain) === null || _rpcClient$chain7 === void 0 ? void 0 : _rpcClient$chain7.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event AuthorityUpdated for contract LicenseRegistry\n   */\n  return _createClass(LicenseRegistryEventClient, [{\n    key: \"watchAuthorityUpdatedEvent\",\n    value: function watchAuthorityUpdatedEvent(_onLogs16) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"AuthorityUpdated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs16(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event AuthorityUpdated for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxAuthorityUpdatedEvent\",\n    value: function parseTxAuthorityUpdatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator16 = _createForOfIteratorHelper(txReceipt.logs),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var log = _step16.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"AuthorityUpdated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"AuthorityUpdated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DefaultLicenseTermsSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchDefaultLicenseTermsSetEvent\",\n    value: function watchDefaultLicenseTermsSetEvent(_onLogs17) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"DefaultLicenseTermsSet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs17(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DefaultLicenseTermsSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxDefaultLicenseTermsSetEvent\",\n    value: function parseTxDefaultLicenseTermsSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator17 = _createForOfIteratorHelper(txReceipt.logs),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var log = _step17.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"DefaultLicenseTermsSet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DefaultLicenseTermsSet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event ExpirationTimeSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchExpirationTimeSetEvent\",\n    value: function watchExpirationTimeSetEvent(_onLogs18) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"ExpirationTimeSet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs18(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event ExpirationTimeSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxExpirationTimeSetEvent\",\n    value: function parseTxExpirationTimeSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator18 = _createForOfIteratorHelper(txReceipt.logs),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var log = _step18.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"ExpirationTimeSet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"ExpirationTimeSet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Initialized for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchInitializedEvent\",\n    value: function watchInitializedEvent(_onLogs19) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"Initialized\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs19(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Initialized for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxInitializedEvent\",\n    value: function parseTxInitializedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator19 = _createForOfIteratorHelper(txReceipt.logs),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var log = _step19.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"Initialized\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Initialized\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicenseTemplateRegistered for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchLicenseTemplateRegisteredEvent\",\n    value: function watchLicenseTemplateRegisteredEvent(_onLogs20) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"LicenseTemplateRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs20(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTemplateRegistered for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxLicenseTemplateRegisteredEvent\",\n    value: function parseTxLicenseTemplateRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator20 = _createForOfIteratorHelper(txReceipt.logs),\n        _step20;\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var log = _step20.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"LicenseTemplateRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTemplateRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicensingConfigSetForIP for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchLicensingConfigSetForIpEvent\",\n    value: function watchLicensingConfigSetForIpEvent(_onLogs21) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"LicensingConfigSetForIP\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs21(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicensingConfigSetForIP for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxLicensingConfigSetForIpEvent\",\n    value: function parseTxLicensingConfigSetForIpEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator21 = _createForOfIteratorHelper(txReceipt.logs),\n        _step21;\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var log = _step21.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"LicensingConfigSetForIP\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicensingConfigSetForIP\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicensingConfigSetForLicense for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchLicensingConfigSetForLicenseEvent\",\n    value: function watchLicensingConfigSetForLicenseEvent(_onLogs22) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"LicensingConfigSetForLicense\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs22(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicensingConfigSetForLicense for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxLicensingConfigSetForLicenseEvent\",\n    value: function parseTxLicensingConfigSetForLicenseEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator22 = _createForOfIteratorHelper(txReceipt.logs),\n        _step22;\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var log = _step22.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"LicensingConfigSetForLicense\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicensingConfigSetForLicense\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Upgraded for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchUpgradedEvent\",\n    value: function watchUpgradedEvent(_onLogs23) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"Upgraded\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs23(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Upgraded for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxUpgradedEvent\",\n    value: function parseTxUpgradedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator23 = _createForOfIteratorHelper(txReceipt.logs),\n        _step23;\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var log = _step23.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"Upgraded\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Upgraded\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract LicenseRegistry readonly method\n */\nvar LicenseRegistryReadOnlyClient = /*#__PURE__*/function (_LicenseRegistryEvent) {\n  function LicenseRegistryReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, LicenseRegistryReadOnlyClient);\n    return _callSuper(this, LicenseRegistryReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method DISPUTE_MODULE for contract LicenseRegistry\n   *\n   * @param request LicenseRegistryDisputeModuleRequest\n   * @return Promise<LicenseRegistryDisputeModuleResponse>\n   */\n  _inherits(LicenseRegistryReadOnlyClient, _LicenseRegistryEvent);\n  return _createClass(LicenseRegistryReadOnlyClient, [{\n    key: \"disputeModule\",\n    value: function () {\n      var _disputeModule = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) switch (_context37.prev = _context37.next) {\n            case 0:\n              _context37.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"DISPUTE_MODULE\"\n              });\n            case 2:\n              return _context37.abrupt(\"return\", _context37.sent);\n            case 3:\n            case \"end\":\n              return _context37.stop();\n          }\n        }, _callee37, this);\n      }));\n      function disputeModule() {\n        return _disputeModule.apply(this, arguments);\n      }\n      return disputeModule;\n    }()\n    /**\n     * method EXPIRATION_TIME for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryExpirationTimeRequest\n     * @return Promise<LicenseRegistryExpirationTimeResponse>\n     */\n  }, {\n    key: \"expirationTime\",\n    value: function () {\n      var _expirationTime = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) switch (_context38.prev = _context38.next) {\n            case 0:\n              _context38.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"EXPIRATION_TIME\"\n              });\n            case 2:\n              return _context38.abrupt(\"return\", _context38.sent);\n            case 3:\n            case \"end\":\n              return _context38.stop();\n          }\n        }, _callee38, this);\n      }));\n      function expirationTime() {\n        return _expirationTime.apply(this, arguments);\n      }\n      return expirationTime;\n    }()\n    /**\n     * method IP_GRAPH_ACL for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIpGraphAclRequest\n     * @return Promise<LicenseRegistryIpGraphAclResponse>\n     */\n  }, {\n    key: \"ipGraphAcl\",\n    value: function () {\n      var _ipGraphAcl = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee39() {\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) switch (_context39.prev = _context39.next) {\n            case 0:\n              _context39.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"IP_GRAPH_ACL\"\n              });\n            case 2:\n              return _context39.abrupt(\"return\", _context39.sent);\n            case 3:\n            case \"end\":\n              return _context39.stop();\n          }\n        }, _callee39, this);\n      }));\n      function ipGraphAcl() {\n        return _ipGraphAcl.apply(this, arguments);\n      }\n      return ipGraphAcl;\n    }()\n    /**\n     * method IP_GRAPH_CONTRACT for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIpGraphContractRequest\n     * @return Promise<LicenseRegistryIpGraphContractResponse>\n     */\n  }, {\n    key: \"ipGraphContract\",\n    value: function () {\n      var _ipGraphContract = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) switch (_context40.prev = _context40.next) {\n            case 0:\n              _context40.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"IP_GRAPH_CONTRACT\"\n              });\n            case 2:\n              return _context40.abrupt(\"return\", _context40.sent);\n            case 3:\n            case \"end\":\n              return _context40.stop();\n          }\n        }, _callee40, this);\n      }));\n      function ipGraphContract() {\n        return _ipGraphContract.apply(this, arguments);\n      }\n      return ipGraphContract;\n    }()\n    /**\n     * method LICENSING_MODULE for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryLicensingModuleRequest\n     * @return Promise<LicenseRegistryLicensingModuleResponse>\n     */\n  }, {\n    key: \"licensingModule\",\n    value: function () {\n      var _licensingModule = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) switch (_context41.prev = _context41.next) {\n            case 0:\n              _context41.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"LICENSING_MODULE\"\n              });\n            case 2:\n              return _context41.abrupt(\"return\", _context41.sent);\n            case 3:\n            case \"end\":\n              return _context41.stop();\n          }\n        }, _callee41, this);\n      }));\n      function licensingModule() {\n        return _licensingModule.apply(this, arguments);\n      }\n      return licensingModule;\n    }()\n    /**\n     * method UPGRADE_INTERFACE_VERSION for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryUpgradeInterfaceVersionRequest\n     * @return Promise<LicenseRegistryUpgradeInterfaceVersionResponse>\n     */\n  }, {\n    key: \"upgradeInterfaceVersion\",\n    value: function () {\n      var _upgradeInterfaceVersion2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) switch (_context42.prev = _context42.next) {\n            case 0:\n              _context42.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"UPGRADE_INTERFACE_VERSION\"\n              });\n            case 2:\n              return _context42.abrupt(\"return\", _context42.sent);\n            case 3:\n            case \"end\":\n              return _context42.stop();\n          }\n        }, _callee42, this);\n      }));\n      function upgradeInterfaceVersion() {\n        return _upgradeInterfaceVersion2.apply(this, arguments);\n      }\n      return upgradeInterfaceVersion;\n    }()\n    /**\n     * method authority for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryAuthorityRequest\n     * @return Promise<LicenseRegistryAuthorityResponse>\n     */\n  }, {\n    key: \"authority\",\n    value: function () {\n      var _authority2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) switch (_context43.prev = _context43.next) {\n            case 0:\n              _context43.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"authority\"\n              });\n            case 2:\n              return _context43.abrupt(\"return\", _context43.sent);\n            case 3:\n            case \"end\":\n              return _context43.stop();\n          }\n        }, _callee43, this);\n      }));\n      function authority() {\n        return _authority2.apply(this, arguments);\n      }\n      return authority;\n    }()\n    /**\n     * method exists for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryExistsRequest\n     * @return Promise<LicenseRegistryExistsResponse>\n     */\n  }, {\n    key: \"exists\",\n    value: function () {\n      var _exists = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee44(request) {\n        return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n          while (1) switch (_context44.prev = _context44.next) {\n            case 0:\n              _context44.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"exists\",\n                args: [request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              return _context44.abrupt(\"return\", _context44.sent);\n            case 3:\n            case \"end\":\n              return _context44.stop();\n          }\n        }, _callee44, this);\n      }));\n      function exists(_x26) {\n        return _exists.apply(this, arguments);\n      }\n      return exists;\n    }()\n    /**\n     * method getAttachedLicenseTerms for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetAttachedLicenseTermsRequest\n     * @return Promise<LicenseRegistryGetAttachedLicenseTermsResponse>\n     */\n  }, {\n    key: \"getAttachedLicenseTerms\",\n    value: function () {\n      var _getAttachedLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee45(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n          while (1) switch (_context45.prev = _context45.next) {\n            case 0:\n              _context45.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getAttachedLicenseTerms\",\n                args: [request.ipId, request.index]\n              });\n            case 2:\n              result = _context45.sent;\n              return _context45.abrupt(\"return\", {\n                licenseTemplate: result[0],\n                licenseTermsId: result[1]\n              });\n            case 4:\n            case \"end\":\n              return _context45.stop();\n          }\n        }, _callee45, this);\n      }));\n      function getAttachedLicenseTerms(_x27) {\n        return _getAttachedLicenseTerms.apply(this, arguments);\n      }\n      return getAttachedLicenseTerms;\n    }()\n    /**\n     * method getAttachedLicenseTermsCount for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetAttachedLicenseTermsCountRequest\n     * @return Promise<LicenseRegistryGetAttachedLicenseTermsCountResponse>\n     */\n  }, {\n    key: \"getAttachedLicenseTermsCount\",\n    value: function () {\n      var _getAttachedLicenseTermsCount = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee46(request) {\n        return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n          while (1) switch (_context46.prev = _context46.next) {\n            case 0:\n              _context46.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getAttachedLicenseTermsCount\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context46.abrupt(\"return\", _context46.sent);\n            case 3:\n            case \"end\":\n              return _context46.stop();\n          }\n        }, _callee46, this);\n      }));\n      function getAttachedLicenseTermsCount(_x28) {\n        return _getAttachedLicenseTermsCount.apply(this, arguments);\n      }\n      return getAttachedLicenseTermsCount;\n    }()\n    /**\n     * method getDefaultLicenseTerms for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetDefaultLicenseTermsRequest\n     * @return Promise<LicenseRegistryGetDefaultLicenseTermsResponse>\n     */\n  }, {\n    key: \"getDefaultLicenseTerms\",\n    value: function () {\n      var _getDefaultLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) switch (_context47.prev = _context47.next) {\n            case 0:\n              _context47.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getDefaultLicenseTerms\"\n              });\n            case 2:\n              result = _context47.sent;\n              return _context47.abrupt(\"return\", {\n                licenseTemplate: result[0],\n                licenseTermsId: result[1]\n              });\n            case 4:\n            case \"end\":\n              return _context47.stop();\n          }\n        }, _callee47, this);\n      }));\n      function getDefaultLicenseTerms() {\n        return _getDefaultLicenseTerms.apply(this, arguments);\n      }\n      return getDefaultLicenseTerms;\n    }()\n    /**\n     * method getDerivativeIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetDerivativeIpRequest\n     * @return Promise<LicenseRegistryGetDerivativeIpResponse>\n     */\n  }, {\n    key: \"getDerivativeIp\",\n    value: function () {\n      var _getDerivativeIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee48(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n          while (1) switch (_context48.prev = _context48.next) {\n            case 0:\n              _context48.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getDerivativeIp\",\n                args: [request.parentIpId, request.index]\n              });\n            case 2:\n              result = _context48.sent;\n              return _context48.abrupt(\"return\", {\n                childIpId: result\n              });\n            case 4:\n            case \"end\":\n              return _context48.stop();\n          }\n        }, _callee48, this);\n      }));\n      function getDerivativeIp(_x29) {\n        return _getDerivativeIp.apply(this, arguments);\n      }\n      return getDerivativeIp;\n    }()\n    /**\n     * method getDerivativeIpCount for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetDerivativeIpCountRequest\n     * @return Promise<LicenseRegistryGetDerivativeIpCountResponse>\n     */\n  }, {\n    key: \"getDerivativeIpCount\",\n    value: function () {\n      var _getDerivativeIpCount = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee49(request) {\n        return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n          while (1) switch (_context49.prev = _context49.next) {\n            case 0:\n              _context49.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getDerivativeIpCount\",\n                args: [request.parentIpId]\n              });\n            case 2:\n              return _context49.abrupt(\"return\", _context49.sent);\n            case 3:\n            case \"end\":\n              return _context49.stop();\n          }\n        }, _callee49, this);\n      }));\n      function getDerivativeIpCount(_x30) {\n        return _getDerivativeIpCount.apply(this, arguments);\n      }\n      return getDerivativeIpCount;\n    }()\n    /**\n     * method getExpireTime for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetExpireTimeRequest\n     * @return Promise<LicenseRegistryGetExpireTimeResponse>\n     */\n  }, {\n    key: \"getExpireTime\",\n    value: function () {\n      var _getExpireTime = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee50(request) {\n        return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n          while (1) switch (_context50.prev = _context50.next) {\n            case 0:\n              _context50.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getExpireTime\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context50.abrupt(\"return\", _context50.sent);\n            case 3:\n            case \"end\":\n              return _context50.stop();\n          }\n        }, _callee50, this);\n      }));\n      function getExpireTime(_x31) {\n        return _getExpireTime.apply(this, arguments);\n      }\n      return getExpireTime;\n    }()\n    /**\n     * method getLicensingConfig for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetLicensingConfigRequest\n     * @return Promise<LicenseRegistryGetLicensingConfigResponse>\n     */\n  }, {\n    key: \"getLicensingConfig\",\n    value: function () {\n      var _getLicensingConfig = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee51(request) {\n        return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n          while (1) switch (_context51.prev = _context51.next) {\n            case 0:\n              _context51.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getLicensingConfig\",\n                args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              return _context51.abrupt(\"return\", _context51.sent);\n            case 3:\n            case \"end\":\n              return _context51.stop();\n          }\n        }, _callee51, this);\n      }));\n      function getLicensingConfig(_x32) {\n        return _getLicensingConfig.apply(this, arguments);\n      }\n      return getLicensingConfig;\n    }()\n    /**\n     * method getParentIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetParentIpRequest\n     * @return Promise<LicenseRegistryGetParentIpResponse>\n     */\n  }, {\n    key: \"getParentIp\",\n    value: function () {\n      var _getParentIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee52(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n          while (1) switch (_context52.prev = _context52.next) {\n            case 0:\n              _context52.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getParentIp\",\n                args: [request.childIpId, request.index]\n              });\n            case 2:\n              result = _context52.sent;\n              return _context52.abrupt(\"return\", {\n                parentIpId: result\n              });\n            case 4:\n            case \"end\":\n              return _context52.stop();\n          }\n        }, _callee52, this);\n      }));\n      function getParentIp(_x33) {\n        return _getParentIp.apply(this, arguments);\n      }\n      return getParentIp;\n    }()\n    /**\n     * method getParentIpCount for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetParentIpCountRequest\n     * @return Promise<LicenseRegistryGetParentIpCountResponse>\n     */\n  }, {\n    key: \"getParentIpCount\",\n    value: function () {\n      var _getParentIpCount = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee53(request) {\n        return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n          while (1) switch (_context53.prev = _context53.next) {\n            case 0:\n              _context53.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getParentIpCount\",\n                args: [request.childIpId]\n              });\n            case 2:\n              return _context53.abrupt(\"return\", _context53.sent);\n            case 3:\n            case \"end\":\n              return _context53.stop();\n          }\n        }, _callee53, this);\n      }));\n      function getParentIpCount(_x34) {\n        return _getParentIpCount.apply(this, arguments);\n      }\n      return getParentIpCount;\n    }()\n    /**\n     * method hasDerivativeIps for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryHasDerivativeIpsRequest\n     * @return Promise<LicenseRegistryHasDerivativeIpsResponse>\n     */\n  }, {\n    key: \"hasDerivativeIps\",\n    value: function () {\n      var _hasDerivativeIps = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee54(request) {\n        return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n          while (1) switch (_context54.prev = _context54.next) {\n            case 0:\n              _context54.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"hasDerivativeIps\",\n                args: [request.parentIpId]\n              });\n            case 2:\n              return _context54.abrupt(\"return\", _context54.sent);\n            case 3:\n            case \"end\":\n              return _context54.stop();\n          }\n        }, _callee54, this);\n      }));\n      function hasDerivativeIps(_x35) {\n        return _hasDerivativeIps.apply(this, arguments);\n      }\n      return hasDerivativeIps;\n    }()\n    /**\n     * method hasIpAttachedLicenseTerms for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryHasIpAttachedLicenseTermsRequest\n     * @return Promise<LicenseRegistryHasIpAttachedLicenseTermsResponse>\n     */\n  }, {\n    key: \"hasIpAttachedLicenseTerms\",\n    value: function () {\n      var _hasIpAttachedLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee55(request) {\n        return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n          while (1) switch (_context55.prev = _context55.next) {\n            case 0:\n              _context55.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"hasIpAttachedLicenseTerms\",\n                args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              return _context55.abrupt(\"return\", _context55.sent);\n            case 3:\n            case \"end\":\n              return _context55.stop();\n          }\n        }, _callee55, this);\n      }));\n      function hasIpAttachedLicenseTerms(_x36) {\n        return _hasIpAttachedLicenseTerms.apply(this, arguments);\n      }\n      return hasIpAttachedLicenseTerms;\n    }()\n    /**\n     * method isConsumingScheduledOp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsConsumingScheduledOpRequest\n     * @return Promise<LicenseRegistryIsConsumingScheduledOpResponse>\n     */\n  }, {\n    key: \"isConsumingScheduledOp\",\n    value: function () {\n      var _isConsumingScheduledOp2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee56() {\n        return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n          while (1) switch (_context56.prev = _context56.next) {\n            case 0:\n              _context56.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isConsumingScheduledOp\"\n              });\n            case 2:\n              return _context56.abrupt(\"return\", _context56.sent);\n            case 3:\n            case \"end\":\n              return _context56.stop();\n          }\n        }, _callee56, this);\n      }));\n      function isConsumingScheduledOp() {\n        return _isConsumingScheduledOp2.apply(this, arguments);\n      }\n      return isConsumingScheduledOp;\n    }()\n    /**\n     * method isDerivativeIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsDerivativeIpRequest\n     * @return Promise<LicenseRegistryIsDerivativeIpResponse>\n     */\n  }, {\n    key: \"isDerivativeIp\",\n    value: function () {\n      var _isDerivativeIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee57(request) {\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) switch (_context57.prev = _context57.next) {\n            case 0:\n              _context57.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isDerivativeIp\",\n                args: [request.childIpId]\n              });\n            case 2:\n              return _context57.abrupt(\"return\", _context57.sent);\n            case 3:\n            case \"end\":\n              return _context57.stop();\n          }\n        }, _callee57, this);\n      }));\n      function isDerivativeIp(_x37) {\n        return _isDerivativeIp.apply(this, arguments);\n      }\n      return isDerivativeIp;\n    }()\n    /**\n     * method isExpiredNow for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsExpiredNowRequest\n     * @return Promise<LicenseRegistryIsExpiredNowResponse>\n     */\n  }, {\n    key: \"isExpiredNow\",\n    value: function () {\n      var _isExpiredNow = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee58(request) {\n        return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n          while (1) switch (_context58.prev = _context58.next) {\n            case 0:\n              _context58.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isExpiredNow\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context58.abrupt(\"return\", _context58.sent);\n            case 3:\n            case \"end\":\n              return _context58.stop();\n          }\n        }, _callee58, this);\n      }));\n      function isExpiredNow(_x38) {\n        return _isExpiredNow.apply(this, arguments);\n      }\n      return isExpiredNow;\n    }()\n    /**\n     * method isParentIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsParentIpRequest\n     * @return Promise<LicenseRegistryIsParentIpResponse>\n     */\n  }, {\n    key: \"isParentIp\",\n    value: function () {\n      var _isParentIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee59(request) {\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) switch (_context59.prev = _context59.next) {\n            case 0:\n              _context59.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isParentIp\",\n                args: [request.parentIpId, request.childIpId]\n              });\n            case 2:\n              return _context59.abrupt(\"return\", _context59.sent);\n            case 3:\n            case \"end\":\n              return _context59.stop();\n          }\n        }, _callee59, this);\n      }));\n      function isParentIp(_x39) {\n        return _isParentIp.apply(this, arguments);\n      }\n      return isParentIp;\n    }()\n    /**\n     * method isRegisteredLicenseTemplate for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsRegisteredLicenseTemplateRequest\n     * @return Promise<LicenseRegistryIsRegisteredLicenseTemplateResponse>\n     */\n  }, {\n    key: \"isRegisteredLicenseTemplate\",\n    value: function () {\n      var _isRegisteredLicenseTemplate = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee60(request) {\n        return _regeneratorRuntime().wrap(function _callee60$(_context60) {\n          while (1) switch (_context60.prev = _context60.next) {\n            case 0:\n              _context60.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isRegisteredLicenseTemplate\",\n                args: [request.licenseTemplate]\n              });\n            case 2:\n              return _context60.abrupt(\"return\", _context60.sent);\n            case 3:\n            case \"end\":\n              return _context60.stop();\n          }\n        }, _callee60, this);\n      }));\n      function isRegisteredLicenseTemplate(_x40) {\n        return _isRegisteredLicenseTemplate.apply(this, arguments);\n      }\n      return isRegisteredLicenseTemplate;\n    }()\n    /**\n     * method proxiableUUID for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryProxiableUuidRequest\n     * @return Promise<LicenseRegistryProxiableUuidResponse>\n     */\n  }, {\n    key: \"proxiableUuid\",\n    value: function () {\n      var _proxiableUuid2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {\n        return _regeneratorRuntime().wrap(function _callee61$(_context61) {\n          while (1) switch (_context61.prev = _context61.next) {\n            case 0:\n              _context61.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"proxiableUUID\"\n              });\n            case 2:\n              return _context61.abrupt(\"return\", _context61.sent);\n            case 3:\n            case \"end\":\n              return _context61.stop();\n          }\n        }, _callee61, this);\n      }));\n      function proxiableUuid() {\n        return _proxiableUuid2.apply(this, arguments);\n      }\n      return proxiableUuid;\n    }()\n    /**\n     * method verifyMintLicenseToken for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryVerifyMintLicenseTokenRequest\n     * @return Promise<LicenseRegistryVerifyMintLicenseTokenResponse>\n     */\n  }, {\n    key: \"verifyMintLicenseToken\",\n    value: function () {\n      var _verifyMintLicenseToken = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee62(request) {\n        return _regeneratorRuntime().wrap(function _callee62$(_context62) {\n          while (1) switch (_context62.prev = _context62.next) {\n            case 0:\n              _context62.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"verifyMintLicenseToken\",\n                args: [request.licensorIpId, request.licenseTemplate, request.licenseTermsId, request.isMintedByIpOwner]\n              });\n            case 2:\n              return _context62.abrupt(\"return\", _context62.sent);\n            case 3:\n            case \"end\":\n              return _context62.stop();\n          }\n        }, _callee62, this);\n      }));\n      function verifyMintLicenseToken(_x41) {\n        return _verifyMintLicenseToken.apply(this, arguments);\n      }\n      return verifyMintLicenseToken;\n    }()\n  }]);\n}(LicenseRegistryEventClient);\n\n// Contract LicenseToken =============================================================\n\n/**\n * LicenseTokenOwnerOfRequest\n *\n * @param tokenId uint256\n */\n\n/**\n * contract LicenseToken readonly method\n */\nvar LicenseTokenReadOnlyClient = /*#__PURE__*/function () {\n  function LicenseTokenReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain8;\n    _classCallCheck(this, LicenseTokenReadOnlyClient);\n    this.address = address || getAddress(licenseTokenAddress, (_rpcClient$chain8 = rpcClient.chain) === null || _rpcClient$chain8 === void 0 ? void 0 : _rpcClient$chain8.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method ownerOf for contract LicenseToken\n   *\n   * @param request LicenseTokenOwnerOfRequest\n   * @return Promise<LicenseTokenOwnerOfResponse>\n   */\n  return _createClass(LicenseTokenReadOnlyClient, [{\n    key: \"ownerOf\",\n    value: function () {\n      var _ownerOf = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee72(request) {\n        return _regeneratorRuntime().wrap(function _callee72$(_context72) {\n          while (1) switch (_context72.prev = _context72.next) {\n            case 0:\n              _context72.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseTokenAbi,\n                address: this.address,\n                functionName: \"ownerOf\",\n                args: [request.tokenId]\n              });\n            case 2:\n              return _context72.abrupt(\"return\", _context72.sent);\n            case 3:\n            case \"end\":\n              return _context72.stop();\n          }\n        }, _callee72, this);\n      }));\n      function ownerOf(_x51) {\n        return _ownerOf.apply(this, arguments);\n      }\n      return ownerOf;\n    }()\n  }]);\n}();\n\n// Contract LicensingModule =============================================================\n\n/**\n * LicensingModuleLicenseTermsAttachedEvent\n *\n * @param caller address\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicensingModuleLicenseTokensMintedEvent\n *\n * @param caller address\n * @param licensorIpId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param amount uint256\n * @param receiver address\n * @param startLicenseTokenId uint256\n */\n\n/**\n * LicensingModuleAttachLicenseTermsRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicensingModuleMintLicenseTokensRequest\n *\n * @param licensorIpId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param amount uint256\n * @param receiver address\n * @param royaltyContext bytes\n */\n\n/**\n * LicensingModuleRegisterDerivativeRequest\n *\n * @param childIpId address\n * @param parentIpIds address[]\n * @param licenseTermsIds uint256[]\n * @param licenseTemplate address\n * @param royaltyContext bytes\n */\n\n/**\n * LicensingModuleRegisterDerivativeWithLicenseTokensRequest\n *\n * @param childIpId address\n * @param licenseTokenIds uint256[]\n * @param royaltyContext bytes\n */\n\n/**\n * contract LicensingModule event\n */\nvar LicensingModuleEventClient = /*#__PURE__*/function () {\n  function LicensingModuleEventClient(rpcClient, address) {\n    var _rpcClient$chain9;\n    _classCallCheck(this, LicensingModuleEventClient);\n    this.address = address || getAddress(licensingModuleAddress, (_rpcClient$chain9 = rpcClient.chain) === null || _rpcClient$chain9 === void 0 ? void 0 : _rpcClient$chain9.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event LicenseTermsAttached for contract LicensingModule\n   */\n  return _createClass(LicensingModuleEventClient, [{\n    key: \"watchLicenseTermsAttachedEvent\",\n    value: function watchLicenseTermsAttachedEvent(_onLogs24) {\n      return this.rpcClient.watchContractEvent({\n        abi: licensingModuleAbi,\n        address: this.address,\n        eventName: \"LicenseTermsAttached\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs24(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTermsAttached for contract LicensingModule\n     */\n  }, {\n    key: \"parseTxLicenseTermsAttachedEvent\",\n    value: function parseTxLicenseTermsAttachedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator24 = _createForOfIteratorHelper(txReceipt.logs),\n        _step24;\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var log = _step24.value;\n          try {\n            var event = decodeEventLog({\n              abi: licensingModuleAbi,\n              eventName: \"LicenseTermsAttached\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTermsAttached\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicenseTokensMinted for contract LicensingModule\n     */\n  }, {\n    key: \"watchLicenseTokensMintedEvent\",\n    value: function watchLicenseTokensMintedEvent(_onLogs25) {\n      return this.rpcClient.watchContractEvent({\n        abi: licensingModuleAbi,\n        address: this.address,\n        eventName: \"LicenseTokensMinted\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs25(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTokensMinted for contract LicensingModule\n     */\n  }, {\n    key: \"parseTxLicenseTokensMintedEvent\",\n    value: function parseTxLicenseTokensMintedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator25 = _createForOfIteratorHelper(txReceipt.logs),\n        _step25;\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var log = _step25.value;\n          try {\n            var event = decodeEventLog({\n              abi: licensingModuleAbi,\n              eventName: \"LicenseTokensMinted\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTokensMinted\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract LicensingModule write method\n */\nvar LicensingModuleClient = /*#__PURE__*/function (_LicensingModuleEvent) {\n  function LicensingModuleClient(rpcClient, wallet, address) {\n    var _this8;\n    _classCallCheck(this, LicensingModuleClient);\n    _this8 = _callSuper(this, LicensingModuleClient, [rpcClient, address]);\n    _this8.wallet = wallet;\n    return _this8;\n  }\n\n  /**\n   * method attachLicenseTerms for contract LicensingModule\n   *\n   * @param request LicensingModuleAttachLicenseTermsRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(LicensingModuleClient, _LicensingModuleEvent);\n  return _createClass(LicensingModuleClient, [{\n    key: \"attachLicenseTerms\",\n    value: function () {\n      var _attachLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee73(request) {\n        var _yield$this$rpcClient31, call;\n        return _regeneratorRuntime().wrap(function _callee73$(_context73) {\n          while (1) switch (_context73.prev = _context73.next) {\n            case 0:\n              _context73.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"attachLicenseTerms\",\n                account: this.wallet.account,\n                args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              _yield$this$rpcClient31 = _context73.sent;\n              call = _yield$this$rpcClient31.request;\n              _context73.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context73.abrupt(\"return\", _context73.sent);\n            case 7:\n            case \"end\":\n              return _context73.stop();\n          }\n        }, _callee73, this);\n      }));\n      function attachLicenseTerms(_x52) {\n        return _attachLicenseTerms.apply(this, arguments);\n      }\n      return attachLicenseTerms;\n    }()\n    /**\n     * method attachLicenseTerms for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleAttachLicenseTermsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"attachLicenseTermsEncode\",\n    value: function attachLicenseTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"attachLicenseTerms\",\n          args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n        })\n      };\n    }\n\n    /**\n     * method mintLicenseTokens for contract LicensingModule\n     *\n     * @param request LicensingModuleMintLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintLicenseTokens\",\n    value: function () {\n      var _mintLicenseTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee74(request) {\n        var _yield$this$rpcClient32, call;\n        return _regeneratorRuntime().wrap(function _callee74$(_context74) {\n          while (1) switch (_context74.prev = _context74.next) {\n            case 0:\n              _context74.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"mintLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.licensorIpId, request.licenseTemplate, request.licenseTermsId, request.amount, request.receiver, request.royaltyContext]\n              });\n            case 2:\n              _yield$this$rpcClient32 = _context74.sent;\n              call = _yield$this$rpcClient32.request;\n              _context74.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context74.abrupt(\"return\", _context74.sent);\n            case 7:\n            case \"end\":\n              return _context74.stop();\n          }\n        }, _callee74, this);\n      }));\n      function mintLicenseTokens(_x53) {\n        return _mintLicenseTokens.apply(this, arguments);\n      }\n      return mintLicenseTokens;\n    }()\n    /**\n     * method mintLicenseTokens for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleMintLicenseTokensRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"mintLicenseTokensEncode\",\n    value: function mintLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"mintLicenseTokens\",\n          args: [request.licensorIpId, request.licenseTemplate, request.licenseTermsId, request.amount, request.receiver, request.royaltyContext]\n        })\n      };\n    }\n\n    /**\n     * method registerDerivative for contract LicensingModule\n     *\n     * @param request LicensingModuleRegisterDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerDerivative\",\n    value: function () {\n      var _registerDerivative = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee75(request) {\n        var _yield$this$rpcClient33, call;\n        return _regeneratorRuntime().wrap(function _callee75$(_context75) {\n          while (1) switch (_context75.prev = _context75.next) {\n            case 0:\n              _context75.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"registerDerivative\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.licenseTemplate, request.royaltyContext]\n              });\n            case 2:\n              _yield$this$rpcClient33 = _context75.sent;\n              call = _yield$this$rpcClient33.request;\n              _context75.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context75.abrupt(\"return\", _context75.sent);\n            case 7:\n            case \"end\":\n              return _context75.stop();\n          }\n        }, _callee75, this);\n      }));\n      function registerDerivative(_x54) {\n        return _registerDerivative.apply(this, arguments);\n      }\n      return registerDerivative;\n    }()\n    /**\n     * method registerDerivative for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleRegisterDerivativeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerDerivativeEncode\",\n    value: function registerDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"registerDerivative\",\n          args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.licenseTemplate, request.royaltyContext]\n        })\n      };\n    }\n\n    /**\n     * method registerDerivativeWithLicenseTokens for contract LicensingModule\n     *\n     * @param request LicensingModuleRegisterDerivativeWithLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerDerivativeWithLicenseTokens\",\n    value: function () {\n      var _registerDerivativeWithLicenseTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee76(request) {\n        var _yield$this$rpcClient34, call;\n        return _regeneratorRuntime().wrap(function _callee76$(_context76) {\n          while (1) switch (_context76.prev = _context76.next) {\n            case 0:\n              _context76.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"registerDerivativeWithLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.licenseTokenIds, request.royaltyContext]\n              });\n            case 2:\n              _yield$this$rpcClient34 = _context76.sent;\n              call = _yield$this$rpcClient34.request;\n              _context76.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context76.abrupt(\"return\", _context76.sent);\n            case 7:\n            case \"end\":\n              return _context76.stop();\n          }\n        }, _callee76, this);\n      }));\n      function registerDerivativeWithLicenseTokens(_x55) {\n        return _registerDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return registerDerivativeWithLicenseTokens;\n    }()\n    /**\n     * method registerDerivativeWithLicenseTokens for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleRegisterDerivativeWithLicenseTokensRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerDerivativeWithLicenseTokensEncode\",\n    value: function registerDerivativeWithLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"registerDerivativeWithLicenseTokens\",\n          args: [request.childIpId, request.licenseTokenIds, request.royaltyContext]\n        })\n      };\n    }\n  }]);\n}(LicensingModuleEventClient);\n\n// Contract PILicenseTemplate =============================================================\n\n/**\n * PiLicenseTemplateAuthorityUpdatedEvent\n *\n * @param authority address\n */\n\n/**\n * PiLicenseTemplateDerivativeApprovedEvent\n *\n * @param licenseTermsId uint256\n * @param ipId address\n * @param caller address\n * @param approved bool\n */\n\n/**\n * PiLicenseTemplateInitializedEvent\n *\n * @param version uint64\n */\n\n/**\n * PiLicenseTemplateLicenseTermsRegisteredEvent\n *\n * @param licenseTermsId uint256\n * @param licenseTemplate address\n * @param licenseTerms bytes\n */\n\n/**\n * PiLicenseTemplateUpgradedEvent\n *\n * @param implementation address\n */\n\n/**\n * PiLicenseTemplateExistsRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetEarlierExpireTimeRequest\n *\n * @param licenseTermsIds uint256[]\n * @param start uint256\n */\n\n/**\n * PiLicenseTemplateGetExpireTimeRequest\n *\n * @param licenseTermsId uint256\n * @param start uint256\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsRequest\n *\n * @param selectedLicenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsResponse\n *\n * @param terms tuple\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsIdRequest\n *\n * @param terms tuple\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsIdResponse\n *\n * @param selectedLicenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsUriRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetRoyaltyPolicyRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetRoyaltyPolicyResponse\n *\n * @param royaltyPolicy address\n * @param royaltyData bytes\n * @param mintingFee uint256\n * @param currency address\n */\n\n/**\n * PiLicenseTemplateIsDerivativeApprovedRequest\n *\n * @param parentIpId address\n * @param licenseTermsId uint256\n * @param childIpId address\n */\n\n/**\n * PiLicenseTemplateIsLicenseTransferableRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateSupportsInterfaceRequest\n *\n * @param interfaceId bytes4\n */\n\n/**\n * PiLicenseTemplateToJsonRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateVerifyCompatibleLicensesRequest\n *\n * @param licenseTermsIds uint256[]\n */\n\n/**\n * PiLicenseTemplateInitializeRequest\n *\n * @param accessManager address\n * @param name string\n * @param metadataURI string\n */\n\n/**\n * PiLicenseTemplateRegisterLicenseTermsRequest\n *\n * @param terms tuple\n */\n\n/**\n * PiLicenseTemplateSetApprovalRequest\n *\n * @param parentIpId address\n * @param licenseTermsId uint256\n * @param childIpId address\n * @param approved bool\n */\n\n/**\n * PiLicenseTemplateSetAuthorityRequest\n *\n * @param newAuthority address\n */\n\n/**\n * PiLicenseTemplateUpgradeToAndCallRequest\n *\n * @param newImplementation address\n * @param data bytes\n */\n\n/**\n * PiLicenseTemplateVerifyMintLicenseTokenRequest\n *\n * @param 0 uint256\n * @param 1 address\n * @param 2 address\n * @param 3 uint256\n */\n\n/**\n * PiLicenseTemplateVerifyRegisterDerivativeRequest\n *\n * @param childIpId address\n * @param parentIpId address\n * @param licenseTermsId uint256\n * @param licensee address\n */\n\n/**\n * PiLicenseTemplateVerifyRegisterDerivativeForAllParentsRequest\n *\n * @param childIpId address\n * @param parentIpIds address[]\n * @param licenseTermsIds uint256[]\n * @param childIpOwner address\n */\n\n/**\n * contract PILicenseTemplate event\n */\nvar PiLicenseTemplateEventClient = /*#__PURE__*/function () {\n  function PiLicenseTemplateEventClient(rpcClient, address) {\n    var _rpcClient$chain11;\n    _classCallCheck(this, PiLicenseTemplateEventClient);\n    this.address = address || getAddress(piLicenseTemplateAddress, (_rpcClient$chain11 = rpcClient.chain) === null || _rpcClient$chain11 === void 0 ? void 0 : _rpcClient$chain11.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event AuthorityUpdated for contract PILicenseTemplate\n   */\n  return _createClass(PiLicenseTemplateEventClient, [{\n    key: \"watchAuthorityUpdatedEvent\",\n    value: function watchAuthorityUpdatedEvent(_onLogs26) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"AuthorityUpdated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs26(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event AuthorityUpdated for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxAuthorityUpdatedEvent\",\n    value: function parseTxAuthorityUpdatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator26 = _createForOfIteratorHelper(txReceipt.logs),\n        _step26;\n      try {\n        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n          var log = _step26.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"AuthorityUpdated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"AuthorityUpdated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DerivativeApproved for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchDerivativeApprovedEvent\",\n    value: function watchDerivativeApprovedEvent(_onLogs27) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"DerivativeApproved\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs27(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DerivativeApproved for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxDerivativeApprovedEvent\",\n    value: function parseTxDerivativeApprovedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator27 = _createForOfIteratorHelper(txReceipt.logs),\n        _step27;\n      try {\n        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n          var log = _step27.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"DerivativeApproved\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DerivativeApproved\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Initialized for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchInitializedEvent\",\n    value: function watchInitializedEvent(_onLogs28) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"Initialized\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs28(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Initialized for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxInitializedEvent\",\n    value: function parseTxInitializedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator28 = _createForOfIteratorHelper(txReceipt.logs),\n        _step28;\n      try {\n        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n          var log = _step28.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"Initialized\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Initialized\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator28.e(err);\n      } finally {\n        _iterator28.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicenseTermsRegistered for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchLicenseTermsRegisteredEvent\",\n    value: function watchLicenseTermsRegisteredEvent(_onLogs29) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"LicenseTermsRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs29(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTermsRegistered for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxLicenseTermsRegisteredEvent\",\n    value: function parseTxLicenseTermsRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator29 = _createForOfIteratorHelper(txReceipt.logs),\n        _step29;\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var log = _step29.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"LicenseTermsRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTermsRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Upgraded for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchUpgradedEvent\",\n    value: function watchUpgradedEvent(_onLogs30) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"Upgraded\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs30(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Upgraded for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxUpgradedEvent\",\n    value: function parseTxUpgradedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator30 = _createForOfIteratorHelper(txReceipt.logs),\n        _step30;\n      try {\n        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n          var log = _step30.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"Upgraded\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Upgraded\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator30.e(err);\n      } finally {\n        _iterator30.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract PILicenseTemplate readonly method\n */\nvar PiLicenseTemplateReadOnlyClient = /*#__PURE__*/function (_PiLicenseTemplateEve) {\n  function PiLicenseTemplateReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, PiLicenseTemplateReadOnlyClient);\n    return _callSuper(this, PiLicenseTemplateReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method ACCESS_CONTROLLER for contract PILicenseTemplate\n   *\n   * @param request PiLicenseTemplateAccessControllerRequest\n   * @return Promise<PiLicenseTemplateAccessControllerResponse>\n   */\n  _inherits(PiLicenseTemplateReadOnlyClient, _PiLicenseTemplateEve);\n  return _createClass(PiLicenseTemplateReadOnlyClient, [{\n    key: \"accessController\",\n    value: function () {\n      var _accessController2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee78() {\n        return _regeneratorRuntime().wrap(function _callee78$(_context78) {\n          while (1) switch (_context78.prev = _context78.next) {\n            case 0:\n              _context78.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"ACCESS_CONTROLLER\"\n              });\n            case 2:\n              return _context78.abrupt(\"return\", _context78.sent);\n            case 3:\n            case \"end\":\n              return _context78.stop();\n          }\n        }, _callee78, this);\n      }));\n      function accessController() {\n        return _accessController2.apply(this, arguments);\n      }\n      return accessController;\n    }()\n    /**\n     * method IP_ACCOUNT_REGISTRY for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIpAccountRegistryRequest\n     * @return Promise<PiLicenseTemplateIpAccountRegistryResponse>\n     */\n  }, {\n    key: \"ipAccountRegistry\",\n    value: function () {\n      var _ipAccountRegistry2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee79() {\n        return _regeneratorRuntime().wrap(function _callee79$(_context79) {\n          while (1) switch (_context79.prev = _context79.next) {\n            case 0:\n              _context79.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"IP_ACCOUNT_REGISTRY\"\n              });\n            case 2:\n              return _context79.abrupt(\"return\", _context79.sent);\n            case 3:\n            case \"end\":\n              return _context79.stop();\n          }\n        }, _callee79, this);\n      }));\n      function ipAccountRegistry() {\n        return _ipAccountRegistry2.apply(this, arguments);\n      }\n      return ipAccountRegistry;\n    }()\n    /**\n     * method LICENSE_REGISTRY for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateLicenseRegistryRequest\n     * @return Promise<PiLicenseTemplateLicenseRegistryResponse>\n     */\n  }, {\n    key: \"licenseRegistry\",\n    value: function () {\n      var _licenseRegistry = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee80() {\n        return _regeneratorRuntime().wrap(function _callee80$(_context80) {\n          while (1) switch (_context80.prev = _context80.next) {\n            case 0:\n              _context80.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"LICENSE_REGISTRY\"\n              });\n            case 2:\n              return _context80.abrupt(\"return\", _context80.sent);\n            case 3:\n            case \"end\":\n              return _context80.stop();\n          }\n        }, _callee80, this);\n      }));\n      function licenseRegistry() {\n        return _licenseRegistry.apply(this, arguments);\n      }\n      return licenseRegistry;\n    }()\n    /**\n     * method ROYALTY_MODULE for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateRoyaltyModuleRequest\n     * @return Promise<PiLicenseTemplateRoyaltyModuleResponse>\n     */\n  }, {\n    key: \"royaltyModule\",\n    value: function () {\n      var _royaltyModule = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee81() {\n        return _regeneratorRuntime().wrap(function _callee81$(_context81) {\n          while (1) switch (_context81.prev = _context81.next) {\n            case 0:\n              _context81.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"ROYALTY_MODULE\"\n              });\n            case 2:\n              return _context81.abrupt(\"return\", _context81.sent);\n            case 3:\n            case \"end\":\n              return _context81.stop();\n          }\n        }, _callee81, this);\n      }));\n      function royaltyModule() {\n        return _royaltyModule.apply(this, arguments);\n      }\n      return royaltyModule;\n    }()\n    /**\n     * method TERMS_RENDERER for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateTermsRendererRequest\n     * @return Promise<PiLicenseTemplateTermsRendererResponse>\n     */\n  }, {\n    key: \"termsRenderer\",\n    value: function () {\n      var _termsRenderer = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee82() {\n        return _regeneratorRuntime().wrap(function _callee82$(_context82) {\n          while (1) switch (_context82.prev = _context82.next) {\n            case 0:\n              _context82.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"TERMS_RENDERER\"\n              });\n            case 2:\n              return _context82.abrupt(\"return\", _context82.sent);\n            case 3:\n            case \"end\":\n              return _context82.stop();\n          }\n        }, _callee82, this);\n      }));\n      function termsRenderer() {\n        return _termsRenderer.apply(this, arguments);\n      }\n      return termsRenderer;\n    }()\n    /**\n     * method UPGRADE_INTERFACE_VERSION for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateUpgradeInterfaceVersionRequest\n     * @return Promise<PiLicenseTemplateUpgradeInterfaceVersionResponse>\n     */\n  }, {\n    key: \"upgradeInterfaceVersion\",\n    value: function () {\n      var _upgradeInterfaceVersion3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee83() {\n        return _regeneratorRuntime().wrap(function _callee83$(_context83) {\n          while (1) switch (_context83.prev = _context83.next) {\n            case 0:\n              _context83.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"UPGRADE_INTERFACE_VERSION\"\n              });\n            case 2:\n              return _context83.abrupt(\"return\", _context83.sent);\n            case 3:\n            case \"end\":\n              return _context83.stop();\n          }\n        }, _callee83, this);\n      }));\n      function upgradeInterfaceVersion() {\n        return _upgradeInterfaceVersion3.apply(this, arguments);\n      }\n      return upgradeInterfaceVersion;\n    }()\n    /**\n     * method authority for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateAuthorityRequest\n     * @return Promise<PiLicenseTemplateAuthorityResponse>\n     */\n  }, {\n    key: \"authority\",\n    value: function () {\n      var _authority3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee84() {\n        return _regeneratorRuntime().wrap(function _callee84$(_context84) {\n          while (1) switch (_context84.prev = _context84.next) {\n            case 0:\n              _context84.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"authority\"\n              });\n            case 2:\n              return _context84.abrupt(\"return\", _context84.sent);\n            case 3:\n            case \"end\":\n              return _context84.stop();\n          }\n        }, _callee84, this);\n      }));\n      function authority() {\n        return _authority3.apply(this, arguments);\n      }\n      return authority;\n    }()\n    /**\n     * method exists for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateExistsRequest\n     * @return Promise<PiLicenseTemplateExistsResponse>\n     */\n  }, {\n    key: \"exists\",\n    value: function () {\n      var _exists2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee85(request) {\n        return _regeneratorRuntime().wrap(function _callee85$(_context85) {\n          while (1) switch (_context85.prev = _context85.next) {\n            case 0:\n              _context85.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"exists\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context85.abrupt(\"return\", _context85.sent);\n            case 3:\n            case \"end\":\n              return _context85.stop();\n          }\n        }, _callee85, this);\n      }));\n      function exists(_x57) {\n        return _exists2.apply(this, arguments);\n      }\n      return exists;\n    }()\n    /**\n     * method getEarlierExpireTime for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetEarlierExpireTimeRequest\n     * @return Promise<PiLicenseTemplateGetEarlierExpireTimeResponse>\n     */\n  }, {\n    key: \"getEarlierExpireTime\",\n    value: function () {\n      var _getEarlierExpireTime = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee86(request) {\n        return _regeneratorRuntime().wrap(function _callee86$(_context86) {\n          while (1) switch (_context86.prev = _context86.next) {\n            case 0:\n              _context86.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getEarlierExpireTime\",\n                args: [request.licenseTermsIds, request.start]\n              });\n            case 2:\n              return _context86.abrupt(\"return\", _context86.sent);\n            case 3:\n            case \"end\":\n              return _context86.stop();\n          }\n        }, _callee86, this);\n      }));\n      function getEarlierExpireTime(_x58) {\n        return _getEarlierExpireTime.apply(this, arguments);\n      }\n      return getEarlierExpireTime;\n    }()\n    /**\n     * method getExpireTime for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetExpireTimeRequest\n     * @return Promise<PiLicenseTemplateGetExpireTimeResponse>\n     */\n  }, {\n    key: \"getExpireTime\",\n    value: function () {\n      var _getExpireTime2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee87(request) {\n        return _regeneratorRuntime().wrap(function _callee87$(_context87) {\n          while (1) switch (_context87.prev = _context87.next) {\n            case 0:\n              _context87.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getExpireTime\",\n                args: [request.licenseTermsId, request.start]\n              });\n            case 2:\n              return _context87.abrupt(\"return\", _context87.sent);\n            case 3:\n            case \"end\":\n              return _context87.stop();\n          }\n        }, _callee87, this);\n      }));\n      function getExpireTime(_x59) {\n        return _getExpireTime2.apply(this, arguments);\n      }\n      return getExpireTime;\n    }()\n    /**\n     * method getLicenseTerms for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetLicenseTermsRequest\n     * @return Promise<PiLicenseTemplateGetLicenseTermsResponse>\n     */\n  }, {\n    key: \"getLicenseTerms\",\n    value: function () {\n      var _getLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee88(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee88$(_context88) {\n          while (1) switch (_context88.prev = _context88.next) {\n            case 0:\n              _context88.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getLicenseTerms\",\n                args: [request.selectedLicenseTermsId]\n              });\n            case 2:\n              result = _context88.sent;\n              return _context88.abrupt(\"return\", {\n                terms: result\n              });\n            case 4:\n            case \"end\":\n              return _context88.stop();\n          }\n        }, _callee88, this);\n      }));\n      function getLicenseTerms(_x60) {\n        return _getLicenseTerms.apply(this, arguments);\n      }\n      return getLicenseTerms;\n    }()\n    /**\n     * method getLicenseTermsId for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetLicenseTermsIdRequest\n     * @return Promise<PiLicenseTemplateGetLicenseTermsIdResponse>\n     */\n  }, {\n    key: \"getLicenseTermsId\",\n    value: function () {\n      var _getLicenseTermsId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee89(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee89$(_context89) {\n          while (1) switch (_context89.prev = _context89.next) {\n            case 0:\n              _context89.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getLicenseTermsId\",\n                args: [request.terms]\n              });\n            case 2:\n              result = _context89.sent;\n              return _context89.abrupt(\"return\", {\n                selectedLicenseTermsId: result\n              });\n            case 4:\n            case \"end\":\n              return _context89.stop();\n          }\n        }, _callee89, this);\n      }));\n      function getLicenseTermsId(_x61) {\n        return _getLicenseTermsId.apply(this, arguments);\n      }\n      return getLicenseTermsId;\n    }()\n    /**\n     * method getLicenseTermsURI for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetLicenseTermsUriRequest\n     * @return Promise<PiLicenseTemplateGetLicenseTermsUriResponse>\n     */\n  }, {\n    key: \"getLicenseTermsUri\",\n    value: function () {\n      var _getLicenseTermsUri = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee90(request) {\n        return _regeneratorRuntime().wrap(function _callee90$(_context90) {\n          while (1) switch (_context90.prev = _context90.next) {\n            case 0:\n              _context90.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getLicenseTermsURI\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context90.abrupt(\"return\", _context90.sent);\n            case 3:\n            case \"end\":\n              return _context90.stop();\n          }\n        }, _callee90, this);\n      }));\n      function getLicenseTermsUri(_x62) {\n        return _getLicenseTermsUri.apply(this, arguments);\n      }\n      return getLicenseTermsUri;\n    }()\n    /**\n     * method getMetadataURI for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetMetadataUriRequest\n     * @return Promise<PiLicenseTemplateGetMetadataUriResponse>\n     */\n  }, {\n    key: \"getMetadataUri\",\n    value: function () {\n      var _getMetadataUri = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee91() {\n        return _regeneratorRuntime().wrap(function _callee91$(_context91) {\n          while (1) switch (_context91.prev = _context91.next) {\n            case 0:\n              _context91.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getMetadataURI\"\n              });\n            case 2:\n              return _context91.abrupt(\"return\", _context91.sent);\n            case 3:\n            case \"end\":\n              return _context91.stop();\n          }\n        }, _callee91, this);\n      }));\n      function getMetadataUri() {\n        return _getMetadataUri.apply(this, arguments);\n      }\n      return getMetadataUri;\n    }()\n    /**\n     * method getRoyaltyPolicy for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetRoyaltyPolicyRequest\n     * @return Promise<PiLicenseTemplateGetRoyaltyPolicyResponse>\n     */\n  }, {\n    key: \"getRoyaltyPolicy\",\n    value: function () {\n      var _getRoyaltyPolicy = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee92(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee92$(_context92) {\n          while (1) switch (_context92.prev = _context92.next) {\n            case 0:\n              _context92.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getRoyaltyPolicy\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              result = _context92.sent;\n              return _context92.abrupt(\"return\", {\n                royaltyPolicy: result[0],\n                royaltyData: result[1],\n                mintingFee: result[2],\n                currency: result[3]\n              });\n            case 4:\n            case \"end\":\n              return _context92.stop();\n          }\n        }, _callee92, this);\n      }));\n      function getRoyaltyPolicy(_x63) {\n        return _getRoyaltyPolicy.apply(this, arguments);\n      }\n      return getRoyaltyPolicy;\n    }()\n    /**\n     * method isConsumingScheduledOp for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIsConsumingScheduledOpRequest\n     * @return Promise<PiLicenseTemplateIsConsumingScheduledOpResponse>\n     */\n  }, {\n    key: \"isConsumingScheduledOp\",\n    value: function () {\n      var _isConsumingScheduledOp3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee93() {\n        return _regeneratorRuntime().wrap(function _callee93$(_context93) {\n          while (1) switch (_context93.prev = _context93.next) {\n            case 0:\n              _context93.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"isConsumingScheduledOp\"\n              });\n            case 2:\n              return _context93.abrupt(\"return\", _context93.sent);\n            case 3:\n            case \"end\":\n              return _context93.stop();\n          }\n        }, _callee93, this);\n      }));\n      function isConsumingScheduledOp() {\n        return _isConsumingScheduledOp3.apply(this, arguments);\n      }\n      return isConsumingScheduledOp;\n    }()\n    /**\n     * method isDerivativeApproved for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIsDerivativeApprovedRequest\n     * @return Promise<PiLicenseTemplateIsDerivativeApprovedResponse>\n     */\n  }, {\n    key: \"isDerivativeApproved\",\n    value: function () {\n      var _isDerivativeApproved = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee94(request) {\n        return _regeneratorRuntime().wrap(function _callee94$(_context94) {\n          while (1) switch (_context94.prev = _context94.next) {\n            case 0:\n              _context94.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"isDerivativeApproved\",\n                args: [request.parentIpId, request.licenseTermsId, request.childIpId]\n              });\n            case 2:\n              return _context94.abrupt(\"return\", _context94.sent);\n            case 3:\n            case \"end\":\n              return _context94.stop();\n          }\n        }, _callee94, this);\n      }));\n      function isDerivativeApproved(_x64) {\n        return _isDerivativeApproved.apply(this, arguments);\n      }\n      return isDerivativeApproved;\n    }()\n    /**\n     * method isLicenseTransferable for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIsLicenseTransferableRequest\n     * @return Promise<PiLicenseTemplateIsLicenseTransferableResponse>\n     */\n  }, {\n    key: \"isLicenseTransferable\",\n    value: function () {\n      var _isLicenseTransferable = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee95(request) {\n        return _regeneratorRuntime().wrap(function _callee95$(_context95) {\n          while (1) switch (_context95.prev = _context95.next) {\n            case 0:\n              _context95.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"isLicenseTransferable\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context95.abrupt(\"return\", _context95.sent);\n            case 3:\n            case \"end\":\n              return _context95.stop();\n          }\n        }, _callee95, this);\n      }));\n      function isLicenseTransferable(_x65) {\n        return _isLicenseTransferable.apply(this, arguments);\n      }\n      return isLicenseTransferable;\n    }()\n    /**\n     * method name for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateNameRequest\n     * @return Promise<PiLicenseTemplateNameResponse>\n     */\n  }, {\n    key: \"name\",\n    value: function () {\n      var _name2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee96() {\n        return _regeneratorRuntime().wrap(function _callee96$(_context96) {\n          while (1) switch (_context96.prev = _context96.next) {\n            case 0:\n              _context96.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"name\"\n              });\n            case 2:\n              return _context96.abrupt(\"return\", _context96.sent);\n            case 3:\n            case \"end\":\n              return _context96.stop();\n          }\n        }, _callee96, this);\n      }));\n      function name() {\n        return _name2.apply(this, arguments);\n      }\n      return name;\n    }()\n    /**\n     * method proxiableUUID for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateProxiableUuidRequest\n     * @return Promise<PiLicenseTemplateProxiableUuidResponse>\n     */\n  }, {\n    key: \"proxiableUuid\",\n    value: function () {\n      var _proxiableUuid3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee97() {\n        return _regeneratorRuntime().wrap(function _callee97$(_context97) {\n          while (1) switch (_context97.prev = _context97.next) {\n            case 0:\n              _context97.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"proxiableUUID\"\n              });\n            case 2:\n              return _context97.abrupt(\"return\", _context97.sent);\n            case 3:\n            case \"end\":\n              return _context97.stop();\n          }\n        }, _callee97, this);\n      }));\n      function proxiableUuid() {\n        return _proxiableUuid3.apply(this, arguments);\n      }\n      return proxiableUuid;\n    }()\n    /**\n     * method supportsInterface for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateSupportsInterfaceRequest\n     * @return Promise<PiLicenseTemplateSupportsInterfaceResponse>\n     */\n  }, {\n    key: \"supportsInterface\",\n    value: function () {\n      var _supportsInterface2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee98(request) {\n        return _regeneratorRuntime().wrap(function _callee98$(_context98) {\n          while (1) switch (_context98.prev = _context98.next) {\n            case 0:\n              _context98.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"supportsInterface\",\n                args: [request.interfaceId]\n              });\n            case 2:\n              return _context98.abrupt(\"return\", _context98.sent);\n            case 3:\n            case \"end\":\n              return _context98.stop();\n          }\n        }, _callee98, this);\n      }));\n      function supportsInterface(_x66) {\n        return _supportsInterface2.apply(this, arguments);\n      }\n      return supportsInterface;\n    }()\n    /**\n     * method toJson for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateToJsonRequest\n     * @return Promise<PiLicenseTemplateToJsonResponse>\n     */\n  }, {\n    key: \"toJson\",\n    value: function () {\n      var _toJson = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee99(request) {\n        return _regeneratorRuntime().wrap(function _callee99$(_context99) {\n          while (1) switch (_context99.prev = _context99.next) {\n            case 0:\n              _context99.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"toJson\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context99.abrupt(\"return\", _context99.sent);\n            case 3:\n            case \"end\":\n              return _context99.stop();\n          }\n        }, _callee99, this);\n      }));\n      function toJson(_x67) {\n        return _toJson.apply(this, arguments);\n      }\n      return toJson;\n    }()\n    /**\n     * method totalRegisteredLicenseTerms for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateTotalRegisteredLicenseTermsRequest\n     * @return Promise<PiLicenseTemplateTotalRegisteredLicenseTermsResponse>\n     */\n  }, {\n    key: \"totalRegisteredLicenseTerms\",\n    value: function () {\n      var _totalRegisteredLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee100() {\n        return _regeneratorRuntime().wrap(function _callee100$(_context100) {\n          while (1) switch (_context100.prev = _context100.next) {\n            case 0:\n              _context100.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"totalRegisteredLicenseTerms\"\n              });\n            case 2:\n              return _context100.abrupt(\"return\", _context100.sent);\n            case 3:\n            case \"end\":\n              return _context100.stop();\n          }\n        }, _callee100, this);\n      }));\n      function totalRegisteredLicenseTerms() {\n        return _totalRegisteredLicenseTerms.apply(this, arguments);\n      }\n      return totalRegisteredLicenseTerms;\n    }()\n    /**\n     * method verifyCompatibleLicenses for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyCompatibleLicensesRequest\n     * @return Promise<PiLicenseTemplateVerifyCompatibleLicensesResponse>\n     */\n  }, {\n    key: \"verifyCompatibleLicenses\",\n    value: function () {\n      var _verifyCompatibleLicenses = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee101(request) {\n        return _regeneratorRuntime().wrap(function _callee101$(_context101) {\n          while (1) switch (_context101.prev = _context101.next) {\n            case 0:\n              _context101.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyCompatibleLicenses\",\n                args: [request.licenseTermsIds]\n              });\n            case 2:\n              return _context101.abrupt(\"return\", _context101.sent);\n            case 3:\n            case \"end\":\n              return _context101.stop();\n          }\n        }, _callee101, this);\n      }));\n      function verifyCompatibleLicenses(_x68) {\n        return _verifyCompatibleLicenses.apply(this, arguments);\n      }\n      return verifyCompatibleLicenses;\n    }()\n  }]);\n}(PiLicenseTemplateEventClient);\n\n/**\n * contract PILicenseTemplate write method\n */\nvar PiLicenseTemplateClient = /*#__PURE__*/function (_PiLicenseTemplateRea) {\n  function PiLicenseTemplateClient(rpcClient, wallet, address) {\n    var _this9;\n    _classCallCheck(this, PiLicenseTemplateClient);\n    _this9 = _callSuper(this, PiLicenseTemplateClient, [rpcClient, address]);\n    _this9.wallet = wallet;\n    return _this9;\n  }\n\n  /**\n   * method initialize for contract PILicenseTemplate\n   *\n   * @param request PiLicenseTemplateInitializeRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(PiLicenseTemplateClient, _PiLicenseTemplateRea);\n  return _createClass(PiLicenseTemplateClient, [{\n    key: \"initialize\",\n    value: function () {\n      var _initialize3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee102(request) {\n        var _yield$this$rpcClient35, call;\n        return _regeneratorRuntime().wrap(function _callee102$(_context102) {\n          while (1) switch (_context102.prev = _context102.next) {\n            case 0:\n              _context102.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"initialize\",\n                account: this.wallet.account,\n                args: [request.accessManager, request.name, request.metadataURI]\n              });\n            case 2:\n              _yield$this$rpcClient35 = _context102.sent;\n              call = _yield$this$rpcClient35.request;\n              _context102.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context102.abrupt(\"return\", _context102.sent);\n            case 7:\n            case \"end\":\n              return _context102.stop();\n          }\n        }, _callee102, this);\n      }));\n      function initialize(_x69) {\n        return _initialize3.apply(this, arguments);\n      }\n      return initialize;\n    }()\n    /**\n     * method initialize for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateInitializeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"initializeEncode\",\n    value: function initializeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"initialize\",\n          args: [request.accessManager, request.name, request.metadataURI]\n        })\n      };\n    }\n\n    /**\n     * method registerLicenseTerms for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateRegisterLicenseTermsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerLicenseTerms\",\n    value: function () {\n      var _registerLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee103(request) {\n        var _yield$this$rpcClient36, call;\n        return _regeneratorRuntime().wrap(function _callee103$(_context103) {\n          while (1) switch (_context103.prev = _context103.next) {\n            case 0:\n              _context103.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"registerLicenseTerms\",\n                account: this.wallet.account,\n                args: [request.terms]\n              });\n            case 2:\n              _yield$this$rpcClient36 = _context103.sent;\n              call = _yield$this$rpcClient36.request;\n              _context103.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context103.abrupt(\"return\", _context103.sent);\n            case 7:\n            case \"end\":\n              return _context103.stop();\n          }\n        }, _callee103, this);\n      }));\n      function registerLicenseTerms(_x70) {\n        return _registerLicenseTerms.apply(this, arguments);\n      }\n      return registerLicenseTerms;\n    }()\n    /**\n     * method registerLicenseTerms for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateRegisterLicenseTermsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerLicenseTermsEncode\",\n    value: function registerLicenseTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"registerLicenseTerms\",\n          args: [request.terms]\n        })\n      };\n    }\n\n    /**\n     * method setApproval for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateSetApprovalRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setApproval\",\n    value: function () {\n      var _setApproval = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee104(request) {\n        var _yield$this$rpcClient37, call;\n        return _regeneratorRuntime().wrap(function _callee104$(_context104) {\n          while (1) switch (_context104.prev = _context104.next) {\n            case 0:\n              _context104.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"setApproval\",\n                account: this.wallet.account,\n                args: [request.parentIpId, request.licenseTermsId, request.childIpId, request.approved]\n              });\n            case 2:\n              _yield$this$rpcClient37 = _context104.sent;\n              call = _yield$this$rpcClient37.request;\n              _context104.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context104.abrupt(\"return\", _context104.sent);\n            case 7:\n            case \"end\":\n              return _context104.stop();\n          }\n        }, _callee104, this);\n      }));\n      function setApproval(_x71) {\n        return _setApproval.apply(this, arguments);\n      }\n      return setApproval;\n    }()\n    /**\n     * method setApproval for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateSetApprovalRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setApprovalEncode\",\n    value: function setApprovalEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"setApproval\",\n          args: [request.parentIpId, request.licenseTermsId, request.childIpId, request.approved]\n        })\n      };\n    }\n\n    /**\n     * method setAuthority for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateSetAuthorityRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setAuthority\",\n    value: function () {\n      var _setAuthority3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee105(request) {\n        var _yield$this$rpcClient38, call;\n        return _regeneratorRuntime().wrap(function _callee105$(_context105) {\n          while (1) switch (_context105.prev = _context105.next) {\n            case 0:\n              _context105.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"setAuthority\",\n                account: this.wallet.account,\n                args: [request.newAuthority]\n              });\n            case 2:\n              _yield$this$rpcClient38 = _context105.sent;\n              call = _yield$this$rpcClient38.request;\n              _context105.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context105.abrupt(\"return\", _context105.sent);\n            case 7:\n            case \"end\":\n              return _context105.stop();\n          }\n        }, _callee105, this);\n      }));\n      function setAuthority(_x72) {\n        return _setAuthority3.apply(this, arguments);\n      }\n      return setAuthority;\n    }()\n    /**\n     * method setAuthority for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateSetAuthorityRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"setAuthorityEncode\",\n    value: function setAuthorityEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"setAuthority\",\n          args: [request.newAuthority]\n        })\n      };\n    }\n\n    /**\n     * method upgradeToAndCall for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateUpgradeToAndCallRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"upgradeToAndCall\",\n    value: function () {\n      var _upgradeToAndCall3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee106(request) {\n        var _yield$this$rpcClient39, call;\n        return _regeneratorRuntime().wrap(function _callee106$(_context106) {\n          while (1) switch (_context106.prev = _context106.next) {\n            case 0:\n              _context106.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"upgradeToAndCall\",\n                account: this.wallet.account,\n                args: [request.newImplementation, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient39 = _context106.sent;\n              call = _yield$this$rpcClient39.request;\n              _context106.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context106.abrupt(\"return\", _context106.sent);\n            case 7:\n            case \"end\":\n              return _context106.stop();\n          }\n        }, _callee106, this);\n      }));\n      function upgradeToAndCall(_x73) {\n        return _upgradeToAndCall3.apply(this, arguments);\n      }\n      return upgradeToAndCall;\n    }()\n    /**\n     * method upgradeToAndCall for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateUpgradeToAndCallRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"upgradeToAndCallEncode\",\n    value: function upgradeToAndCallEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"upgradeToAndCall\",\n          args: [request.newImplementation, request.data]\n        })\n      };\n    }\n\n    /**\n     * method verifyMintLicenseToken for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyMintLicenseTokenRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"verifyMintLicenseToken\",\n    value: function () {\n      var _verifyMintLicenseToken2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee107(request) {\n        var _yield$this$rpcClient40, call;\n        return _regeneratorRuntime().wrap(function _callee107$(_context107) {\n          while (1) switch (_context107.prev = _context107.next) {\n            case 0:\n              _context107.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyMintLicenseToken\",\n                account: this.wallet.account,\n                args: [request[0], request[1], request[2], request[3]]\n              });\n            case 2:\n              _yield$this$rpcClient40 = _context107.sent;\n              call = _yield$this$rpcClient40.request;\n              _context107.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context107.abrupt(\"return\", _context107.sent);\n            case 7:\n            case \"end\":\n              return _context107.stop();\n          }\n        }, _callee107, this);\n      }));\n      function verifyMintLicenseToken(_x74) {\n        return _verifyMintLicenseToken2.apply(this, arguments);\n      }\n      return verifyMintLicenseToken;\n    }()\n    /**\n     * method verifyMintLicenseToken for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateVerifyMintLicenseTokenRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"verifyMintLicenseTokenEncode\",\n    value: function verifyMintLicenseTokenEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"verifyMintLicenseToken\",\n          args: [request[0], request[1], request[2], request[3]]\n        })\n      };\n    }\n\n    /**\n     * method verifyRegisterDerivative for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"verifyRegisterDerivative\",\n    value: function () {\n      var _verifyRegisterDerivative = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee108(request) {\n        var _yield$this$rpcClient41, call;\n        return _regeneratorRuntime().wrap(function _callee108$(_context108) {\n          while (1) switch (_context108.prev = _context108.next) {\n            case 0:\n              _context108.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyRegisterDerivative\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.parentIpId, request.licenseTermsId, request.licensee]\n              });\n            case 2:\n              _yield$this$rpcClient41 = _context108.sent;\n              call = _yield$this$rpcClient41.request;\n              _context108.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context108.abrupt(\"return\", _context108.sent);\n            case 7:\n            case \"end\":\n              return _context108.stop();\n          }\n        }, _callee108, this);\n      }));\n      function verifyRegisterDerivative(_x75) {\n        return _verifyRegisterDerivative.apply(this, arguments);\n      }\n      return verifyRegisterDerivative;\n    }()\n    /**\n     * method verifyRegisterDerivative for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"verifyRegisterDerivativeEncode\",\n    value: function verifyRegisterDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"verifyRegisterDerivative\",\n          args: [request.childIpId, request.parentIpId, request.licenseTermsId, request.licensee]\n        })\n      };\n    }\n\n    /**\n     * method verifyRegisterDerivativeForAllParents for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeForAllParentsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"verifyRegisterDerivativeForAllParents\",\n    value: function () {\n      var _verifyRegisterDerivativeForAllParents = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee109(request) {\n        var _yield$this$rpcClient42, call;\n        return _regeneratorRuntime().wrap(function _callee109$(_context109) {\n          while (1) switch (_context109.prev = _context109.next) {\n            case 0:\n              _context109.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyRegisterDerivativeForAllParents\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.childIpOwner]\n              });\n            case 2:\n              _yield$this$rpcClient42 = _context109.sent;\n              call = _yield$this$rpcClient42.request;\n              _context109.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context109.abrupt(\"return\", _context109.sent);\n            case 7:\n            case \"end\":\n              return _context109.stop();\n          }\n        }, _callee109, this);\n      }));\n      function verifyRegisterDerivativeForAllParents(_x76) {\n        return _verifyRegisterDerivativeForAllParents.apply(this, arguments);\n      }\n      return verifyRegisterDerivativeForAllParents;\n    }()\n    /**\n     * method verifyRegisterDerivativeForAllParents for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeForAllParentsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"verifyRegisterDerivativeForAllParentsEncode\",\n    value: function verifyRegisterDerivativeForAllParentsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"verifyRegisterDerivativeForAllParents\",\n          args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.childIpOwner]\n        })\n      };\n    }\n  }]);\n}(PiLicenseTemplateReadOnlyClient);\n\n// Contract RoyaltyModule =============================================================\n\n/**\n * RoyaltyModuleIsWhitelistedRoyaltyPolicyRequest\n *\n * @param royaltyPolicy address\n */\n\n/**\n * RoyaltyModuleIsWhitelistedRoyaltyTokenRequest\n *\n * @param token address\n */\n\n/**\n * RoyaltyModulePayRoyaltyOnBehalfRequest\n *\n * @param receiverIpId address\n * @param payerIpId address\n * @param token address\n * @param amount uint256\n */\n\n/**\n * contract RoyaltyModule readonly method\n */\nvar RoyaltyModuleReadOnlyClient = /*#__PURE__*/function () {\n  function RoyaltyModuleReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain12;\n    _classCallCheck(this, RoyaltyModuleReadOnlyClient);\n    this.address = address || getAddress(royaltyModuleAddress, (_rpcClient$chain12 = rpcClient.chain) === null || _rpcClient$chain12 === void 0 ? void 0 : _rpcClient$chain12.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method isWhitelistedRoyaltyPolicy for contract RoyaltyModule\n   *\n   * @param request RoyaltyModuleIsWhitelistedRoyaltyPolicyRequest\n   * @return Promise<RoyaltyModuleIsWhitelistedRoyaltyPolicyResponse>\n   */\n  return _createClass(RoyaltyModuleReadOnlyClient, [{\n    key: \"isWhitelistedRoyaltyPolicy\",\n    value: function () {\n      var _isWhitelistedRoyaltyPolicy = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee110(request) {\n        return _regeneratorRuntime().wrap(function _callee110$(_context110) {\n          while (1) switch (_context110.prev = _context110.next) {\n            case 0:\n              _context110.next = 2;\n              return this.rpcClient.readContract({\n                abi: royaltyModuleAbi,\n                address: this.address,\n                functionName: \"isWhitelistedRoyaltyPolicy\",\n                args: [request.royaltyPolicy]\n              });\n            case 2:\n              return _context110.abrupt(\"return\", _context110.sent);\n            case 3:\n            case \"end\":\n              return _context110.stop();\n          }\n        }, _callee110, this);\n      }));\n      function isWhitelistedRoyaltyPolicy(_x77) {\n        return _isWhitelistedRoyaltyPolicy.apply(this, arguments);\n      }\n      return isWhitelistedRoyaltyPolicy;\n    }()\n    /**\n     * method isWhitelistedRoyaltyToken for contract RoyaltyModule\n     *\n     * @param request RoyaltyModuleIsWhitelistedRoyaltyTokenRequest\n     * @return Promise<RoyaltyModuleIsWhitelistedRoyaltyTokenResponse>\n     */\n  }, {\n    key: \"isWhitelistedRoyaltyToken\",\n    value: function () {\n      var _isWhitelistedRoyaltyToken = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee111(request) {\n        return _regeneratorRuntime().wrap(function _callee111$(_context111) {\n          while (1) switch (_context111.prev = _context111.next) {\n            case 0:\n              _context111.next = 2;\n              return this.rpcClient.readContract({\n                abi: royaltyModuleAbi,\n                address: this.address,\n                functionName: \"isWhitelistedRoyaltyToken\",\n                args: [request.token]\n              });\n            case 2:\n              return _context111.abrupt(\"return\", _context111.sent);\n            case 3:\n            case \"end\":\n              return _context111.stop();\n          }\n        }, _callee111, this);\n      }));\n      function isWhitelistedRoyaltyToken(_x78) {\n        return _isWhitelistedRoyaltyToken.apply(this, arguments);\n      }\n      return isWhitelistedRoyaltyToken;\n    }()\n  }]);\n}();\n\n/**\n * contract RoyaltyModule write method\n */\nvar RoyaltyModuleClient = /*#__PURE__*/function (_RoyaltyModuleReadOnl) {\n  function RoyaltyModuleClient(rpcClient, wallet, address) {\n    var _this10;\n    _classCallCheck(this, RoyaltyModuleClient);\n    _this10 = _callSuper(this, RoyaltyModuleClient, [rpcClient, address]);\n    _this10.wallet = wallet;\n    return _this10;\n  }\n\n  /**\n   * method payRoyaltyOnBehalf for contract RoyaltyModule\n   *\n   * @param request RoyaltyModulePayRoyaltyOnBehalfRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(RoyaltyModuleClient, _RoyaltyModuleReadOnl);\n  return _createClass(RoyaltyModuleClient, [{\n    key: \"payRoyaltyOnBehalf\",\n    value: function () {\n      var _payRoyaltyOnBehalf = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee112(request) {\n        var _yield$this$rpcClient43, call;\n        return _regeneratorRuntime().wrap(function _callee112$(_context112) {\n          while (1) switch (_context112.prev = _context112.next) {\n            case 0:\n              _context112.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: royaltyModuleAbi,\n                address: this.address,\n                functionName: \"payRoyaltyOnBehalf\",\n                account: this.wallet.account,\n                args: [request.receiverIpId, request.payerIpId, request.token, request.amount]\n              });\n            case 2:\n              _yield$this$rpcClient43 = _context112.sent;\n              call = _yield$this$rpcClient43.request;\n              _context112.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context112.abrupt(\"return\", _context112.sent);\n            case 7:\n            case \"end\":\n              return _context112.stop();\n          }\n        }, _callee112, this);\n      }));\n      function payRoyaltyOnBehalf(_x79) {\n        return _payRoyaltyOnBehalf.apply(this, arguments);\n      }\n      return payRoyaltyOnBehalf;\n    }()\n    /**\n     * method payRoyaltyOnBehalf for contract RoyaltyModule with only encode\n     *\n     * @param request RoyaltyModulePayRoyaltyOnBehalfRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"payRoyaltyOnBehalfEncode\",\n    value: function payRoyaltyOnBehalfEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: royaltyModuleAbi,\n          functionName: \"payRoyaltyOnBehalf\",\n          args: [request.receiverIpId, request.payerIpId, request.token, request.amount]\n        })\n      };\n    }\n  }]);\n}(RoyaltyModuleReadOnlyClient);\n\n// Contract RoyaltyPolicyLAP =============================================================\n\n/**\n * RoyaltyPolicyLapGetRoyaltyDataRequest\n *\n * @param ipId address\n */\n\n/**\n * RoyaltyPolicyLapGetRoyaltyDataResponse\n *\n * @param 0 bool\n * @param 1 address\n * @param 2 uint32\n */\n\n/**\n * RoyaltyPolicyLapOnRoyaltyPaymentRequest\n *\n * @param caller address\n * @param ipId address\n * @param token address\n * @param amount uint256\n */\n\n/**\n * contract RoyaltyPolicyLAP readonly method\n */\nvar RoyaltyPolicyLapReadOnlyClient = /*#__PURE__*/function () {\n  function RoyaltyPolicyLapReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain13;\n    _classCallCheck(this, RoyaltyPolicyLapReadOnlyClient);\n    this.address = address || getAddress(royaltyPolicyLapAddress, (_rpcClient$chain13 = rpcClient.chain) === null || _rpcClient$chain13 === void 0 ? void 0 : _rpcClient$chain13.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method getRoyaltyData for contract RoyaltyPolicyLAP\n   *\n   * @param request RoyaltyPolicyLapGetRoyaltyDataRequest\n   * @return Promise<RoyaltyPolicyLapGetRoyaltyDataResponse>\n   */\n  return _createClass(RoyaltyPolicyLapReadOnlyClient, [{\n    key: \"getRoyaltyData\",\n    value: function () {\n      var _getRoyaltyData = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee113(request) {\n        return _regeneratorRuntime().wrap(function _callee113$(_context113) {\n          while (1) switch (_context113.prev = _context113.next) {\n            case 0:\n              _context113.next = 2;\n              return this.rpcClient.readContract({\n                abi: royaltyPolicyLapAbi,\n                address: this.address,\n                functionName: \"getRoyaltyData\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context113.abrupt(\"return\", _context113.sent);\n            case 3:\n            case \"end\":\n              return _context113.stop();\n          }\n        }, _callee113, this);\n      }));\n      function getRoyaltyData(_x80) {\n        return _getRoyaltyData.apply(this, arguments);\n      }\n      return getRoyaltyData;\n    }()\n  }]);\n}();\n\n/**\n * contract RoyaltyPolicyLAP write method\n */\nvar RoyaltyPolicyLapClient = /*#__PURE__*/function (_RoyaltyPolicyLapRead) {\n  function RoyaltyPolicyLapClient(rpcClient, wallet, address) {\n    var _this11;\n    _classCallCheck(this, RoyaltyPolicyLapClient);\n    _this11 = _callSuper(this, RoyaltyPolicyLapClient, [rpcClient, address]);\n    _this11.wallet = wallet;\n    return _this11;\n  }\n\n  /**\n   * method onRoyaltyPayment for contract RoyaltyPolicyLAP\n   *\n   * @param request RoyaltyPolicyLapOnRoyaltyPaymentRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(RoyaltyPolicyLapClient, _RoyaltyPolicyLapRead);\n  return _createClass(RoyaltyPolicyLapClient, [{\n    key: \"onRoyaltyPayment\",\n    value: function () {\n      var _onRoyaltyPayment = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee114(request) {\n        var _yield$this$rpcClient44, call;\n        return _regeneratorRuntime().wrap(function _callee114$(_context114) {\n          while (1) switch (_context114.prev = _context114.next) {\n            case 0:\n              _context114.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: royaltyPolicyLapAbi,\n                address: this.address,\n                functionName: \"onRoyaltyPayment\",\n                account: this.wallet.account,\n                args: [request.caller, request.ipId, request.token, request.amount]\n              });\n            case 2:\n              _yield$this$rpcClient44 = _context114.sent;\n              call = _yield$this$rpcClient44.request;\n              _context114.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context114.abrupt(\"return\", _context114.sent);\n            case 7:\n            case \"end\":\n              return _context114.stop();\n          }\n        }, _callee114, this);\n      }));\n      function onRoyaltyPayment(_x81) {\n        return _onRoyaltyPayment.apply(this, arguments);\n      }\n      return onRoyaltyPayment;\n    }()\n    /**\n     * method onRoyaltyPayment for contract RoyaltyPolicyLAP with only encode\n     *\n     * @param request RoyaltyPolicyLapOnRoyaltyPaymentRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"onRoyaltyPaymentEncode\",\n    value: function onRoyaltyPaymentEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: royaltyPolicyLapAbi,\n          functionName: \"onRoyaltyPayment\",\n          args: [request.caller, request.ipId, request.token, request.amount]\n        })\n      };\n    }\n  }]);\n}(RoyaltyPolicyLapReadOnlyClient);\n\n// Contract SPG =============================================================\n\n/**\n * SpgCollectionCreatedEvent\n *\n * @param nftContract address\n */\n\n/**\n * SpgCreateCollectionRequest\n *\n * @param name string\n * @param symbol string\n * @param maxSupply uint32\n * @param mintFee uint256\n * @param mintFeeToken address\n * @param owner address\n */\n\n/**\n * SpgMintAndRegisterIpRequest\n *\n * @param nftContract address\n * @param recipient address\n * @param ipMetadata tuple\n */\n\n/**\n * SpgMintAndRegisterIpAndAttachPilTermsRequest\n *\n * @param nftContract address\n * @param recipient address\n * @param ipMetadata tuple\n * @param terms tuple\n */\n\n/**\n * SpgMintAndRegisterIpAndMakeDerivativeRequest\n *\n * @param nftContract address\n * @param derivData tuple\n * @param ipMetadata tuple\n * @param recipient address\n */\n\n/**\n * SpgMintAndRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n *\n * @param nftContract address\n * @param licenseTokenIds uint256[]\n * @param royaltyContext bytes\n * @param ipMetadata tuple\n * @param recipient address\n */\n\n/**\n * SpgRegisterIpRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param ipMetadata tuple\n * @param sigMetadata tuple\n */\n\n/**\n * SpgRegisterIpAndAttachPilTermsRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param ipMetadata tuple\n * @param terms tuple\n * @param sigMetadata tuple\n * @param sigAttach tuple\n */\n\n/**\n * SpgRegisterIpAndMakeDerivativeRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param derivData tuple\n * @param ipMetadata tuple\n * @param sigMetadata tuple\n * @param sigRegister tuple\n */\n\n/**\n * SpgRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param licenseTokenIds uint256[]\n * @param royaltyContext bytes\n * @param ipMetadata tuple\n * @param sigMetadata tuple\n * @param sigRegister tuple\n */\n\n/**\n * SpgRegisterPilTermsAndAttachRequest\n *\n * @param ipId address\n * @param terms tuple\n */\n\n/**\n * contract SPG event\n */\nvar SpgEventClient = /*#__PURE__*/function () {\n  function SpgEventClient(rpcClient, address) {\n    var _rpcClient$chain14;\n    _classCallCheck(this, SpgEventClient);\n    this.address = address || getAddress(spgAddress, (_rpcClient$chain14 = rpcClient.chain) === null || _rpcClient$chain14 === void 0 ? void 0 : _rpcClient$chain14.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event CollectionCreated for contract SPG\n   */\n  return _createClass(SpgEventClient, [{\n    key: \"watchCollectionCreatedEvent\",\n    value: function watchCollectionCreatedEvent(_onLogs31) {\n      return this.rpcClient.watchContractEvent({\n        abi: spgAbi,\n        address: this.address,\n        eventName: \"CollectionCreated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs31(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event CollectionCreated for contract SPG\n     */\n  }, {\n    key: \"parseTxCollectionCreatedEvent\",\n    value: function parseTxCollectionCreatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator31 = _createForOfIteratorHelper(txReceipt.logs),\n        _step31;\n      try {\n        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n          var log = _step31.value;\n          try {\n            var event = decodeEventLog({\n              abi: spgAbi,\n              eventName: \"CollectionCreated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"CollectionCreated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator31.e(err);\n      } finally {\n        _iterator31.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract SPG write method\n */\nvar SpgClient = /*#__PURE__*/function (_SpgEventClient) {\n  function SpgClient(rpcClient, wallet, address) {\n    var _this12;\n    _classCallCheck(this, SpgClient);\n    _this12 = _callSuper(this, SpgClient, [rpcClient, address]);\n    _this12.wallet = wallet;\n    return _this12;\n  }\n\n  /**\n   * method createCollection for contract SPG\n   *\n   * @param request SpgCreateCollectionRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(SpgClient, _SpgEventClient);\n  return _createClass(SpgClient, [{\n    key: \"createCollection\",\n    value: function () {\n      var _createCollection = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee115(request) {\n        var _yield$this$rpcClient45, call;\n        return _regeneratorRuntime().wrap(function _callee115$(_context115) {\n          while (1) switch (_context115.prev = _context115.next) {\n            case 0:\n              _context115.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"createCollection\",\n                account: this.wallet.account,\n                args: [request.name, request.symbol, request.maxSupply, request.mintFee, request.mintFeeToken, request.owner]\n              });\n            case 2:\n              _yield$this$rpcClient45 = _context115.sent;\n              call = _yield$this$rpcClient45.request;\n              _context115.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context115.abrupt(\"return\", _context115.sent);\n            case 7:\n            case \"end\":\n              return _context115.stop();\n          }\n        }, _callee115, this);\n      }));\n      function createCollection(_x82) {\n        return _createCollection.apply(this, arguments);\n      }\n      return createCollection;\n    }()\n    /**\n     * method createCollection for contract SPG with only encode\n     *\n     * @param request SpgCreateCollectionRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"createCollectionEncode\",\n    value: function createCollectionEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"createCollection\",\n          args: [request.name, request.symbol, request.maxSupply, request.mintFee, request.mintFeeToken, request.owner]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIp for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIp\",\n    value: function () {\n      var _mintAndRegisterIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee116(request) {\n        var _yield$this$rpcClient46, call;\n        return _regeneratorRuntime().wrap(function _callee116$(_context116) {\n          while (1) switch (_context116.prev = _context116.next) {\n            case 0:\n              _context116.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIp\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.recipient, request.ipMetadata]\n              });\n            case 2:\n              _yield$this$rpcClient46 = _context116.sent;\n              call = _yield$this$rpcClient46.request;\n              _context116.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context116.abrupt(\"return\", _context116.sent);\n            case 7:\n            case \"end\":\n              return _context116.stop();\n          }\n        }, _callee116, this);\n      }));\n      function mintAndRegisterIp(_x83) {\n        return _mintAndRegisterIp.apply(this, arguments);\n      }\n      return mintAndRegisterIp;\n    }()\n    /**\n     * method mintAndRegisterIp for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"mintAndRegisterIpEncode\",\n    value: function mintAndRegisterIpEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIp\",\n          args: [request.nftContract, request.recipient, request.ipMetadata]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIpAndAttachPILTerms for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpAndAttachPilTermsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIpAndAttachPilTerms\",\n    value: function () {\n      var _mintAndRegisterIpAndAttachPilTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee117(request) {\n        var _yield$this$rpcClient47, call;\n        return _regeneratorRuntime().wrap(function _callee117$(_context117) {\n          while (1) switch (_context117.prev = _context117.next) {\n            case 0:\n              _context117.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIpAndAttachPILTerms\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.recipient, request.ipMetadata, request.terms]\n              });\n            case 2:\n              _yield$this$rpcClient47 = _context117.sent;\n              call = _yield$this$rpcClient47.request;\n              _context117.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context117.abrupt(\"return\", _context117.sent);\n            case 7:\n            case \"end\":\n              return _context117.stop();\n          }\n        }, _callee117, this);\n      }));\n      function mintAndRegisterIpAndAttachPilTerms(_x84) {\n        return _mintAndRegisterIpAndAttachPilTerms.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndAttachPilTerms;\n    }()\n    /**\n     * method mintAndRegisterIpAndAttachPILTerms for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpAndAttachPilTermsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"mintAndRegisterIpAndAttachPilTermsEncode\",\n    value: function mintAndRegisterIpAndAttachPilTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIpAndAttachPILTerms\",\n          args: [request.nftContract, request.recipient, request.ipMetadata, request.terms]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIpAndMakeDerivative for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivative\",\n    value: function () {\n      var _mintAndRegisterIpAndMakeDerivative = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee118(request) {\n        var _yield$this$rpcClient48, call;\n        return _regeneratorRuntime().wrap(function _callee118$(_context118) {\n          while (1) switch (_context118.prev = _context118.next) {\n            case 0:\n              _context118.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIpAndMakeDerivative\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.derivData, request.ipMetadata, request.recipient]\n              });\n            case 2:\n              _yield$this$rpcClient48 = _context118.sent;\n              call = _yield$this$rpcClient48.request;\n              _context118.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context118.abrupt(\"return\", _context118.sent);\n            case 7:\n            case \"end\":\n              return _context118.stop();\n          }\n        }, _callee118, this);\n      }));\n      function mintAndRegisterIpAndMakeDerivative(_x85) {\n        return _mintAndRegisterIpAndMakeDerivative.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndMakeDerivative;\n    }()\n    /**\n     * method mintAndRegisterIpAndMakeDerivative for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivativeEncode\",\n    value: function mintAndRegisterIpAndMakeDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIpAndMakeDerivative\",\n          args: [request.nftContract, request.derivData, request.ipMetadata, request.recipient]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIpAndMakeDerivativeWithLicenseTokens for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n    value: function () {\n      var _mintAndRegisterIpAndMakeDerivativeWithLicenseTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee119(request) {\n        var _yield$this$rpcClient49, call;\n        return _regeneratorRuntime().wrap(function _callee119$(_context119) {\n          while (1) switch (_context119.prev = _context119.next) {\n            case 0:\n              _context119.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.recipient]\n              });\n            case 2:\n              _yield$this$rpcClient49 = _context119.sent;\n              call = _yield$this$rpcClient49.request;\n              _context119.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context119.abrupt(\"return\", _context119.sent);\n            case 7:\n            case \"end\":\n              return _context119.stop();\n          }\n        }, _callee119, this);\n      }));\n      function mintAndRegisterIpAndMakeDerivativeWithLicenseTokens(_x86) {\n        return _mintAndRegisterIpAndMakeDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndMakeDerivativeWithLicenseTokens;\n    }()\n    /**\n     * method mintAndRegisterIpAndMakeDerivativeWithLicenseTokens for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokensEncode\",\n    value: function mintAndRegisterIpAndMakeDerivativeWithLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n          args: [request.nftContract, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.recipient]\n        })\n      };\n    }\n\n    /**\n     * method registerIp for contract SPG\n     *\n     * @param request SpgRegisterIpRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIp\",\n    value: function () {\n      var _registerIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee120(request) {\n        var _yield$this$rpcClient50, call;\n        return _regeneratorRuntime().wrap(function _callee120$(_context120) {\n          while (1) switch (_context120.prev = _context120.next) {\n            case 0:\n              _context120.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIp\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.ipMetadata, request.sigMetadata]\n              });\n            case 2:\n              _yield$this$rpcClient50 = _context120.sent;\n              call = _yield$this$rpcClient50.request;\n              _context120.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context120.abrupt(\"return\", _context120.sent);\n            case 7:\n            case \"end\":\n              return _context120.stop();\n          }\n        }, _callee120, this);\n      }));\n      function registerIp(_x87) {\n        return _registerIp.apply(this, arguments);\n      }\n      return registerIp;\n    }()\n    /**\n     * method registerIp for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerIpEncode\",\n    value: function registerIpEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIp\",\n          args: [request.nftContract, request.tokenId, request.ipMetadata, request.sigMetadata]\n        })\n      };\n    }\n\n    /**\n     * method registerIpAndAttachPILTerms for contract SPG\n     *\n     * @param request SpgRegisterIpAndAttachPilTermsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIpAndAttachPilTerms\",\n    value: function () {\n      var _registerIpAndAttachPilTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee121(request) {\n        var _yield$this$rpcClient51, call;\n        return _regeneratorRuntime().wrap(function _callee121$(_context121) {\n          while (1) switch (_context121.prev = _context121.next) {\n            case 0:\n              _context121.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIpAndAttachPILTerms\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.ipMetadata, request.terms, request.sigMetadata, request.sigAttach]\n              });\n            case 2:\n              _yield$this$rpcClient51 = _context121.sent;\n              call = _yield$this$rpcClient51.request;\n              _context121.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context121.abrupt(\"return\", _context121.sent);\n            case 7:\n            case \"end\":\n              return _context121.stop();\n          }\n        }, _callee121, this);\n      }));\n      function registerIpAndAttachPilTerms(_x88) {\n        return _registerIpAndAttachPilTerms.apply(this, arguments);\n      }\n      return registerIpAndAttachPilTerms;\n    }()\n    /**\n     * method registerIpAndAttachPILTerms for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpAndAttachPilTermsRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerIpAndAttachPilTermsEncode\",\n    value: function registerIpAndAttachPilTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIpAndAttachPILTerms\",\n          args: [request.nftContract, request.tokenId, request.ipMetadata, request.terms, request.sigMetadata, request.sigAttach]\n        })\n      };\n    }\n\n    /**\n     * method registerIpAndMakeDerivative for contract SPG\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIpAndMakeDerivative\",\n    value: function () {\n      var _registerIpAndMakeDerivative = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee122(request) {\n        var _yield$this$rpcClient52, call;\n        return _regeneratorRuntime().wrap(function _callee122$(_context122) {\n          while (1) switch (_context122.prev = _context122.next) {\n            case 0:\n              _context122.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIpAndMakeDerivative\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.derivData, request.ipMetadata, request.sigMetadata, request.sigRegister]\n              });\n            case 2:\n              _yield$this$rpcClient52 = _context122.sent;\n              call = _yield$this$rpcClient52.request;\n              _context122.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context122.abrupt(\"return\", _context122.sent);\n            case 7:\n            case \"end\":\n              return _context122.stop();\n          }\n        }, _callee122, this);\n      }));\n      function registerIpAndMakeDerivative(_x89) {\n        return _registerIpAndMakeDerivative.apply(this, arguments);\n      }\n      return registerIpAndMakeDerivative;\n    }()\n    /**\n     * method registerIpAndMakeDerivative for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerIpAndMakeDerivativeEncode\",\n    value: function registerIpAndMakeDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIpAndMakeDerivative\",\n          args: [request.nftContract, request.tokenId, request.derivData, request.ipMetadata, request.sigMetadata, request.sigRegister]\n        })\n      };\n    }\n\n    /**\n     * method registerIpAndMakeDerivativeWithLicenseTokens for contract SPG\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n    value: function () {\n      var _registerIpAndMakeDerivativeWithLicenseTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee123(request) {\n        var _yield$this$rpcClient53, call;\n        return _regeneratorRuntime().wrap(function _callee123$(_context123) {\n          while (1) switch (_context123.prev = _context123.next) {\n            case 0:\n              _context123.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.sigMetadata, request.sigRegister]\n              });\n            case 2:\n              _yield$this$rpcClient53 = _context123.sent;\n              call = _yield$this$rpcClient53.request;\n              _context123.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context123.abrupt(\"return\", _context123.sent);\n            case 7:\n            case \"end\":\n              return _context123.stop();\n          }\n        }, _callee123, this);\n      }));\n      function registerIpAndMakeDerivativeWithLicenseTokens(_x90) {\n        return _registerIpAndMakeDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return registerIpAndMakeDerivativeWithLicenseTokens;\n    }()\n    /**\n     * method registerIpAndMakeDerivativeWithLicenseTokens for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerIpAndMakeDerivativeWithLicenseTokensEncode\",\n    value: function registerIpAndMakeDerivativeWithLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n          args: [request.nftContract, request.tokenId, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.sigMetadata, request.sigRegister]\n        })\n      };\n    }\n\n    /**\n     * method registerPILTermsAndAttach for contract SPG\n     *\n     * @param request SpgRegisterPilTermsAndAttachRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerPilTermsAndAttach\",\n    value: function () {\n      var _registerPilTermsAndAttach = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee124(request) {\n        var _yield$this$rpcClient54, call;\n        return _regeneratorRuntime().wrap(function _callee124$(_context124) {\n          while (1) switch (_context124.prev = _context124.next) {\n            case 0:\n              _context124.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerPILTermsAndAttach\",\n                account: this.wallet.account,\n                args: [request.ipId, request.terms]\n              });\n            case 2:\n              _yield$this$rpcClient54 = _context124.sent;\n              call = _yield$this$rpcClient54.request;\n              _context124.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context124.abrupt(\"return\", _context124.sent);\n            case 7:\n            case \"end\":\n              return _context124.stop();\n          }\n        }, _callee124, this);\n      }));\n      function registerPilTermsAndAttach(_x91) {\n        return _registerPilTermsAndAttach.apply(this, arguments);\n      }\n      return registerPilTermsAndAttach;\n    }()\n    /**\n     * method registerPILTermsAndAttach for contract SPG with only encode\n     *\n     * @param request SpgRegisterPilTermsAndAttachRequest\n     * @return EncodedTxData\n     */\n  }, {\n    key: \"registerPilTermsAndAttachEncode\",\n    value: function registerPilTermsAndAttachEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerPILTermsAndAttach\",\n          args: [request.ipId, request.terms]\n        })\n      };\n    }\n  }]);\n}(SpgEventClient);\n\n/**\n * This structure defines the terms for a Programmable IP License (PIL). These terms can be attached to IP Assets. The legal document of the PIL can be found in this repository.\n * @type LicenseTerms\n **/\n\nvar PIL_TYPE = /*#__PURE__*/function (PIL_TYPE) {\n  PIL_TYPE[PIL_TYPE[\"NON_COMMERCIAL_REMIX\"] = 0] = \"NON_COMMERCIAL_REMIX\";\n  PIL_TYPE[PIL_TYPE[\"COMMERCIAL_USE\"] = 1] = \"COMMERCIAL_USE\";\n  PIL_TYPE[PIL_TYPE[\"COMMERCIAL_REMIX\"] = 2] = \"COMMERCIAL_REMIX\";\n  return PIL_TYPE;\n}({});\nfunction getLicenseTermByType(type, term) {\n  var licenseTerms = {\n    transferable: true,\n    royaltyPolicy: zeroAddress,\n    defaultMintingFee: BigInt(0),\n    expiration: BigInt(0),\n    commercialUse: false,\n    commercialAttribution: false,\n    commercializerChecker: zeroAddress,\n    commercializerCheckerData: zeroAddress,\n    commercialRevShare: 0,\n    commercialRevCeiling: BigInt(0),\n    derivativesAllowed: true,\n    derivativesAttribution: true,\n    derivativesApproval: false,\n    derivativesReciprocal: true,\n    derivativeRevCeiling: BigInt(0),\n    currency: zeroAddress,\n    uri: \"\"\n  };\n  if (type === PIL_TYPE.NON_COMMERCIAL_REMIX) {\n    licenseTerms.commercializerCheckerData = \"0x\";\n    return licenseTerms;\n  } else if (type === PIL_TYPE.COMMERCIAL_USE) {\n    if (!term || term.defaultMintingFee === undefined || term.currency === undefined) {\n      throw new Error(\"MintingFee currency are required for commercial use PIL.\");\n    }\n    licenseTerms.royaltyPolicy = getAddress$2(term.royaltyPolicyLAPAddress);\n    licenseTerms.defaultMintingFee = BigInt(term.defaultMintingFee);\n    licenseTerms.commercialUse = true;\n    licenseTerms.commercialAttribution = true;\n    licenseTerms.derivativesReciprocal = false;\n    licenseTerms.currency = getAddress$2(term.currency);\n    return licenseTerms;\n  } else {\n    if (!term || term.defaultMintingFee === undefined || term.currency === undefined || term.commercialRevShare === undefined) {\n      throw new Error(\"MintingFee, currency and commercialRevShare are required for commercial remix PIL.\");\n    }\n    if (term.commercialRevShare < 0 || term.commercialRevShare > 100) {\n      throw new Error(\"CommercialRevShare should be between 0 and 100.\");\n    }\n    licenseTerms.royaltyPolicy = getAddress$2(term.royaltyPolicyLAPAddress);\n    licenseTerms.defaultMintingFee = BigInt(term.defaultMintingFee);\n    licenseTerms.commercialUse = true;\n    licenseTerms.commercialAttribution = true;\n    licenseTerms.commercialRevShare = term.commercialRevShare / 100 * 100000000;\n    licenseTerms.derivativesReciprocal = true;\n    licenseTerms.currency = getAddress$2(term.currency);\n    return licenseTerms;\n  }\n}\nvar AddressZero = \"0x0000000000000000000000000000000000000000\";\nvar HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nvar defaultFunctionSelector = \"0x00000000\";\n\n/**\n * Get the signature for setting permissions.\n * @param param - The parameter object containing necessary data to get the signature.\n * @param param.ipId - The IP ID.\n * @param param.deadline - The deadline.\n * @param param.nonce - The nonce.\n * @param param.wallet - The wallet client.\n * @param param.chainId - The chain ID.\n * @param param.permissions - The permissions.\n * @param param.permissionFunc - The permission function,default function is setPermission.\n * @returns A Promise that resolves to the signature.\n */\nvar getPermissionSignature = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(param) {\n    var ipId, deadline, state, wallet, chainId, permissions, permissionFunc, permissionFunction, accessAddress, data, nonce;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          ipId = param.ipId, deadline = param.deadline, state = param.state, wallet = param.wallet, chainId = param.chainId, permissions = param.permissions, permissionFunc = param.permissionFunc;\n          if (wallet.signTypedData) {\n            _context.next = 3;\n            break;\n          }\n          throw new Error(\"The wallet client does not support signTypedData, please try again.\");\n        case 3:\n          if (wallet.account) {\n            _context.next = 5;\n            break;\n          }\n          throw new Error(\"The wallet client does not have an account, please try again.\");\n        case 5:\n          permissionFunction = permissionFunc ? permissionFunc : \"setPermission\";\n          accessAddress = accessControllerAddress[Number(chainId)];\n          data = encodeFunctionData({\n            abi: accessControllerAbi,\n            functionName: permissionFunc ? permissionFunc : \"setPermission\",\n            args: permissionFunction === \"setPermission\" ? [getAddress$1(permissions[0].ipId, \"permissions[0].ipId\"), getAddress$1(permissions[0].signer, \"permissions[0].signer\"), getAddress$1(permissions[0].to, \"permissions[0].to\"), permissions[0].func ? toFunctionSelector(permissions[0].func) : defaultFunctionSelector, permissions[0].permission] : [permissions.map(function (item, index) {\n              return {\n                ipAccount: getAddress$1(item.ipId, \"permissions[\".concat(index, \"].ipId\")),\n                signer: getAddress$1(item.signer, \"permissions[\".concat(index, \"].signer\")),\n                to: getAddress$1(item.to, \"permissions[\".concat(index, \"].to\")),\n                func: item.func ? toFunctionSelector(item.func) : defaultFunctionSelector,\n                permission: item.permission\n              };\n            })]\n          });\n          nonce = keccak256(encodeAbiParameters([{\n            name: \"\",\n            type: \"bytes32\"\n          }, {\n            name: \"\",\n            type: \"bytes\"\n          }], [state, encodeFunctionData({\n            abi: ipAccountImplAbi,\n            functionName: \"execute\",\n            args: [accessAddress, 0n, data]\n          })]));\n          _context.next = 11;\n          return wallet.signTypedData({\n            account: wallet.account,\n            domain: {\n              name: \"Story Protocol IP Account\",\n              version: \"1\",\n              chainId: Number(chainId),\n              verifyingContract: getAddress$1(ipId, \"ipId\")\n            },\n            types: {\n              Execute: [{\n                name: \"to\",\n                type: \"address\"\n              }, {\n                name: \"value\",\n                type: \"uint256\"\n              }, {\n                name: \"data\",\n                type: \"bytes\"\n              }, {\n                name: \"nonce\",\n                type: \"bytes32\"\n              }, {\n                name: \"deadline\",\n                type: \"uint256\"\n              }]\n            },\n            primaryType: \"Execute\",\n            message: {\n              to: getAddress$1(accessControllerAddress[Number(chainId)], \"accessControllerAddress\"),\n              value: BigInt(0),\n              data: data,\n              nonce: nonce,\n              deadline: BigInt(deadline)\n            }\n          });\n        case 11:\n          return _context.abrupt(\"return\", _context.sent);\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getPermissionSignature(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getDeadline = function getDeadline(deadline) {\n  if (deadline && (isNaN(Number(deadline)) || BigInt(deadline) < 0n)) {\n    throw new Error(\"Invalid deadline value.\");\n  }\n  var timestamp = BigInt(Date.now());\n  return deadline ? timestamp + BigInt(deadline) : timestamp + 1000n;\n};\n\n/**\n * Permission level\n * @enum {number}\n **/\nvar AccessPermission = /*#__PURE__*/function (AccessPermission) {\n  AccessPermission[AccessPermission[\"ABSTAIN\"] = 0] = \"ABSTAIN\";\n  AccessPermission[AccessPermission[\"ALLOW\"] = 1] = \"ALLOW\";\n  AccessPermission[AccessPermission[\"DENY\"] = 2] = \"DENY\";\n  return AccessPermission;\n}({});\nvar _excluded = [\"title\", \"description\", \"ipType\", \"relationships\", \"createdAt\", \"watermarkImg\", \"creators\", \"media\", \"attributes\", \"app\", \"tags\", \"robotTerms\"];\nvar IPAssetClient = /*#__PURE__*/function () {\n  function IPAssetClient(rpcClient, wallet, chainId) {\n    _classCallCheck(this, IPAssetClient);\n    this.licensingModuleClient = new LicensingModuleClient(rpcClient, wallet);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(rpcClient, wallet);\n    this.licenseTemplateClient = new PiLicenseTemplateClient(rpcClient, wallet);\n    this.licenseRegistryReadOnlyClient = new LicenseRegistryReadOnlyClient(rpcClient);\n    this.licenseTokenReadOnlyClient = new LicenseTokenReadOnlyClient(rpcClient);\n    this.royaltyPolicyLAPClient = new RoyaltyPolicyLapClient(rpcClient, wallet);\n    this.accessControllerClient = new AccessControllerClient(rpcClient, wallet);\n    this.coreMetadataModuleClient = new CoreMetadataModuleClient(rpcClient, wallet);\n    this.spgClient = new SpgClient(rpcClient, wallet);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n    this.chainId = chainId;\n  }\n\n  /**\n   * Create a new `IpCreator` object with the specified details.\n   * @param params - The parameters required to create the `IpCreator` object.\n   *   @param params.name The name of the creator.\n   *   @param params.address The wallet address of the creator.\n   *   @param params.description [Optional] A description of the creator.\n   *   @param params.image [Optional] The URL or path to an image representing the creator.\n   *   @param params.socialMedia [Optional] An array of social media profiles associated with the creator.\n   *     @param params.socialMedia[].platform The name of the social media platform.\n   *     @param params.socialMedia[].url The URL to the creator's profile on the platform.\n   *  @param params.contributionPercent The percentage of contribution by the creator, must add up to 100.\n   *  @param params.role [Optional] The role of the creator in relation to the IP.\n   * @returns An `IpCreator` object containing the provided details.\n   */\n  return _createClass(IPAssetClient, [{\n    key: \"generateCreatorMetadata\",\n    value: function generateCreatorMetadata(param) {\n      var name = param.name,\n        address = param.address,\n        _param$description = param.description,\n        description = _param$description === void 0 ? \"\" : _param$description,\n        _param$image = param.image,\n        image = _param$image === void 0 ? \"\" : _param$image,\n        _param$socialMedia = param.socialMedia,\n        socialMedia = _param$socialMedia === void 0 ? [] : _param$socialMedia,\n        contributionPercent = param.contributionPercent,\n        _param$role = param.role,\n        role = _param$role === void 0 ? \"\" : _param$role;\n      return {\n        name: name,\n        address: address,\n        description: description,\n        image: image,\n        socialMedia: socialMedia,\n        contributionPercent: contributionPercent,\n        role: role\n      };\n    }\n\n    /**\n     * Create a new `IpMetadata` object with the specified details.\n     * @param params - The parameters required to create the `IpMetadata` object.\n     *   @param params.title [Optional] The title of the IP.\n     *   @param params.description [Optional] A description of the IP.\n     *   @param params.ipType [Optional] The type of the IP asset (e.g., \"character\", \"chapter\").\n     *   @param params.relationships [Optional] An array of relationships between this IP and its parent IPs.\n     *     @param params.relationships[].ipId The ID of the parent IP.\n     *     @param params.relationships[].type The type of relationship (e.g., \"APPEARS_IN\").\n     *   @param params.createdAt [Optional] The creation date and time of the IP in ISO 8601 format.\n     *   @param params.watermarkImg [Optional] The URL or path to an image used as a watermark for the IP.\n     *   @param params.creators [Optional] An array of creators associated with the IP.\n     *     @param params.creators[].name The name of the creator.\n     *     @param params.creators[].address The address of the creator.\n     *     @param params.creators[].description [Optional] A description of the creator.\n     *     @param params.creators[].image [Optional] The URL or path to an image representing the creator.\n     *     @param params.creators[].socialMedia [Optional] An array of social media profiles for the creator.\n     *     @param params.creators[].socialMedia[].platform The social media platform name.\n     *     @param params.creators[].socialMedia[].url The URL to the creator's profile.\n     *     @param params.creators[].role [Optional] The role of the creator in relation to the IP.\n     *     @param params.creators[].contributionPercent The percentage of contribution by the creator.\n     *   @param params.media [Optional] An array of media related to the IP.\n     *     @param params.media[].name The name of the media.\n     *     @param params.media[].url The URL to the media.\n     *     @param params.media[].mimeType The MIME type of the media.\n     *   @param params.attributes [Optional] An array of key-value pairs providing additional metadata.\n     *     @param params.attributes[].key The key for the attribute.\n     *     @param params.attributes[].value The value for the attribute, can be a string or number.\n     *   @param params.app [Optional] Information about the application associated with the IP.\n     *     @param params.app.id The ID of the application.\n     *     @param params.app.name The name of the application.\n     *     @param params.app.website The website URL of the application.\n     *   @param params.tags [Optional] An array of tags associated with the IP.\n     *   @param params.robotTerms [Optional] Robot terms for the IP, specifying access rules.\n     *     @param params.robotTerms.userAgent The user agent for which the rules apply.\n     *     @param params.robotTerms.allow The rules allowing access.\n     *   @param params.additionalProperties [Optional] Any additional key-value pairs to include in the metadata.\n     * @returns An `IpMetadata` object containing the provided details and any additional properties.\n     */\n  }, {\n    key: \"generateIpMetadata\",\n    value: function generateIpMetadata(param) {\n      var _param$title = param.title,\n        title = _param$title === void 0 ? \"\" : _param$title,\n        _param$description2 = param.description,\n        description = _param$description2 === void 0 ? \"\" : _param$description2,\n        _param$ipType = param.ipType,\n        ipType = _param$ipType === void 0 ? \"\" : _param$ipType,\n        _param$relationships = param.relationships,\n        relationships = _param$relationships === void 0 ? [] : _param$relationships,\n        _param$createdAt = param.createdAt,\n        createdAt = _param$createdAt === void 0 ? \"\" : _param$createdAt,\n        _param$watermarkImg = param.watermarkImg,\n        watermarkImg = _param$watermarkImg === void 0 ? \"\" : _param$watermarkImg,\n        _param$creators = param.creators,\n        creators = _param$creators === void 0 ? [] : _param$creators,\n        _param$media = param.media,\n        media = _param$media === void 0 ? [] : _param$media,\n        _param$attributes = param.attributes,\n        attributes = _param$attributes === void 0 ? [] : _param$attributes,\n        app = param.app,\n        _param$tags = param.tags,\n        tags = _param$tags === void 0 ? [] : _param$tags,\n        robotTerms = param.robotTerms,\n        additionalProperties = _objectWithoutProperties(param, _excluded);\n      return _objectSpread2({\n        title: title,\n        description: description,\n        ipType: ipType,\n        relationships: relationships,\n        createdAt: createdAt,\n        watermarkImg: watermarkImg,\n        creators: creators,\n        media: media,\n        attributes: attributes,\n        app: app,\n        tags: tags,\n        robotTerms: robotTerms\n      }, additionalProperties);\n    }\n\n    /**\n     * Registers an NFT as IP, creating a corresponding IP record.\n     * @param request - The request object that contains all data needed to register IP.\n     *   @param request.nftContract The address of the NFT.\n     *   @param request.tokenId The token identifier of the NFT.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, resolverAddr, metadataProviderAddress, metadata)\n     */\n  }, {\n    key: \"register\",\n    value: function () {\n      var _register = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$ipMetadata, _request$ipMetadata2, _request$ipMetadata3, _request$ipMetadata4, _request$txOptions, tokenId, ipIdAddress, isRegistered, object, _request$txOptions2, txHash, calculatedDeadline, signature, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              tokenId = BigInt(request.tokenId);\n              _context.next = 4;\n              return this.getIpIdAddress(request.nftContract, tokenId);\n            case 4:\n              ipIdAddress = _context.sent;\n              _context.next = 7;\n              return this.isRegistered(ipIdAddress);\n            case 7:\n              isRegistered = _context.sent;\n              if (!isRegistered) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                ipId: ipIdAddress\n              });\n            case 10:\n              object = {\n                tokenId: tokenId,\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata = request.ipMetadata) === null || _request$ipMetadata === void 0 ? void 0 : _request$ipMetadata.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata2 = request.ipMetadata) === null || _request$ipMetadata2 === void 0 ? void 0 : _request$ipMetadata2.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata3 = request.ipMetadata) === null || _request$ipMetadata3 === void 0 ? void 0 : _request$ipMetadata3.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata4 = request.ipMetadata) === null || _request$ipMetadata4 === void 0 ? void 0 : _request$ipMetadata4.nftMetadataHash) || zeroHash\n                },\n                sigMetadata: {\n                  signer: zeroAddress,\n                  deadline: BigInt(0),\n                  signature: zeroHash\n                }\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 19;\n                break;\n              }\n              if (!request.ipMetadata) {\n                _context.next = 16;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.spgClient.registerIpEncode(object)\n              });\n            case 16:\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.ipAssetRegistryClient.registerEncode({\n                  tokenContract: object.nftContract,\n                  tokenId: object.tokenId,\n                  chainid: chain[this.chainId]\n                })\n              });\n            case 17:\n              _context.next = 42;\n              break;\n            case 19:\n              if (!request.ipMetadata) {\n                _context.next = 30;\n                break;\n              }\n              calculatedDeadline = getDeadline(request.deadline);\n              _context.next = 23;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: toHex(0, {\n                  size: 32\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }]\n              });\n            case 23:\n              signature = _context.sent;\n              object.sigMetadata = {\n                signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                deadline: calculatedDeadline,\n                signature: signature\n              };\n              _context.next = 27;\n              return this.spgClient.registerIp(object);\n            case 27:\n              txHash = _context.sent;\n              _context.next = 33;\n              break;\n            case 30:\n              _context.next = 32;\n              return this.ipAssetRegistryClient.register({\n                tokenContract: object.nftContract,\n                tokenId: object.tokenId,\n                chainid: chain[this.chainId]\n              });\n            case 32:\n              txHash = _context.sent;\n            case 33:\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 41;\n                break;\n              }\n              _context.next = 36;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 36:\n              txReceipt = _context.sent;\n              targetLogs = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                ipId: targetLogs[0].ipId\n              });\n            case 41:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 42:\n              _context.next = 47;\n              break;\n            case 44:\n              _context.prev = 44;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to register IP\");\n            case 47:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 44]]);\n      }));\n      function register(_x) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n    /**\n     * Registers a derivative directly with parent IP's license terms, without needing license tokens,\n     * and attaches the license terms of the parent IPs to the derivative IP.\n     * The license terms must be attached to the parent IP before calling this function.\n     * All IPs attached default license terms by default.\n     * The derivative IP owner must be the caller or an authorized operator.\n     * @param request - The request object that contains all data needed to register derivative IP.\n     *   @param request.childIpId The derivative IP ID.\n     *   @param request.parentIpIds The parent IP IDs.\n     *   @param request.licenseTermsIds The IDs of the license terms that the parent IP supports.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n  }, {\n    key: \"registerDerivative\",\n    value: function () {\n      var _registerDerivative = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, isChildIpIdRegistered, _iterator, _step, parentId, isParentIpIdRegistered, i, isAttachedLicenseTerms, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return this.isRegistered(request.childIpId);\n            case 3:\n              isChildIpIdRegistered = _context2.sent;\n              if (isChildIpIdRegistered) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Error(\"The child IP with id \".concat(request.childIpId, \" is not registered.\"));\n            case 6:\n              _iterator = _createForOfIteratorHelper(request.parentIpIds);\n              _context2.prev = 7;\n              _iterator.s();\n            case 9:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 18;\n                break;\n              }\n              parentId = _step.value;\n              _context2.next = 13;\n              return this.isRegistered(getAddress$1(parentId, \"request.parentIpIds\"));\n            case 13:\n              isParentIpIdRegistered = _context2.sent;\n              if (isParentIpIdRegistered) {\n                _context2.next = 16;\n                break;\n              }\n              throw new Error(\"The parent IP with id \".concat(parentId, \" is not registered.\"));\n            case 16:\n              _context2.next = 9;\n              break;\n            case 18:\n              _context2.next = 23;\n              break;\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](7);\n              _iterator.e(_context2.t0);\n            case 23:\n              _context2.prev = 23;\n              _iterator.f();\n              return _context2.finish(23);\n            case 26:\n              if (!(request.parentIpIds.length !== request.licenseTermsIds.length)) {\n                _context2.next = 28;\n                break;\n              }\n              throw new Error(\"Parent IP IDs and License terms IDs must be provided in pairs.\");\n            case 28:\n              i = 0;\n            case 29:\n              if (!(i < request.parentIpIds.length)) {\n                _context2.next = 38;\n                break;\n              }\n              _context2.next = 32;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: getAddress$1(request.parentIpIds[i], \"request.parentIpIds\"),\n                licenseTemplate: request.licenseTemplate && getAddress$1(request.licenseTemplate, \"request.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: BigInt(request.licenseTermsIds[i])\n              });\n            case 32:\n              isAttachedLicenseTerms = _context2.sent;\n              if (isAttachedLicenseTerms) {\n                _context2.next = 35;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsIds[i], \" must be attached to the parent ipId \").concat(request.parentIpIds[i], \" before registering derivative.\"));\n            case 35:\n              i++;\n              _context2.next = 29;\n              break;\n            case 38:\n              req = {\n                childIpId: request.childIpId,\n                parentIpIds: request.parentIpIds,\n                licenseTermsIds: request.licenseTermsIds.map(function (id) {\n                  return BigInt(id);\n                }),\n                licenseTemplate: request.licenseTemplate || this.licenseTemplateClient.address,\n                royaltyContext: zeroAddress\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 43;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.registerDerivativeEncode(req)\n              });\n            case 43:\n              _context2.next = 45;\n              return this.licensingModuleClient.registerDerivative(req);\n            case 45:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 52;\n                break;\n              }\n              _context2.next = 49;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 49:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 52:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 53:\n              _context2.next = 58;\n              break;\n            case 55:\n              _context2.prev = 55;\n              _context2.t1 = _context2[\"catch\"](0);\n              handleError(_context2.t1, \"Failed to register derivative\");\n            case 58:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 55], [7, 20, 23, 26]]);\n      }));\n      function registerDerivative(_x2) {\n        return _registerDerivative.apply(this, arguments);\n      }\n      return registerDerivative;\n    }()\n    /**\n     * Registers a derivative with license tokens.\n     * the derivative IP is registered with license tokens minted from the parent IP's license terms.\n     * the license terms of the parent IPs issued with license tokens are attached to the derivative IP.\n     * the caller must be the derivative IP owner or an authorized operator.\n     * @param request - The request object that contains all data needed to register derivative license tokens.\n     *   @param request.childIpId The derivative IP ID.\n     *   @param request.licenseTokenIds The IDs of the license tokens.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n  }, {\n    key: \"registerDerivativeWithLicenseTokens\",\n    value: function () {\n      var _registerDerivativeWithLicenseTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, isChildIpIdRegistered, _iterator2, _step2, licenseTokenId, tokenOwnerAddress, req, _request$txOptions6, txHash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.isRegistered(request.childIpId);\n            case 3:\n              isChildIpIdRegistered = _context3.sent;\n              if (isChildIpIdRegistered) {\n                _context3.next = 6;\n                break;\n              }\n              throw new Error(\"The child IP with id \".concat(request.childIpId, \" is not registered.\"));\n            case 6:\n              request.licenseTokenIds = request.licenseTokenIds.map(function (id) {\n                return BigInt(id);\n              });\n              _iterator2 = _createForOfIteratorHelper(request.licenseTokenIds);\n              _context3.prev = 8;\n              _iterator2.s();\n            case 10:\n              if ((_step2 = _iterator2.n()).done) {\n                _context3.next = 19;\n                break;\n              }\n              licenseTokenId = _step2.value;\n              _context3.next = 14;\n              return this.licenseTokenReadOnlyClient.ownerOf({\n                tokenId: licenseTokenId\n              });\n            case 14:\n              tokenOwnerAddress = _context3.sent;\n              if (tokenOwnerAddress) {\n                _context3.next = 17;\n                break;\n              }\n              throw new Error(\"License token id \".concat(licenseTokenId, \" must be owned by the caller.\"));\n            case 17:\n              _context3.next = 10;\n              break;\n            case 19:\n              _context3.next = 24;\n              break;\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](8);\n              _iterator2.e(_context3.t0);\n            case 24:\n              _context3.prev = 24;\n              _iterator2.f();\n              return _context3.finish(24);\n            case 27:\n              req = {\n                childIpId: getAddress$1(request.childIpId, \"request.childIpId\"),\n                licenseTokenIds: request.licenseTokenIds,\n                royaltyContext: zeroAddress\n              };\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 32;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.registerDerivativeWithLicenseTokensEncode(req)\n              });\n            case 32:\n              _context3.next = 34;\n              return this.licensingModuleClient.registerDerivativeWithLicenseTokens(req);\n            case 34:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 41;\n                break;\n              }\n              _context3.next = 38;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 38:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 41:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 42:\n              _context3.next = 47;\n              break;\n            case 44:\n              _context3.prev = 44;\n              _context3.t1 = _context3[\"catch\"](0);\n              handleError(_context3.t1, \"Failed to register derivative with license tokens\");\n            case 47:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 44], [8, 21, 24, 27]]);\n      }));\n      function registerDerivativeWithLicenseTokens(_x3) {\n        return _registerDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return registerDerivativeWithLicenseTokens;\n    }()\n    /**\n     * Mint an NFT from a collection and register it as an IP.\n     * @param request - The request object that contains all data needed to mint and register ip.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.pilType The type of the PIL.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.recipient [Optional] The address of the recipient of the minted NFT.\n     *   @param request.mintingFee [Optional] The fee to be paid when minting a license.\n     *   @param request.commercialRevShare [Optional] Percentage of revenue that must be shared with the licensor.\n     *   @param request.currency [Optional] The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID, Token ID, License Terms Id if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, name, uri, registrationDate)\n     * @emits LicenseTermsAttached (caller, ipId, licenseTemplate, licenseTermsId)\n     */\n  }, {\n    key: \"mintAndRegisterIpAssetWithPilTerms\",\n    value: function () {\n      var _mintAndRegisterIpAssetWithPilTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$ipMetadata5, _request$ipMetadata6, _request$ipMetadata7, _request$ipMetadata8, _request$txOptions7, licenseTerm, object, _request$txOptions8, txHash, txReceipt, iPRegisteredLog, licenseTermsId;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              if (!(request.pilType === undefined || request.pilType === null)) {\n                _context4.next = 3;\n                break;\n              }\n              throw new Error(\"PIL type is required.\");\n            case 3:\n              licenseTerm = getLicenseTermByType(request.pilType, {\n                defaultMintingFee: request.mintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address,\n                commercialRevShare: request.commercialRevShare\n              });\n              object = {\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                recipient: request.recipient && getAddress$1(request.recipient, \"request.recipient\") || this.wallet.account.address,\n                terms: licenseTerm,\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata5 = request.ipMetadata) === null || _request$ipMetadata5 === void 0 ? void 0 : _request$ipMetadata5.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata6 = request.ipMetadata) === null || _request$ipMetadata6 === void 0 ? void 0 : _request$ipMetadata6.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata7 = request.ipMetadata) === null || _request$ipMetadata7 === void 0 ? void 0 : _request$ipMetadata7.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata8 = request.ipMetadata) === null || _request$ipMetadata8 === void 0 ? void 0 : _request$ipMetadata8.nftMetadataHash) || zeroHash\n                }\n              };\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.encodedTxDataOnly)) {\n                _context4.next = 9;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: this.spgClient.mintAndRegisterIpAndAttachPilTermsEncode(object)\n              });\n            case 9:\n              _context4.next = 11;\n              return this.spgClient.mintAndRegisterIpAndAttachPilTerms(object);\n            case 11:\n              txHash = _context4.sent;\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.waitForTransaction)) {\n                _context4.next = 21;\n                break;\n              }\n              _context4.next = 15;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 15:\n              txReceipt = _context4.sent;\n              iPRegisteredLog = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(txReceipt)[0];\n              _context4.next = 19;\n              return this.getLicenseTermsId(txReceipt);\n            case 19:\n              licenseTermsId = _context4.sent;\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                ipId: iPRegisteredLog.ipId,\n                licenseTermsId: licenseTermsId,\n                tokenId: iPRegisteredLog.tokenId\n              });\n            case 21:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 22:\n              _context4.next = 27;\n              break;\n            case 24:\n              _context4.prev = 24;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to mint and register IP and attach PIL terms\");\n            case 27:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 24]]);\n      }));\n      function mintAndRegisterIpAssetWithPilTerms(_x4) {\n        return _mintAndRegisterIpAssetWithPilTerms.apply(this, arguments);\n      }\n      return mintAndRegisterIpAssetWithPilTerms;\n    }()\n    /**\n     * Register a given NFT as an IP and attach Programmable IP License Terms.R.\n     * @param request - The request object that contains all data needed to mint and register ip.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.tokenId The ID of the NFT.\n     *   @param request.pilType The type of the PIL.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.mintingFee [Optional] The fee to be paid when minting a license.\n     *   @param request.commercialRevShare [Optional] Percentage of revenue that must be shared with the licensor.\n     *   @param request.currency [Optional] The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID, License Terms Id if waitForTxn is set to true.\n     * @emits LicenseTermsAttached (caller, ipId, licenseTemplate, licenseTermsId)\n     */\n  }, {\n    key: \"registerIpAndAttachPilTerms\",\n    value: function () {\n      var _registerIpAndAttachPilTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$ipMetadata9, _request$ipMetadata10, _request$ipMetadata11, _request$ipMetadata12, _request$txOptions9, ipIdAddress, isRegistered, licenseTerm, calculatedDeadline, sigAttachSignature, object, sigMetadataSignature, _request$txOptions10, txHash, txReceipt, ipRegisterEvent, licenseTermsId;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              if (!(request.pilType === undefined || request.pilType === null)) {\n                _context5.next = 3;\n                break;\n              }\n              throw new Error(\"PIL type is required.\");\n            case 3:\n              request.tokenId = BigInt(request.tokenId);\n              _context5.next = 6;\n              return this.getIpIdAddress(request.nftContract, request.tokenId);\n            case 6:\n              ipIdAddress = _context5.sent;\n              _context5.next = 9;\n              return this.isRegistered(ipIdAddress);\n            case 9:\n              isRegistered = _context5.sent;\n              if (!isRegistered) {\n                _context5.next = 12;\n                break;\n              }\n              throw new Error(\"The NFT with id \".concat(request.tokenId, \" is already registered as IP.\"));\n            case 12:\n              licenseTerm = getLicenseTermByType(request.pilType, {\n                defaultMintingFee: request.mintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address,\n                commercialRevShare: request.commercialRevShare\n              });\n              calculatedDeadline = getDeadline(request.deadline);\n              _context5.next = 16;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: this.getSigSignatureState({\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.licensingModuleClient.address, \"licensingModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function attachLicenseTerms(address,address,uint256)\"\n                }]\n              });\n            case 16:\n              sigAttachSignature = _context5.sent;\n              object = {\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                tokenId: request.tokenId,\n                terms: licenseTerm,\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata9 = request.ipMetadata) === null || _request$ipMetadata9 === void 0 ? void 0 : _request$ipMetadata9.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata10 = request.ipMetadata) === null || _request$ipMetadata10 === void 0 ? void 0 : _request$ipMetadata10.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata11 = request.ipMetadata) === null || _request$ipMetadata11 === void 0 ? void 0 : _request$ipMetadata11.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata12 = request.ipMetadata) === null || _request$ipMetadata12 === void 0 ? void 0 : _request$ipMetadata12.nftMetadataHash) || zeroHash\n                },\n                sigMetadata: {\n                  signer: zeroAddress,\n                  deadline: BigInt(0),\n                  signature: zeroHash\n                },\n                sigAttach: {\n                  signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                  deadline: calculatedDeadline,\n                  signature: sigAttachSignature\n                }\n              };\n              _context5.next = 20;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: toHex(0, {\n                  size: 32\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }]\n              });\n            case 20:\n              sigMetadataSignature = _context5.sent;\n              object.sigMetadata = {\n                signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                deadline: calculatedDeadline,\n                signature: sigMetadataSignature\n              };\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.encodedTxDataOnly)) {\n                _context5.next = 26;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: this.spgClient.registerIpAndAttachPilTermsEncode(object)\n              });\n            case 26:\n              _context5.next = 28;\n              return this.spgClient.registerIpAndAttachPilTerms(object);\n            case 28:\n              txHash = _context5.sent;\n              if (!((_request$txOptions10 = request.txOptions) !== null && _request$txOptions10 !== void 0 && _request$txOptions10.waitForTransaction)) {\n                _context5.next = 38;\n                break;\n              }\n              _context5.next = 32;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 32:\n              txReceipt = _context5.sent;\n              ipRegisterEvent = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(txReceipt);\n              _context5.next = 36;\n              return this.getLicenseTermsId(txReceipt);\n            case 36:\n              licenseTermsId = _context5.sent;\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: licenseTermsId,\n                ipId: ipRegisterEvent[0].ipId\n              });\n            case 38:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 39:\n              _context5.next = 44;\n              break;\n            case 41:\n              _context5.prev = 41;\n              _context5.t0 = _context5[\"catch\"](0);\n              handleError(_context5.t0, \"Failed to register IP and attach PIL terms\");\n            case 44:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 41]]);\n      }));\n      function registerIpAndAttachPilTerms(_x5) {\n        return _registerIpAndAttachPilTerms.apply(this, arguments);\n      }\n      return registerIpAndAttachPilTerms;\n    }()\n    /**\n     * Register the given NFT as a derivative IP with metadata without using license tokens.\n     * @param request - The request object that contains all data needed to register derivative IP.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.tokenId The ID of the NFT.\n     *   @param request.derivData The derivative data to be used for registerDerivative.\n     *   @param request.derivData.parentIpIds The IDs of the parent IPs to link the registered derivative IP.\n     *   @param request.derivData.licenseTemplate [Optional] The address of the license template to be used for the linking.\n     *   @param request.derivData.licenseTermsIds The IDs of the license terms to be used for the linking.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds,default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, name, uri, registrationDate)\n     */\n  }, {\n    key: \"registerDerivativeIp\",\n    value: function () {\n      var _registerDerivativeIp = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request) {\n        var _request$ipMetadata13, _request$ipMetadata14, _request$ipMetadata15, _request$ipMetadata16, _request$txOptions11, tokenId, ipIdAddress, isRegistered, i, isAttachedLicenseTerms, calculatedDeadline, sigRegisterSignature, object, sigMetadataSignature, _request$txOptions12, txHash, receipt, log;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              tokenId = BigInt(request.tokenId);\n              _context6.next = 4;\n              return this.getIpIdAddress(request.nftContract, tokenId);\n            case 4:\n              ipIdAddress = _context6.sent;\n              _context6.next = 7;\n              return this.isRegistered(ipIdAddress);\n            case 7:\n              isRegistered = _context6.sent;\n              if (!isRegistered) {\n                _context6.next = 10;\n                break;\n              }\n              throw new Error(\"The NFT with id \".concat(tokenId, \" is already registered as IP.\"));\n            case 10:\n              if (!(request.derivData.parentIpIds.length !== request.derivData.licenseTermsIds.length)) {\n                _context6.next = 12;\n                break;\n              }\n              throw new Error(\"Parent IP IDs and License terms IDs must be provided in pairs.\");\n            case 12:\n              i = 0;\n            case 13:\n              if (!(i < request.derivData.parentIpIds.length)) {\n                _context6.next = 22;\n                break;\n              }\n              _context6.next = 16;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: getAddress$1(request.derivData.parentIpIds[i], \"request.derivData.parentIpIds\"),\n                licenseTemplate: request.derivData.licenseTemplate && getAddress$1(request.derivData.licenseTemplate, \"request.derivData.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: BigInt(request.derivData.licenseTermsIds[i])\n              });\n            case 16:\n              isAttachedLicenseTerms = _context6.sent;\n              if (isAttachedLicenseTerms) {\n                _context6.next = 19;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.derivData.licenseTermsIds[i], \" must be attached to the parent ipId \").concat(request.derivData.parentIpIds[i], \" before registering derivative.\"));\n            case 19:\n              i++;\n              _context6.next = 13;\n              break;\n            case 22:\n              calculatedDeadline = getDeadline(request.deadline);\n              _context6.next = 25;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: this.getSigSignatureState({\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.licensingModuleClient.address, \"licensingModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function registerDerivative(address,address[],uint256[],address,bytes)\"\n                }]\n              });\n            case 25:\n              sigRegisterSignature = _context6.sent;\n              object = {\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                tokenId: BigInt(request.tokenId),\n                derivData: {\n                  parentIpIds: request.derivData.parentIpIds.map(function (id) {\n                    return getAddress$1(id, \"request.derivData.parentIpIds\");\n                  }),\n                  licenseTermsIds: request.derivData.licenseTermsIds.map(function (id) {\n                    return BigInt(id);\n                  }),\n                  licenseTemplate: request.derivData.licenseTemplate && getAddress$1(request.derivData.licenseTemplate, \"request.derivData.licenseTemplate\") || this.licenseTemplateClient.address,\n                  royaltyContext: zeroAddress\n                },\n                sigRegister: {\n                  signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                  deadline: calculatedDeadline,\n                  signature: sigRegisterSignature\n                },\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata13 = request.ipMetadata) === null || _request$ipMetadata13 === void 0 ? void 0 : _request$ipMetadata13.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata14 = request.ipMetadata) === null || _request$ipMetadata14 === void 0 ? void 0 : _request$ipMetadata14.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata15 = request.ipMetadata) === null || _request$ipMetadata15 === void 0 ? void 0 : _request$ipMetadata15.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata16 = request.ipMetadata) === null || _request$ipMetadata16 === void 0 ? void 0 : _request$ipMetadata16.nftMetadataHash) || zeroHash\n                },\n                sigMetadata: {\n                  signer: zeroAddress,\n                  deadline: BigInt(0),\n                  signature: zeroHash\n                }\n              };\n              _context6.next = 29;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: toHex(0, {\n                  size: 32\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }]\n              });\n            case 29:\n              sigMetadataSignature = _context6.sent;\n              object.sigMetadata = {\n                signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                deadline: calculatedDeadline,\n                signature: sigMetadataSignature\n              };\n              if (!((_request$txOptions11 = request.txOptions) !== null && _request$txOptions11 !== void 0 && _request$txOptions11.encodedTxDataOnly)) {\n                _context6.next = 35;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                encodedTxData: this.spgClient.registerIpAndMakeDerivativeEncode(object)\n              });\n            case 35:\n              _context6.next = 37;\n              return this.spgClient.registerIpAndMakeDerivative(object);\n            case 37:\n              txHash = _context6.sent;\n              if (!((_request$txOptions12 = request.txOptions) !== null && _request$txOptions12 !== void 0 && _request$txOptions12.waitForTransaction)) {\n                _context6.next = 44;\n                break;\n              }\n              _context6.next = 41;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 41:\n              receipt = _context6.sent;\n              log = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(receipt)[0];\n              return _context6.abrupt(\"return\", {\n                txHash: txHash,\n                ipId: log.ipId\n              });\n            case 44:\n              return _context6.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 45:\n              _context6.next = 50;\n              break;\n            case 47:\n              _context6.prev = 47;\n              _context6.t0 = _context6[\"catch\"](0);\n              handleError(_context6.t0, \"Failed to register derivative IP\");\n            case 50:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 47]]);\n      }));\n      function registerDerivativeIp(_x6) {\n        return _registerDerivativeIp.apply(this, arguments);\n      }\n      return registerDerivativeIp;\n    }()\n    /**\n     * Mint an NFT from a collection and register it as a derivative IP without license tokens.\n     * @param request - The request object that contains all data needed to mint and register ip and make derivative.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.derivData The derivative data to be used for registerDerivative.\n     *   @param request.derivData.parentIpIds The IDs of the parent IPs to link the registered derivative IP.\n     *   @param request.derivData.licenseTermsIds The IDs of the license terms to be used for the linking.\n     *   @param request.derivData.licenseTemplate [Optional] The address of the license template to be used for the linking.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.*\n     *   @param request.recipient [Optional] The address of the recipient of the minted NFT.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, name, uri, registrationDate)\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivative\",\n    value: function () {\n      var _mintAndRegisterIpAndMakeDerivative = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request) {\n        var _request$ipMetadata17, _request$ipMetadata18, _request$ipMetadata19, _request$ipMetadata20, _request$txOptions13, i, isAttachedLicenseTerms, object, _request$txOptions14, txHash, receipt, log;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              if (!(request.derivData.parentIpIds.length !== request.derivData.licenseTermsIds.length)) {\n                _context7.next = 3;\n                break;\n              }\n              throw new Error(\"Parent IP IDs and License terms IDs must be provided in pairs.\");\n            case 3:\n              i = 0;\n            case 4:\n              if (!(i < request.derivData.parentIpIds.length)) {\n                _context7.next = 13;\n                break;\n              }\n              _context7.next = 7;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: getAddress$1(request.derivData.parentIpIds[i], \"request.derivData.parentIpIds\"),\n                licenseTemplate: request.derivData.licenseTemplate && getAddress$1(request.derivData.licenseTemplate, \"request.derivData.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: BigInt(request.derivData.licenseTermsIds[i])\n              });\n            case 7:\n              isAttachedLicenseTerms = _context7.sent;\n              if (isAttachedLicenseTerms) {\n                _context7.next = 10;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.derivData.licenseTermsIds[i], \" must be attached to the parent ipId \").concat(request.derivData.parentIpIds[i], \" before registering derivative.\"));\n            case 10:\n              i++;\n              _context7.next = 4;\n              break;\n            case 13:\n              object = _objectSpread2(_objectSpread2({}, request), {}, {\n                derivData: _objectSpread2(_objectSpread2({}, request.derivData), {}, {\n                  royaltyContext: zeroAddress,\n                  licenseTemplate: request.derivData.licenseTemplate || this.licenseTemplateClient.address,\n                  licenseTermsIds: request.derivData.licenseTermsIds.map(function (id) {\n                    return BigInt(id);\n                  })\n                }),\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata17 = request.ipMetadata) === null || _request$ipMetadata17 === void 0 ? void 0 : _request$ipMetadata17.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata18 = request.ipMetadata) === null || _request$ipMetadata18 === void 0 ? void 0 : _request$ipMetadata18.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata19 = request.ipMetadata) === null || _request$ipMetadata19 === void 0 ? void 0 : _request$ipMetadata19.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata20 = request.ipMetadata) === null || _request$ipMetadata20 === void 0 ? void 0 : _request$ipMetadata20.nftMetadataHash) || zeroHash\n                },\n                recipient: request.recipient && getAddress$1(request.recipient, \"request.recipient\") || this.wallet.account.address\n              });\n              if (!((_request$txOptions13 = request.txOptions) !== null && _request$txOptions13 !== void 0 && _request$txOptions13.encodedTxDataOnly)) {\n                _context7.next = 18;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                encodedTxData: this.spgClient.mintAndRegisterIpAndMakeDerivativeEncode(object)\n              });\n            case 18:\n              _context7.next = 20;\n              return this.spgClient.mintAndRegisterIpAndMakeDerivative(object);\n            case 20:\n              txHash = _context7.sent;\n              if (!((_request$txOptions14 = request.txOptions) !== null && _request$txOptions14 !== void 0 && _request$txOptions14.waitForTransaction)) {\n                _context7.next = 27;\n                break;\n              }\n              _context7.next = 24;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 24:\n              receipt = _context7.sent;\n              log = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(receipt)[0];\n              return _context7.abrupt(\"return\", {\n                txHash: txHash,\n                childIpId: log.ipId\n              });\n            case 27:\n              return _context7.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 28:\n              _context7.next = 33;\n              break;\n            case 30:\n              _context7.prev = 30;\n              _context7.t0 = _context7[\"catch\"](0);\n              handleError(_context7.t0, \"Failed to mint and register IP and make derivative\");\n            case 33:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 30]]);\n      }));\n      function mintAndRegisterIpAndMakeDerivative(_x7) {\n        return _mintAndRegisterIpAndMakeDerivative.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndMakeDerivative;\n    }()\n  }, {\n    key: \"getIpIdAddress\",\n    value: function () {\n      var _getIpIdAddress = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(nftContract, tokenId) {\n        var ipId;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.ipAssetRegistryClient.ipId({\n                chainId: chain[this.chainId],\n                tokenContract: getAddress$1(nftContract, \"nftContract\"),\n                tokenId: BigInt(tokenId)\n              });\n            case 2:\n              ipId = _context8.sent;\n              return _context8.abrupt(\"return\", ipId);\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getIpIdAddress(_x8, _x9) {\n        return _getIpIdAddress.apply(this, arguments);\n      }\n      return getIpIdAddress;\n    }()\n  }, {\n    key: \"isRegistered\",\n    value: function () {\n      var _isRegistered = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee9(ipId) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(ipId, \"ipId\")\n              });\n            case 2:\n              return _context9.abrupt(\"return\", _context9.sent);\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function isRegistered(_x10) {\n        return _isRegistered.apply(this, arguments);\n      }\n      return isRegistered;\n    }()\n  }, {\n    key: \"getSigSignatureState\",\n    value: function getSigSignatureState(permission) {\n      var data = encodeFunctionData({\n        abi: accessControllerAbi,\n        functionName: \"setPermission\",\n        args: [getAddress$1(permission.ipId, \"permission.ipId\"), getAddress$1(permission.signer, \"permission.signer\"), getAddress$1(permission.to, \"permission.to\"), toFunctionSelector(permission.func), permission.permission]\n      });\n      var sigAttachState = keccak256(encodeAbiParameters([{\n        name: \"\",\n        type: \"bytes32\"\n      }, {\n        name: \"\",\n        type: \"bytes\"\n      }], [toHex(0, {\n        size: 32\n      }), encodeFunctionData({\n        abi: ipAccountImplAbi,\n        functionName: \"execute\",\n        args: [this.accessControllerClient.address, 0n, data]\n      })]));\n      return sigAttachState;\n    }\n  }, {\n    key: \"getLicenseTermsId\",\n    value: function () {\n      var _getLicenseTermsId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee10(txReceipt) {\n        var licensingModuleLicenseTermsAttachedEvent, licenseTermsId, defaultLicenseTerms;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              licensingModuleLicenseTermsAttachedEvent = this.licensingModuleClient.parseTxLicenseTermsAttachedEvent(txReceipt);\n              licenseTermsId = licensingModuleLicenseTermsAttachedEvent.length >= 1 && licensingModuleLicenseTermsAttachedEvent[0].licenseTermsId;\n              if (!(licenseTermsId === false)) {\n                _context10.next = 7;\n                break;\n              }\n              _context10.next = 5;\n              return this.licenseRegistryReadOnlyClient.getDefaultLicenseTerms();\n            case 5:\n              defaultLicenseTerms = _context10.sent;\n              licenseTermsId = defaultLicenseTerms.licenseTermsId;\n            case 7:\n              return _context10.abrupt(\"return\", licenseTermsId);\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getLicenseTermsId(_x11) {\n        return _getLicenseTermsId.apply(this, arguments);\n      }\n      return getLicenseTermsId;\n    }()\n  }]);\n}();\nvar PermissionClient = /*#__PURE__*/function () {\n  function PermissionClient(rpcClient, wallet, chainId) {\n    _classCallCheck(this, PermissionClient);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n    this.chainId = chainId;\n    this.accessControllerClient = new AccessControllerClient(this.rpcClient, this.wallet);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(this.rpcClient, this.wallet);\n    this.spgClient = new SpgClient(this.rpcClient, this.wallet);\n    this.coreMetadataModuleClient = new CoreMetadataModuleClient(this.rpcClient, this.wallet);\n  }\n\n  /**\n   * Sets the permission for a specific function call\n   * Each policy is represented as a mapping from an IP account address to a signer address to a recipient\n   * address to a function selector to a permission level. The permission level can be 0 (ABSTAIN), 1 (ALLOW), or\n   * 2 (DENY).\n   * By default, all policies are set to 0 (ABSTAIN), which means that the permission is not set.\n   * The owner of ipAccount by default has all permission.\n   * address(0) => wildcard\n   * bytes4(0) => wildcard\n   * Specific permission overrides wildcard permission.\n   * @param request - The request object containing necessary data to set `permission`.\n   *   @param request.ipId The IP ID that grants the permission for `signer`.\n   *   @param request.signer The address that can call `to` on behalf of the `ipAccount`.\n   *   @param request.to The address that can be called by the `signer` (currently only modules can be `to`).\n   *   @param request.permission The new permission level.\n   *   @param request.func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to an object containing the transaction hash.\n   * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n   */\n  return _createClass(PermissionClient, [{\n    key: \"setPermission\",\n    value: function () {\n      var _setPermission = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, req, _request$txOptions2, txHash;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.checkIsRegistered(request.ipId);\n            case 3:\n              req = {\n                ipAccount: request.ipId,\n                signer: request.signer,\n                to: request.to,\n                func: request.func ? toFunctionSelector(request.func) : defaultFunctionSelector,\n                permission: request.permission\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.accessControllerClient.setPermissionEncode(req)\n              });\n            case 8:\n              _context.next = 10;\n              return this.accessControllerClient.setPermission(req);\n            case 10:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 17;\n                break;\n              }\n              _context.next = 14;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 14:\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 17:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 18:\n              _context.next = 23;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to set permissions\");\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n      function setPermission(_x) {\n        return _setPermission.apply(this, arguments);\n      }\n      return setPermission;\n    }()\n    /**\n     * Specific permission overrides wildcard permission with signature.\n     * @param request - The request object containing necessary data to set permissions.\n     *   @param request.ipId The IP ID that grants the permission for `signer`\n     *   @param request.signer The address that can call `to` on behalf of the `ipAccount`\n     *   @param request.to The address that can be called by the `signer` (currently only modules can be `to`)\n     *   @param request.permission The new permission level.\n     *   @param request.func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n  }, {\n    key: \"createSetPermissionSignature\",\n    value: function () {\n      var _createSetPermissionSignature = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, ipId, signer, to, txOptions, func, permission, deadline, ipAccountClient, data, _yield$ipAccountClien, state, calculatedDeadline, signature, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              ipId = request.ipId, signer = request.signer, to = request.to, txOptions = request.txOptions, func = request.func, permission = request.permission, deadline = request.deadline;\n              _context2.next = 4;\n              return this.checkIsRegistered(ipId);\n            case 4:\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, ipId);\n              data = encodeFunctionData({\n                abi: accessControllerAbi,\n                functionName: \"setPermission\",\n                args: [ipId, getAddress$1(signer, \"request.signer\"), getAddress$1(to, \"request.to\"), func ? toFunctionSelector(func) : defaultFunctionSelector, permission]\n              });\n              _context2.next = 8;\n              return ipAccountClient.state();\n            case 8:\n              _yield$ipAccountClien = _context2.sent;\n              state = _yield$ipAccountClien.result;\n              calculatedDeadline = getDeadline(deadline);\n              _context2.next = 13;\n              return getPermissionSignature({\n                ipId: ipId,\n                deadline: calculatedDeadline,\n                state: state,\n                permissions: [{\n                  ipId: ipId,\n                  signer: signer,\n                  to: to,\n                  permission: permission,\n                  func: func\n                }],\n                chainId: chain[this.chainId],\n                wallet: this.wallet\n              });\n            case 13:\n              signature = _context2.sent;\n              req = {\n                to: getAddress$1(this.accessControllerClient.address, \"accessControllerClientAddress\"),\n                value: BigInt(0),\n                data: data,\n                signer: signer,\n                deadline: calculatedDeadline,\n                signature: signature\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 19;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeWithSigEncode(req)\n              });\n            case 19:\n              _context2.next = 21;\n              return ipAccountClient.executeWithSig(req);\n            case 21:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 28;\n                break;\n              }\n              _context2.next = 25;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, txOptions), {}, {\n                hash: txHash\n              }));\n            case 25:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 28:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 29:\n              _context2.next = 34;\n              break;\n            case 31:\n              _context2.prev = 31;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to create set permission signature\");\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 31]]);\n      }));\n      function createSetPermissionSignature(_x2) {\n        return _createSetPermissionSignature.apply(this, arguments);\n      }\n      return createSetPermissionSignature;\n    }()\n    /**\n     * Sets permission to a signer for all functions across all modules.\n     * @param request - The request object containing necessary data to set all permissions.\n     *   @param request.ipId The IP ID that grants the permission for `signer`\n     *   @param request.signer The address of the signer receiving the permissions.\n     *   @param request.permission The new permission.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n  }, {\n    key: \"setAllPermissions\",\n    value: function () {\n      var _setAllPermissions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, req, _request$txOptions6, txHash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.checkIsRegistered(request.ipId);\n            case 3:\n              req = {\n                ipAccount: request.ipId,\n                signer: request.signer,\n                permission: request.permission\n              };\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 8;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.accessControllerClient.setAllPermissionsEncode(req)\n              });\n            case 8:\n              _context3.next = 10;\n              return this.accessControllerClient.setAllPermissions(req);\n            case 10:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 17;\n                break;\n              }\n              _context3.next = 14;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 14:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 17:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 18:\n              _context3.next = 23;\n              break;\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to set all permissions\");\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 20]]);\n      }));\n      function setAllPermissions(_x3) {\n        return _setAllPermissions.apply(this, arguments);\n      }\n      return setAllPermissions;\n    }()\n    /**\n     * Sets a batch of permissions in a single transaction.\n     * @param request - The request object containing necessary data to set all permissions.\n     * @param {Array} request.permissions - An array of `Permission` structure, each representing the permission to be set.\n     *   @param request.permissions[].ipId The IP ID that grants the permission for `signer`.\n     *   @param request.permissions[].signer The address that can call `to` on behalf of the `ipAccount`.\n     *   @param request.permissions[].to The address that can be called by the `signer` (currently only modules can be `to`).\n     *   @param request.permissions[].permission The new permission level.\n     *   @param request.permissions[].func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n  }, {\n    key: \"setBatchPermissions\",\n    value: function () {\n      var _setBatchPermissions = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$txOptions7, permissions, txOptions, _iterator, _step, permission, req, _request$txOptions8, txHash;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              permissions = request.permissions, txOptions = request.txOptions;\n              _iterator = _createForOfIteratorHelper(permissions);\n              _context4.prev = 3;\n              _iterator.s();\n            case 5:\n              if ((_step = _iterator.n()).done) {\n                _context4.next = 11;\n                break;\n              }\n              permission = _step.value;\n              _context4.next = 9;\n              return this.checkIsRegistered(permission.ipId);\n            case 9:\n              _context4.next = 5;\n              break;\n            case 11:\n              _context4.next = 16;\n              break;\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](3);\n              _iterator.e(_context4.t0);\n            case 16:\n              _context4.prev = 16;\n              _iterator.f();\n              return _context4.finish(16);\n            case 19:\n              req = {\n                permissions: permissions.map(function (permission) {\n                  return {\n                    ipAccount: permission.ipId,\n                    signer: permission.signer,\n                    to: permission.to,\n                    func: permission.func ? toFunctionSelector(permission.func) : defaultFunctionSelector,\n                    permission: permission.permission\n                  };\n                })\n              };\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.encodedTxDataOnly)) {\n                _context4.next = 24;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: this.accessControllerClient.setBatchPermissionsEncode(req)\n              });\n            case 24:\n              _context4.next = 26;\n              return this.accessControllerClient.setBatchPermissions(req);\n            case 26:\n              txHash = _context4.sent;\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.waitForTransaction)) {\n                _context4.next = 33;\n                break;\n              }\n              _context4.next = 30;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, txOptions), {}, {\n                hash: txHash\n              }));\n            case 30:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 33:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 34:\n              _context4.next = 39;\n              break;\n            case 36:\n              _context4.prev = 36;\n              _context4.t1 = _context4[\"catch\"](0);\n              handleError(_context4.t1, \"Failed to set batch permissions\");\n            case 39:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 36], [3, 13, 16, 19]]);\n      }));\n      function setBatchPermissions(_x4) {\n        return _setBatchPermissions.apply(this, arguments);\n      }\n      return setBatchPermissions;\n    }()\n    /**\n     * Sets a batch of permissions in a single transaction with signature.\n     * @param request - The request object containing necessary data to set permissions.\n     *   @param request.ipId The IP ID that grants the permission for `signer`\n     *   @param {Array} request.permissions - An array of `Permission` structure, each representing the permission to be set.\n     *   @param request.permissions[].ipId The IP ID that grants the permission for `signer`.\n     *   @param request.permissions[].signer The address that can call `to` on behalf of the `ipAccount`.\n     *   @param request.permissions[].to The address that can be called by the `signer` (currently only modules can be `to`).\n     *   @param request.permissions[].permission The new permission level.\n     *   @param request.permissions[].func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n  }, {\n    key: \"createBatchPermissionSignature\",\n    value: function () {\n      var _createBatchPermissionSignature = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$txOptions9, permissions, deadline, ipId, txOptions, _iterator2, _step2, permission, ipAccountClient, data, _yield$ipAccountClien2, state, calculatedDeadline, signature, req, _request$txOptions10, txHash;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              permissions = request.permissions, deadline = request.deadline, ipId = request.ipId, txOptions = request.txOptions;\n              _iterator2 = _createForOfIteratorHelper(permissions);\n              _context5.prev = 3;\n              _iterator2.s();\n            case 5:\n              if ((_step2 = _iterator2.n()).done) {\n                _context5.next = 11;\n                break;\n              }\n              permission = _step2.value;\n              _context5.next = 9;\n              return this.checkIsRegistered(permission.ipId);\n            case 9:\n              _context5.next = 5;\n              break;\n            case 11:\n              _context5.next = 16;\n              break;\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](3);\n              _iterator2.e(_context5.t0);\n            case 16:\n              _context5.prev = 16;\n              _iterator2.f();\n              return _context5.finish(16);\n            case 19:\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, ipId);\n              data = encodeFunctionData({\n                abi: accessControllerAbi,\n                functionName: \"setBatchPermissions\",\n                args: [permissions.map(function (permission) {\n                  return {\n                    ipAccount: permission.ipId,\n                    signer: permission.signer,\n                    to: permission.to,\n                    func: permission.func ? toFunctionSelector(permission.func) : defaultFunctionSelector,\n                    permission: permission.permission\n                  };\n                })]\n              });\n              _context5.next = 23;\n              return ipAccountClient.state();\n            case 23:\n              _yield$ipAccountClien2 = _context5.sent;\n              state = _yield$ipAccountClien2.result;\n              calculatedDeadline = getDeadline(deadline);\n              _context5.next = 28;\n              return getPermissionSignature({\n                ipId: ipId,\n                deadline: calculatedDeadline,\n                state: state,\n                permissions: permissions,\n                chainId: chain[this.chainId],\n                wallet: this.wallet,\n                permissionFunc: \"setBatchPermissions\"\n              });\n            case 28:\n              signature = _context5.sent;\n              req = {\n                to: getAddress$1(this.accessControllerClient.address, \"accessControllerAddress\"),\n                value: BigInt(0),\n                data: data,\n                signer: getAddress$1(this.wallet.account.address, \"walletAccountAddress\"),\n                deadline: calculatedDeadline,\n                signature: signature\n              };\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.encodedTxDataOnly)) {\n                _context5.next = 34;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeWithSigEncode(req)\n              });\n            case 34:\n              _context5.next = 36;\n              return ipAccountClient.executeWithSig(req);\n            case 36:\n              txHash = _context5.sent;\n              if (!((_request$txOptions10 = request.txOptions) !== null && _request$txOptions10 !== void 0 && _request$txOptions10.waitForTransaction)) {\n                _context5.next = 43;\n                break;\n              }\n              _context5.next = 40;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, txOptions), {}, {\n                hash: txHash\n              }));\n            case 40:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 43:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 44:\n              _context5.next = 49;\n              break;\n            case 46:\n              _context5.prev = 46;\n              _context5.t1 = _context5[\"catch\"](0);\n              handleError(_context5.t1, \"Failed to create batch permission signature\");\n            case 49:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 46], [3, 13, 16, 19]]);\n      }));\n      function createBatchPermissionSignature(_x5) {\n        return _createBatchPermissionSignature.apply(this, arguments);\n      }\n      return createBatchPermissionSignature;\n    }()\n  }, {\n    key: \"checkIsRegistered\",\n    value: function () {\n      var _checkIsRegistered = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(ipId) {\n        var isRegistered;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(ipId, \"ipId\")\n              });\n            case 2:\n              isRegistered = _context6.sent;\n              if (isRegistered) {\n                _context6.next = 5;\n                break;\n              }\n              throw new Error(\"IP id with \".concat(ipId, \" is not registered.\"));\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function checkIsRegistered(_x6) {\n        return _checkIsRegistered.apply(this, arguments);\n      }\n      return checkIsRegistered;\n    }()\n  }]);\n}();\nvar LicenseClient = /*#__PURE__*/function () {\n  function LicenseClient(rpcClient, wallet) {\n    _classCallCheck(this, LicenseClient);\n    this.licensingModuleClient = new LicensingModuleClient(rpcClient, wallet);\n    this.licenseRegistryClient = new LicenseRegistryEventClient(rpcClient);\n    this.piLicenseTemplateReadOnlyClient = new PiLicenseTemplateReadOnlyClient(rpcClient);\n    this.licenseTemplateClient = new PiLicenseTemplateClient(rpcClient, wallet);\n    this.royaltyPolicyLAPClient = new RoyaltyPolicyLapClient(rpcClient, wallet);\n    this.royaltyModuleReadOnlyClient = new RoyaltyModuleReadOnlyClient(rpcClient);\n    this.licenseRegistryReadOnlyClient = new LicenseRegistryReadOnlyClient(rpcClient);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(rpcClient, wallet);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n  }\n  /**\n   * Registers new license terms and return the ID of the newly registered license terms.\n   * @param request - The request object that contains all data needed to register a license term.\n   *   @param request.transferable Indicates whether the license is transferable or not.\n   *   @param request.royaltyPolicy The address of the royalty policy contract which required to StoryProtocol in advance.\n   *   @param request.mintingFee The fee to be paid when minting a license.\n   *   @param request.expiration The expiration period of the license.\n   *   @param request.commercialUse Indicates whether the work can be used commercially or not.\n   *   @param request.commercialAttribution Whether attribution is required when reproducing the work commercially or not.\n   *   @param request.commercializerChecker Commercializers that are allowed to commercially exploit the work. If zero address, then no restrictions is enforced.\n   *   @param request.commercializerCheckerData The data to be passed to the commercializer checker contract.\n   *   @param request.commercialRevShare Percentage of revenue that must be shared with the licensor.\n   *   @param request.commercialRevCeiling The maximum revenue that can be generated from the commercial use of the work.\n   *   @param request.derivativesAllowed Indicates whether the licensee can create derivatives of his work or not.\n   *   @param request.derivativesAttribution Indicates whether attribution is required for derivatives of the work or not.\n   *   @param request.derivativesApproval Indicates whether the licensor must approve derivatives of the work before they can be linked to the licensor IP ID or not.\n   *   @param request.derivativesReciprocal Indicates whether the licensee must license derivatives of the work under the same terms or not.\n   *   @param request.derivativeRevCeiling The maximum revenue that can be generated from the derivative use of the work.\n   *   @param request.currency The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n   *   @param request.uri The URI of the license terms, which can be used to fetch the offchain license terms.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to an object containing the optional transaction hash, optional transaction encodedTxData and optional license terms Id.\n   * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n   */\n  return _createClass(LicenseClient, [{\n    key: \"registerPILTerms\",\n    value: function () {\n      var _registerPILTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, royaltyPolicy, currency, isWhitelistedArbitrationPolicy, isWhitelistedRoyaltyToken, object, licenseTermsId, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              royaltyPolicy = request.royaltyPolicy, currency = request.currency;\n              if (!(getAddress$1(royaltyPolicy, \"request.royaltyPolicy\") !== zeroAddress)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 5;\n              return this.royaltyModuleReadOnlyClient.isWhitelistedRoyaltyPolicy({\n                royaltyPolicy: royaltyPolicy\n              });\n            case 5:\n              isWhitelistedArbitrationPolicy = _context.sent;\n              if (isWhitelistedArbitrationPolicy) {\n                _context.next = 8;\n                break;\n              }\n              throw new Error(\"The royalty policy is not whitelisted.\");\n            case 8:\n              if (!(getAddress$1(currency, \"request.currency\") !== zeroAddress)) {\n                _context.next = 14;\n                break;\n              }\n              _context.next = 11;\n              return this.royaltyModuleReadOnlyClient.isWhitelistedRoyaltyToken({\n                token: currency\n              });\n            case 11:\n              isWhitelistedRoyaltyToken = _context.sent;\n              if (isWhitelistedRoyaltyToken) {\n                _context.next = 14;\n                break;\n              }\n              throw new Error(\"The currency token is not whitelisted.\");\n            case 14:\n              if (!(royaltyPolicy !== zeroAddress && currency === zeroAddress)) {\n                _context.next = 16;\n                break;\n              }\n              throw new Error(\"Royalty policy requires currency token.\");\n            case 16:\n              object = _objectSpread2(_objectSpread2({}, request), {}, {\n                defaultMintingFee: BigInt(request.defaultMintingFee),\n                expiration: BigInt(request.expiration),\n                commercialRevCeiling: BigInt(request.commercialRevCeiling),\n                derivativeRevCeiling: BigInt(request.derivativeRevCeiling)\n              });\n              this.verifyCommercialUse(object);\n              this.verifyDerivatives(object);\n              if (!(object.commercialRevShare < 0 || object.commercialRevShare > 100)) {\n                _context.next = 23;\n                break;\n              }\n              throw new Error(\"CommercialRevShare should be between 0 and 100.\");\n            case 23:\n              object.commercialRevShare = object.commercialRevShare / 100 * 100000000;\n            case 24:\n              _context.next = 26;\n              return this.getLicenseTermsId(object);\n            case 26:\n              licenseTermsId = _context.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context.next = 29;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 29:\n              if (!(request !== null && request !== void 0 && (_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 33;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: object\n                })\n              });\n            case 33:\n              _context.next = 35;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: object\n              });\n            case 35:\n              txHash = _context.sent;\n              if (!(request !== null && request !== void 0 && (_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 44;\n                break;\n              }\n              _context.next = 39;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 39:\n              txReceipt = _context.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 44:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 45:\n              _context.next = 50;\n              break;\n            case 47:\n              _context.prev = 47;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to register license terms\");\n            case 50:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 47]]);\n      }));\n      function registerPILTerms(_x) {\n        return _registerPILTerms.apply(this, arguments);\n      }\n      return registerPILTerms;\n    }()\n    /**\n     * Convenient function to register a PIL non commercial social remix license to the registry\n     * @param request - [Optional] The request object that contains all data needed to register a PIL non commercial social remix license.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the optional transaction hash and optional license terms Id.\n     * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n     */\n  }, {\n    key: \"registerNonComSocialRemixingPIL\",\n    value: function () {\n      var _registerNonComSocialRemixingPIL = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, licenseTerms, licenseTermsId, _request$txOptions4, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              licenseTerms = getLicenseTermByType(PIL_TYPE.NON_COMMERCIAL_REMIX);\n              _context2.next = 4;\n              return this.getLicenseTermsId(licenseTerms);\n            case 4:\n              licenseTermsId = _context2.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 7:\n              if (!(request !== null && request !== void 0 && (_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 11;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: licenseTerms\n                })\n              });\n            case 11:\n              _context2.next = 13;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: licenseTerms\n              });\n            case 13:\n              txHash = _context2.sent;\n              if (!(request !== null && request !== void 0 && (_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 22;\n                break;\n              }\n              _context2.next = 17;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 17:\n              txReceipt = _context2.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context2.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 22:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 23:\n              _context2.next = 28;\n              break;\n            case 25:\n              _context2.prev = 25;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to register non commercial social remixing PIL\");\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 25]]);\n      }));\n      function registerNonComSocialRemixingPIL(_x2) {\n        return _registerNonComSocialRemixingPIL.apply(this, arguments);\n      }\n      return registerNonComSocialRemixingPIL;\n    }()\n    /**\n     * Convenient function to register a PIL commercial use license to the registry.\n     * @param request - The request object that contains all data needed to register a PIL commercial use license.\n     *   @param request.defaultMintingFee The fee to be paid when minting a license.\n     *   @param request.currency The ERC20 token to be used to pay the minting fee and the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the optional transaction hash and optional license terms Id.\n     * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n     */\n  }, {\n    key: \"registerCommercialUsePIL\",\n    value: function () {\n      var _registerCommercialUsePIL = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, licenseTerms, licenseTermsId, _request$txOptions6, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              licenseTerms = getLicenseTermByType(PIL_TYPE.COMMERCIAL_USE, {\n                defaultMintingFee: request.defaultMintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address\n              });\n              _context3.next = 4;\n              return this.getLicenseTermsId(licenseTerms);\n            case 4:\n              licenseTermsId = _context3.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context3.next = 7;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 7:\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 11;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: licenseTerms\n                })\n              });\n            case 11:\n              _context3.next = 13;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: licenseTerms\n              });\n            case 13:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 22;\n                break;\n              }\n              _context3.next = 17;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 17:\n              txReceipt = _context3.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context3.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 22:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 23:\n              _context3.next = 28;\n              break;\n            case 25:\n              _context3.prev = 25;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to register commercial use PIL\");\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 25]]);\n      }));\n      function registerCommercialUsePIL(_x3) {\n        return _registerCommercialUsePIL.apply(this, arguments);\n      }\n      return registerCommercialUsePIL;\n    }()\n    /**\n     * Convenient function to register a PIL commercial Remix license to the registry.\n     * @param request - The request object that contains all data needed to register license.\n     *   @param request.defaultMintingFee The fee to be paid when minting a license.\n     *   @param request.commercialRevShare Percentage of revenue that must be shared with the licensor.\n     *   @param request.currency The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the optional transaction hash and optional license terms Id.\n     * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n     */\n  }, {\n    key: \"registerCommercialRemixPIL\",\n    value: function () {\n      var _registerCommercialRemixPIL = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$txOptions7, licenseTerms, licenseTermsId, _request$txOptions8, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              licenseTerms = getLicenseTermByType(PIL_TYPE.COMMERCIAL_REMIX, {\n                defaultMintingFee: request.defaultMintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address,\n                commercialRevShare: request.commercialRevShare\n              });\n              _context4.next = 4;\n              return this.getLicenseTermsId(licenseTerms);\n            case 4:\n              licenseTermsId = _context4.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context4.next = 7;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 7:\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.encodedTxDataOnly)) {\n                _context4.next = 11;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: licenseTerms\n                })\n              });\n            case 11:\n              _context4.next = 13;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: licenseTerms\n              });\n            case 13:\n              txHash = _context4.sent;\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.waitForTransaction)) {\n                _context4.next = 22;\n                break;\n              }\n              _context4.next = 17;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 17:\n              txReceipt = _context4.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 22:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 23:\n              _context4.next = 28;\n              break;\n            case 25:\n              _context4.prev = 25;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to register commercial remix PIL\");\n            case 28:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 25]]);\n      }));\n      function registerCommercialRemixPIL(_x4) {\n        return _registerCommercialRemixPIL.apply(this, arguments);\n      }\n      return registerCommercialRemixPIL;\n    }()\n    /**\n     * Attaches license terms to an IP.\n     * @param request - The request object that contains all data needed to attach license terms.\n     *   @param request.ipId The address of the IP to which the license terms are attached.\n     *   @param request.licenseTemplate The address of the license template.\n     *   @param request.licenseTermsId The ID of the license terms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n  }, {\n    key: \"attachLicenseTerms\",\n    value: function () {\n      var _attachLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$txOptions9, isRegistered, isExisted, isAttachedLicenseTerms, req, _request$txOptions10, txHash;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              request.licenseTermsId = BigInt(request.licenseTermsId);\n              _context5.next = 4;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(request.ipId, \"request.ipId\")\n              });\n            case 4:\n              isRegistered = _context5.sent;\n              if (isRegistered) {\n                _context5.next = 7;\n                break;\n              }\n              throw new Error(\"The IP with id \".concat(request.ipId, \" is not registered.\"));\n            case 7:\n              _context5.next = 9;\n              return this.piLicenseTemplateReadOnlyClient.exists({\n                licenseTermsId: request.licenseTermsId\n              });\n            case 9:\n              isExisted = _context5.sent;\n              if (isExisted) {\n                _context5.next = 12;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsId, \" do not exist.\"));\n            case 12:\n              _context5.next = 14;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: request.ipId,\n                licenseTemplate: request.licenseTemplate && getAddress$1(request.licenseTemplate, \"request.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId\n              });\n            case 14:\n              isAttachedLicenseTerms = _context5.sent;\n              if (!isAttachedLicenseTerms) {\n                _context5.next = 17;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                txHash: \"\",\n                success: false\n              });\n            case 17:\n              req = {\n                ipId: request.ipId,\n                licenseTemplate: request.licenseTemplate || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId\n              };\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.encodedTxDataOnly)) {\n                _context5.next = 22;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.attachLicenseTermsEncode(req)\n              });\n            case 22:\n              _context5.next = 24;\n              return this.licensingModuleClient.attachLicenseTerms(req);\n            case 24:\n              txHash = _context5.sent;\n              if (!((_request$txOptions10 = request.txOptions) !== null && _request$txOptions10 !== void 0 && _request$txOptions10.waitForTransaction)) {\n                _context5.next = 31;\n                break;\n              }\n              _context5.next = 28;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 28:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 31:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 32:\n              _context5.next = 37;\n              break;\n            case 34:\n              _context5.prev = 34;\n              _context5.t0 = _context5[\"catch\"](0);\n              handleError(_context5.t0, \"Failed to attach license terms\");\n            case 37:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 34]]);\n      }));\n      function attachLicenseTerms(_x5) {\n        return _attachLicenseTerms.apply(this, arguments);\n      }\n      return attachLicenseTerms;\n    }()\n    /**\n     * Mints license tokens for the license terms attached to an IP.\n     * The license tokens are minted to the receiver.\n     * The license terms must be attached to the IP before calling this function.\n     * But it can mint license token of default license terms without attaching the default license terms,\n     * since it is attached to all IPs by default.\n     * IP owners can mint license tokens for their IPs for arbitrary license terms\n     * without attaching the license terms to IP.\n     * It might require the caller pay the minting fee, depending on the license terms or configured by the iP owner.\n     * The minting fee is paid in the minting fee token specified in the license terms or configured by the IP owner.\n     * IP owners can configure the minting fee of their IPs or\n     * configure the minting fee module to determine the minting fee.\n     * @param request - The request object that contains all data needed to mint license tokens.\n     *   @param request.licensorIpId The licensor IP ID.\n     *   @param request.licenseTemplate The address of the license template.\n     *   @param request.licenseTermsId The ID of the license terms within the license template.\n     *   @param request.amount The amount of license tokens to mint.\n     *   @param request.receiver The address of the receiver.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional license token IDs if waitForTxn is set to true.\n     * @emits LicenseTokensMinted (msg.sender, licensorIpId, licenseTemplate, licenseTermsId, amount, receiver, startLicenseTokenId);\n     */\n  }, {\n    key: \"mintLicenseTokens\",\n    value: function () {\n      var _mintLicenseTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request) {\n        var _request$txOptions11, isLicenseIpIdRegistered, isExisted, isAttachedLicenseTerms, amount, req, _request$txOptions12, txHash, txReceipt, targetLogs, startLicenseTokenId, licenseTokenIds, i;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              request.licenseTermsId = BigInt(request.licenseTermsId);\n              _context6.next = 4;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(request.licensorIpId, \"request.licensorIpId\")\n              });\n            case 4:\n              isLicenseIpIdRegistered = _context6.sent;\n              if (isLicenseIpIdRegistered) {\n                _context6.next = 7;\n                break;\n              }\n              throw new Error(\"The licensor IP with id \".concat(request.licensorIpId, \" is not registered.\"));\n            case 7:\n              _context6.next = 9;\n              return this.piLicenseTemplateReadOnlyClient.exists({\n                licenseTermsId: request.licenseTermsId\n              });\n            case 9:\n              isExisted = _context6.sent;\n              if (isExisted) {\n                _context6.next = 12;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsId, \" do not exist.\"));\n            case 12:\n              _context6.next = 14;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: request.licensorIpId,\n                licenseTemplate: request.licenseTemplate && getAddress$1(request.licenseTemplate, \"request.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId\n              });\n            case 14:\n              isAttachedLicenseTerms = _context6.sent;\n              if (isAttachedLicenseTerms) {\n                _context6.next = 17;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsId, \" is not attached to the IP with id \").concat(request.licensorIpId, \".\"));\n            case 17:\n              amount = BigInt(request.amount || 1);\n              req = {\n                licensorIpId: request.licensorIpId,\n                licenseTemplate: request.licenseTemplate || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId,\n                amount: amount,\n                receiver: request.receiver && getAddress$1(request.receiver, \"request.receiver\") || this.wallet.account.address,\n                royaltyContext: zeroAddress\n              };\n              if (!((_request$txOptions11 = request.txOptions) !== null && _request$txOptions11 !== void 0 && _request$txOptions11.encodedTxDataOnly)) {\n                _context6.next = 23;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.mintLicenseTokensEncode(req)\n              });\n            case 23:\n              _context6.next = 25;\n              return this.licensingModuleClient.mintLicenseTokens(req);\n            case 25:\n              txHash = _context6.sent;\n              if (!((_request$txOptions12 = request.txOptions) !== null && _request$txOptions12 !== void 0 && _request$txOptions12.waitForTransaction)) {\n                _context6.next = 37;\n                break;\n              }\n              _context6.next = 29;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 29:\n              txReceipt = _context6.sent;\n              targetLogs = this.licensingModuleClient.parseTxLicenseTokensMintedEvent(txReceipt);\n              startLicenseTokenId = targetLogs[0].startLicenseTokenId;\n              licenseTokenIds = [];\n              for (i = 0; i < amount; i++) {\n                licenseTokenIds.push(startLicenseTokenId + BigInt(i));\n              }\n              return _context6.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTokenIds: licenseTokenIds\n              });\n            case 37:\n              return _context6.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 38:\n              _context6.next = 43;\n              break;\n            case 40:\n              _context6.prev = 40;\n              _context6.t0 = _context6[\"catch\"](0);\n              handleError(_context6.t0, \"Failed to mint license tokens\");\n            case 43:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 40]]);\n      }));\n      function mintLicenseTokens(_x6) {\n        return _mintLicenseTokens.apply(this, arguments);\n      }\n      return mintLicenseTokens;\n    }()\n    /**\n     * Gets license terms of the given ID.\n     * @param selectedLicenseTermsId The ID of the license terms.\n     * @returns A Promise that resolves to an object containing the PILTerms associate with the given ID.\n     */\n  }, {\n    key: \"getLicenseTerms\",\n    value: function () {\n      var _getLicenseTerms = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee7(selectedLicenseTermsId) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this.piLicenseTemplateReadOnlyClient.getLicenseTerms({\n                selectedLicenseTermsId: BigInt(selectedLicenseTermsId)\n              });\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              handleError(_context7.t0, \"Failed to get license terms\");\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 6]]);\n      }));\n      function getLicenseTerms(_x7) {\n        return _getLicenseTerms.apply(this, arguments);\n      }\n      return getLicenseTerms;\n    }()\n  }, {\n    key: \"getLicenseTermsId\",\n    value: function () {\n      var _getLicenseTermsId = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee8(request) {\n        var licenseRes;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.licenseTemplateClient.getLicenseTermsId({\n                terms: request\n              });\n            case 2:\n              licenseRes = _context8.sent;\n              return _context8.abrupt(\"return\", licenseRes.selectedLicenseTermsId);\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getLicenseTermsId(_x8) {\n        return _getLicenseTermsId.apply(this, arguments);\n      }\n      return getLicenseTermsId;\n    }()\n  }, {\n    key: \"verifyCommercialUse\",\n    value: function verifyCommercialUse(terms) {\n      if (!terms.commercialUse) {\n        if (terms.commercialAttribution) {\n          throw new Error(\"Cannot add commercial attribution when commercial use is disabled.\");\n        }\n        if (terms.commercializerChecker !== zeroAddress) {\n          throw new Error(\"Cannot add commercializerChecker when commercial use is disabled.\");\n        }\n        if (terms.commercialRevShare > 0) {\n          throw new Error(\"Cannot add commercial revenue share when commercial use is disabled.\");\n        }\n        if (terms.commercialRevCeiling > 0) {\n          throw new Error(\"Cannot add commercial revenue ceiling when commercial use is disabled.\");\n        }\n        if (terms.derivativeRevCeiling > 0) {\n          throw new Error(\"Cannot add derivative revenue ceiling share when commercial use is disabled.\");\n        }\n        if (terms.royaltyPolicy !== zeroAddress) {\n          throw new Error(\"Cannot add commercial royalty policy when commercial use is disabled.\");\n        }\n      } else {\n        if (terms.royaltyPolicy === zeroAddress) {\n          throw new Error(\"Royalty policy is required when commercial use is enabled.\");\n        }\n      }\n    }\n  }, {\n    key: \"verifyDerivatives\",\n    value: function verifyDerivatives(terms) {\n      if (!terms.derivativesAllowed) {\n        if (terms.derivativesAttribution) {\n          throw new Error(\"Cannot add derivative attribution when derivative use is disabled.\");\n        }\n        if (terms.derivativesApproval) {\n          throw new Error(\"Cannot add derivative approval when derivative use is disabled.\");\n        }\n        if (terms.derivativesReciprocal) {\n          throw new Error(\"Cannot add derivative reciprocal when derivative use is disabled.\");\n        }\n        if (terms.derivativeRevCeiling > 0) {\n          throw new Error(\"Cannot add derivative revenue ceiling when derivative use is disabled.\");\n        }\n      }\n    }\n  }]);\n}();\nvar DisputeClient = /*#__PURE__*/function () {\n  function DisputeClient(rpcClient, wallet) {\n    _classCallCheck(this, DisputeClient);\n    this.rpcClient = rpcClient;\n    this.disputeModuleClient = new DisputeModuleClient(rpcClient, wallet);\n  }\n\n  /**\n   * Raises a dispute on a given ipId\n   * @param request - The request object containing necessary data to raise a dispute.\n   *   @param request.targetIpId - The IP ID that is the target of the dispute.\n   *   @param request.arbitrationPolicy - The address of the arbitration policy.\n   *   @param request.linkToDisputeEvidence - The link to the dispute evidence.\n   *   @param request.targetTag - The target tag of the dispute.\n   *   @param request.calldata - Optional calldata to initialize the policy.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to a RaiseDisputeResponse containing the transaction hash.\n   * @throws `NotRegisteredIpId` if targetIpId is not registered in the IPA Registry.\n   * @throws `NotWhitelistedDisputeTag` if targetTag is not whitelisted.\n   * @throws `ZeroLinkToDisputeEvidence` if linkToDisputeEvidence is empty\n   * @calls raiseDispute(address _targetIpId, string memory _linkToDisputeEvidence, bytes32 _targetTag, bytes calldata _data) external nonReentrant returns (uint256) {\n   * @emits DisputeRaised (disputeId_, targetIpId, msg.sender, arbitrationPolicy, linkToDisputeEvidence, targetTag, calldata);\n   */\n  return _createClass(DisputeClient, [{\n    key: \"raiseDispute\",\n    value: function () {\n      var _raiseDispute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, req, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              req = {\n                targetIpId: getAddress$1(request.targetIpId, \"request.targetIpId\"),\n                linkToDisputeEvidence: request.linkToDisputeEvidence,\n                targetTag: stringToHex(request.targetTag, {\n                  size: 32\n                }),\n                data: request.calldata || \"0x\"\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.disputeModuleClient.raiseDisputeEncode(req)\n              });\n            case 6:\n              _context.next = 8;\n              return this.disputeModuleClient.raiseDispute(req);\n            case 8:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 15;\n                break;\n              }\n              _context.next = 12;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 12:\n              txReceipt = _context.sent;\n              targetLogs = this.disputeModuleClient.parseTxDisputeRaisedEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                disputeId: targetLogs[0].disputeId\n              });\n            case 15:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 16:\n              _context.next = 21;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to raise dispute\");\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 18]]);\n      }));\n      function raiseDispute(_x) {\n        return _raiseDispute.apply(this, arguments);\n      }\n      return raiseDispute;\n    }()\n    /**\n     * Cancels an ongoing dispute\n     * @param request - The request object containing details to cancel the dispute.\n     *   @param request.disputeId The ID of the dispute to be cancelled.\n     *   @param request.calldata Optional additional data used in the cancellation process.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to a CancelDisputeResponse containing the transaction hash.\n     * @throws NotInDisputeState, if the currentTag of the Dispute is not being disputed\n     * @throws NotDisputeInitiator, if the transaction executor is not the one that initiated the dispute\n     * @throws error if the Dispute's ArbitrationPolicy contract is not valid\n     * @calls cancelDispute(uint256 _disputeId, bytes calldata _data) external nonReentrant {\n     * @emits DisputeCancelled (_disputeId, _data);\n     */\n  }, {\n    key: \"cancelDispute\",\n    value: function () {\n      var _cancelDispute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              req = {\n                disputeId: BigInt(request.disputeId),\n                data: request.calldata ? request.calldata : \"0x\"\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 6;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.disputeModuleClient.cancelDisputeEncode(req)\n              });\n            case 6:\n              _context2.next = 8;\n              return this.disputeModuleClient.cancelDispute(req);\n            case 8:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.next = 12;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 12:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 13:\n              _context2.next = 18;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to cancel dispute\");\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 15]]);\n      }));\n      function cancelDispute(_x2) {\n        return _cancelDispute.apply(this, arguments);\n      }\n      return cancelDispute;\n    }()\n    /**\n     * Resolves a dispute after it has been judged\n     * @param request - The request object containing details to resolve the dispute.\n     *   @param request.disputeId The ID of the dispute to be resolved.\n     *   @param request.data The data to resolve the dispute.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to a ResolveDisputeResponse.\n     * @throws NotAbleToResolve, if currentTag is still in dispute (i.e still needs a judgement to be set)\n     * @throws NotDisputeInitiator, if the transaction executor is not the one that initiated the dispute\n     * @emits DisputeResolved (_disputeId)\n     */\n  }, {\n    key: \"resolveDispute\",\n    value: function () {\n      var _resolveDispute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, req, _request$txOptions6, txHash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              req = {\n                disputeId: BigInt(request.disputeId),\n                data: request.data\n              };\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 6;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.disputeModuleClient.resolveDisputeEncode(req)\n              });\n            case 6:\n              _context3.next = 8;\n              return this.disputeModuleClient.resolveDispute(req);\n            case 8:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 12;\n                break;\n              }\n              _context3.next = 12;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 12:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 13:\n              _context3.next = 18;\n              break;\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to resolve dispute\");\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n      function resolveDispute(_x3) {\n        return _resolveDispute.apply(this, arguments);\n      }\n      return resolveDispute;\n    }()\n  }]);\n}();\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nvar IPAccountClient = /*#__PURE__*/function () {\n  function IPAccountClient(rpcClient, wallet) {\n    _classCallCheck(this, IPAccountClient);\n    this.wallet = wallet;\n    this.rpcClient = rpcClient;\n  }\n\n  /** Executes a transaction from the IP Account.\n   * @param request - The request object containing necessary data to execute IP Account a transaction.\n   *   @param request.ipId The Ip Id to get ip account.\n   *   @param request.to The recipient of the transaction.\n   *   @param request.value The amount of Ether to send.\n   *   @param request.accountAddress The ipId to send.\n   *   @param request.data The data to send along with the transaction.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns Tx hash for the transaction.\n   */\n  return _createClass(IPAccountClient, [{\n    key: \"execute\",\n    value: function () {\n      var _execute = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, ipAccountClient, req, _request$txOptions2, txHash;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(request.ipId, \"request.ipId\"));\n              req = {\n                to: request.to,\n                value: BigInt(0),\n                data: request.data\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 7;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeEncode(_objectSpread2(_objectSpread2({}, req), {}, {\n                  operation: 0\n                }))\n              });\n            case 7:\n              _context.next = 9;\n              return ipAccountClient.execute(_objectSpread2(_objectSpread2({}, req), {}, {\n                operation: 0\n              }));\n            case 9:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 13;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 13:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 14:\n              _context.next = 19;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to execute the IP Account transaction\");\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 16]]);\n      }));\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /** Executes a transaction from the IP Account.\n     * @param request - The request object containing necessary data to execute IP Account a transaction.\n     *   @param request.ipId The Ip Id to get ip account.\n     *   @param request.to The recipient of the transaction.\n     *   @param request.value The amount of Ether to send.\n     *   @param request.data The data to send along with the transaction.\n     *   @param request.signer The signer of the transaction.\n     *   @param request.deadline The deadline of the transaction signature.\n     *   @param request.signature The signature of the transaction, EIP-712 encoded.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns Tx hash for the transaction.\n     */\n  }, {\n    key: \"executeWithSig\",\n    value: function () {\n      var _executeWithSig = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, ipAccountClient, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(request.ipId, \"request.ipId\"));\n              req = {\n                to: getAddress$1(request.to, \"request.to\"),\n                value: BigInt(0),\n                data: request.data,\n                signer: getAddress$1(request.signer, \"request.signer\"),\n                deadline: BigInt(request.deadline),\n                signature: request.signature\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeWithSigEncode(req)\n              });\n            case 7:\n              _context2.next = 9;\n              return ipAccountClient.executeWithSig(req);\n            case 9:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 13;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 13:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to execute with signature for the IP Account transaction\");\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 16]]);\n      }));\n      function executeWithSig(_x2) {\n        return _executeWithSig.apply(this, arguments);\n      }\n      return executeWithSig;\n    }()\n    /** Returns the IPAccount's internal nonce for transaction ordering.\n     * @param ipId The IP ID\n     * @returns A Promise that resolves to the IP Account's nonce.\n     */\n  }, {\n    key: \"getIpAccountNonce\",\n    value: function () {\n      var _getIpAccountNonce = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ipId) {\n        var ipAccount, _yield$ipAccount$stat, state;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              ipAccount = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(ipId, \"ipId\"));\n              _context3.next = 4;\n              return ipAccount.state();\n            case 4:\n              _yield$ipAccount$stat = _context3.sent;\n              state = _yield$ipAccount$stat.result;\n              return _context3.abrupt(\"return\", state);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to get the IP Account nonce\");\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n      function getIpAccountNonce(_x3) {\n        return _getIpAccountNonce.apply(this, arguments);\n      }\n      return getIpAccountNonce;\n    }()\n    /**\n     * Returns the identifier of the non-fungible token which owns the account\n     * @returns A Promise that resolves to an object containing the chain ID, token contract address, and token ID.\n     */\n  }, {\n    key: \"getToken\",\n    value: function () {\n      var _getToken = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(ipId) {\n        var ipAccount, _yield$ipAccount$toke, _yield$ipAccount$toke2, chainId, tokenContract, tokenId;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              ipAccount = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(ipId, \"ipId\"));\n              _context4.next = 4;\n              return ipAccount.token();\n            case 4:\n              _yield$ipAccount$toke = _context4.sent;\n              _yield$ipAccount$toke2 = _slicedToArray(_yield$ipAccount$toke, 3);\n              chainId = _yield$ipAccount$toke2[0];\n              tokenContract = _yield$ipAccount$toke2[1];\n              tokenId = _yield$ipAccount$toke2[2];\n              return _context4.abrupt(\"return\", {\n                chainId: chainId,\n                tokenContract: tokenContract,\n                tokenId: tokenId\n              });\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to get the token\");\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 12]]);\n      }));\n      function getToken(_x4) {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }()\n  }]);\n}();\nvar RoyaltyClient = /*#__PURE__*/function () {\n  function RoyaltyClient(rpcClient, wallet) {\n    _classCallCheck(this, RoyaltyClient);\n    this.royaltyPolicyLapClient = new RoyaltyPolicyLapClient(rpcClient, wallet);\n    this.royaltyModuleClient = new RoyaltyModuleClient(rpcClient, wallet);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(rpcClient, wallet);\n    this.ipAccountClient = new IPAccountClient(rpcClient, wallet);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n  }\n\n  /**\n   * Allows ancestors to claim the royalty tokens and any accrued revenue tokens\n   * @param request - The request object that contains all data needed to collect royalty tokens.\n   *   @param request.parentIpId The ip id of the ancestor to whom the royalty tokens belong to.\n   *   @param request.royaltyVaultIpId The id of the royalty vault.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to an object containing the transaction hash and optional the amount of royalty tokens collected if waitForTxn is set to true.\n   * @emits RoyaltyTokensCollected (ancestorIpId, royaltyTokensCollected)\n   */\n  return _createClass(RoyaltyClient, [{\n    key: \"collectRoyaltyTokens\",\n    value: function () {\n      var _collectRoyaltyTokens = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, isParentIpIdRegistered, proxyAddress, ipRoyaltyVault, req, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(request.parentIpId, \"request.parentIpId\")\n              });\n            case 3:\n              isParentIpIdRegistered = _context.sent;\n              if (isParentIpIdRegistered) {\n                _context.next = 6;\n                break;\n              }\n              throw new Error(\"The parent IP with id \".concat(request.parentIpId, \" is not registered.\"));\n            case 6:\n              _context.next = 8;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 8:\n              proxyAddress = _context.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              req = {\n                ancestorIpId: request.parentIpId\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 15;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: ipRoyaltyVault.collectRoyaltyTokensEncode(req)\n              });\n            case 15:\n              _context.next = 17;\n              return ipRoyaltyVault.collectRoyaltyTokens(req);\n            case 17:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 26;\n                break;\n              }\n              _context.next = 21;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 21:\n              txReceipt = _context.sent;\n              targetLogs = ipRoyaltyVault.parseTxRoyaltyTokensCollectedEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                royaltyTokensCollected: targetLogs[0].royaltyTokensCollected\n              });\n            case 26:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 27:\n              _context.next = 32;\n              break;\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to collect royalty tokens\");\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 29]]);\n      }));\n      function collectRoyaltyTokens(_x) {\n        return _collectRoyaltyTokens.apply(this, arguments);\n      }\n      return collectRoyaltyTokens;\n    }()\n    /**\n     * Allows the function caller to pay royalties to the receiver IP asset on behalf of the payer IP asset.\n     * @param request - The request object that contains all data needed to pay royalty on behalf.\n     *   @param request.receiverIpId The ipId that receives the royalties.\n     *   @param request.payerIpId The ID of the IP asset that pays the royalties.\n     *   @param request.token The token to use to pay the royalties.\n     *   @param request.amount The amount to pay.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n  }, {\n    key: \"payRoyaltyOnBehalf\",\n    value: function () {\n      var _payRoyaltyOnBehalf = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, receiverIpId, payerIpId, token, amount, isReceiverRegistered, isPayerRegistered, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              receiverIpId = request.receiverIpId, payerIpId = request.payerIpId, token = request.token, amount = request.amount;\n              _context2.next = 4;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(receiverIpId, \"request.receiverIpId\")\n              });\n            case 4:\n              isReceiverRegistered = _context2.sent;\n              if (isReceiverRegistered) {\n                _context2.next = 7;\n                break;\n              }\n              throw new Error(\"The receiver IP with id \".concat(receiverIpId, \" is not registered.\"));\n            case 7:\n              if (!(getAddress$1(payerIpId, \"request.payerIpId\") && payerIpId !== zeroAddress)) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 10;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: payerIpId\n              });\n            case 10:\n              isPayerRegistered = _context2.sent;\n              if (isPayerRegistered) {\n                _context2.next = 13;\n                break;\n              }\n              throw new Error(\"The payer IP with id \".concat(request.payerIpId, \" is not registered.\"));\n            case 13:\n              req = {\n                receiverIpId: receiverIpId,\n                payerIpId: payerIpId,\n                token: getAddress$1(token, \"request.token\"),\n                amount: BigInt(amount)\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 18;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.royaltyModuleClient.payRoyaltyOnBehalfEncode(req)\n              });\n            case 18:\n              _context2.next = 20;\n              return this.royaltyModuleClient.payRoyaltyOnBehalf(req);\n            case 20:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 27;\n                break;\n              }\n              _context2.next = 24;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 24:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 27:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 28:\n              _context2.next = 33;\n              break;\n            case 30:\n              _context2.prev = 30;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to pay royalty on behalf\");\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 30]]);\n      }));\n      function payRoyaltyOnBehalf(_x2) {\n        return _payRoyaltyOnBehalf.apply(this, arguments);\n      }\n      return payRoyaltyOnBehalf;\n    }()\n    /**\n     * Calculates the amount of revenue token claimable by a token holder at certain snapshot.\n     * @param request - The request object that contains all data needed to claim Revenue.\n     *   @param request.royaltyVaultIpId The id of the royalty vault.\n     *   @param request.account The address of the token holder.\n     *   @param request.snapshotId The snapshot id.\n     *   @param request.token The revenue token to claim.\n     * @returns A Promise that contains the amount of revenue token claimable\n     */\n  }, {\n    key: \"claimableRevenue\",\n    value: function () {\n      var _claimableRevenue = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var proxyAddress, ipRoyaltyVault;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 3:\n              proxyAddress = _context3.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              _context3.next = 7;\n              return ipRoyaltyVault.claimableRevenue({\n                account: getAddress$1(request.account, \"request.account\"),\n                snapshotId: BigInt(request.snapshotId),\n                token: getAddress$1(request.token, \"request.token\")\n              });\n            case 7:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to calculate claimable revenue\");\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 10]]);\n      }));\n      function claimableRevenue(_x3) {\n        return _claimableRevenue.apply(this, arguments);\n      }\n      return claimableRevenue;\n    }()\n    /**\n     * Allows token holders to claim by a list of snapshot ids based on the token balance at certain snapshot\n     * @param request - The request object that contains all data needed to claim revenue.\n     *   @param request.snapshotIds The list of snapshot ids.\n     *   @param request.royaltyVaultIpId The id of the royalty vault.\n     *   @param request.token The revenue token to claim.\n     *   @param request.account [Optional] The ipId to send.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional claimableToken if waitForTxn is set to true.\n     * @emits RevenueTokenClaimed (claimer, token, amount).\n     */\n  }, {\n    key: \"claimRevenue\",\n    value: function () {\n      var _claimRevenue = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$txOptions7, proxyAddress, ipRoyaltyVault, txHash, _request$txOptions5, iPAccountExecuteResponse, _request$txOptions6, req, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 3:\n              proxyAddress = _context4.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              request.snapshotIds = request.snapshotIds.map(function (item) {\n                return BigInt(item);\n              });\n              if (!request.account) {\n                _context4.next = 15;\n                break;\n              }\n              _context4.next = 9;\n              return this.ipAccountClient.execute({\n                to: proxyAddress,\n                value: 0,\n                ipId: getAddress$1(request.account, \"request.account\"),\n                txOptions: request.txOptions,\n                data: encodeFunctionData({\n                  abi: ipRoyaltyVaultImplAbi,\n                  functionName: \"claimRevenueBySnapshotBatch\",\n                  args: [request.snapshotIds, request.token]\n                })\n              });\n            case 9:\n              iPAccountExecuteResponse = _context4.sent;\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context4.next = 12;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: iPAccountExecuteResponse.encodedTxData\n              });\n            case 12:\n              txHash = iPAccountExecuteResponse.txHash;\n              _context4.next = 23;\n              break;\n            case 15:\n              req = {\n                snapshotIds: request.snapshotIds,\n                token: getAddress$1(request.token, \"request.token\")\n              };\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.encodedTxDataOnly)) {\n                _context4.next = 20;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: ipRoyaltyVault.claimRevenueBySnapshotBatchEncode(req)\n              });\n            case 20:\n              _context4.next = 22;\n              return ipRoyaltyVault.claimRevenueBySnapshotBatch(req);\n            case 22:\n              txHash = _context4.sent;\n            case 23:\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.waitForTransaction)) {\n                _context4.next = 31;\n                break;\n              }\n              _context4.next = 26;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 26:\n              txReceipt = _context4.sent;\n              targetLogs = ipRoyaltyVault.parseTxRevenueTokenClaimedEvent(txReceipt);\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                claimableToken: targetLogs[0].amount\n              });\n            case 31:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 32:\n              _context4.next = 37;\n              break;\n            case 34:\n              _context4.prev = 34;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to claim revenue\");\n            case 37:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 34]]);\n      }));\n      function claimRevenue(_x4) {\n        return _claimRevenue.apply(this, arguments);\n      }\n      return claimRevenue;\n    }()\n    /**\n     * Snapshots the claimable revenue and royalty token amounts.\n     * @param request - The request object that contains all data needed to snapshot.\n     *   @param request.royaltyVaultIpId The id of the royalty vault.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional snapshotId if waitForTxn is set to true.\n     * @emits SnapshotCompleted (snapshotId, snapshotTimestamp, unclaimedTokens).\n     */\n  }, {\n    key: \"snapshot\",\n    value: function () {\n      var _snapshot = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$txOptions8, proxyAddress, ipRoyaltyVault, _request$txOptions9, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 3:\n              proxyAddress = _context5.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.encodedTxDataOnly)) {\n                _context5.next = 9;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: ipRoyaltyVault.snapshotEncode()\n              });\n            case 9:\n              _context5.next = 11;\n              return ipRoyaltyVault.snapshot();\n            case 11:\n              txHash = _context5.sent;\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.waitForTransaction)) {\n                _context5.next = 20;\n                break;\n              }\n              _context5.next = 15;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 15:\n              txReceipt = _context5.sent;\n              targetLogs = ipRoyaltyVault.parseTxSnapshotCompletedEvent(txReceipt);\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                snapshotId: targetLogs[0].snapshotId\n              });\n            case 20:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 21:\n              _context5.next = 26;\n              break;\n            case 23:\n              _context5.prev = 23;\n              _context5.t0 = _context5[\"catch\"](0);\n              handleError(_context5.t0, \"Failed to snapshot\");\n            case 26:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 23]]);\n      }));\n      function snapshot(_x5) {\n        return _snapshot.apply(this, arguments);\n      }\n      return snapshot;\n    }()\n    /**\n     * Get the royalty vault proxy address of given royaltyVaultIpId.\n     * @param royaltyVaultIpId the id of the royalty vault.\n     * @returns A Promise that resolves to an object containing the royalty vault address.\n     */\n  }, {\n    key: \"getRoyaltyVaultAddress\",\n    value: function () {\n      var _getRoyaltyVaultAddress = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee6(royaltyVaultIpId) {\n        var isRoyaltyVaultIpIdRegistered, data;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(royaltyVaultIpId, \"royaltyVaultIpId\")\n              });\n            case 2:\n              isRoyaltyVaultIpIdRegistered = _context6.sent;\n              if (isRoyaltyVaultIpIdRegistered) {\n                _context6.next = 5;\n                break;\n              }\n              throw new Error(\"The royalty vault IP with id \".concat(royaltyVaultIpId, \" is not registered.\"));\n            case 5:\n              _context6.next = 7;\n              return this.royaltyPolicyLapClient.getRoyaltyData({\n                ipId: royaltyVaultIpId\n              });\n            case 7:\n              data = _context6.sent;\n              if (!(!data[1] || data[1] === \"0x\")) {\n                _context6.next = 10;\n                break;\n              }\n              throw new Error(\"The royalty vault IP with id \".concat(royaltyVaultIpId, \" address is not set.\"));\n            case 10:\n              return _context6.abrupt(\"return\", data[1]);\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getRoyaltyVaultAddress(_x6) {\n        return _getRoyaltyVaultAddress.apply(this, arguments);\n      }\n      return getRoyaltyVaultAddress;\n    }()\n  }]);\n}();\nvar NftClient = /*#__PURE__*/function () {\n  function NftClient(rpcClient, wallet) {\n    _classCallCheck(this, NftClient);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n    this.spgClient = new SpgClient(rpcClient, wallet);\n  }\n\n  /**\n   * Creates a new SPG NFT Collection.\n   * @param request - The request object containing necessary data to create a SPG NFT Collection.\n   *   @param request.name - The name of the collection.\n   * \t @param request.symbol - The symbol of the collection.\n   * \t @param request.maxSupply - The maximum supply of the collection.\n   * \t @param request.mintFee - The cost to mint a token.\n   * \t @param request.mintFeeToken - The token to mint.\n   * \t @param request.owner - The owner of the collection.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to a CreateNFTCollectionResponse containing the transaction hash and collection address.\n   * @emits CollectionCreated (nftContract);\n   */\n  return _createClass(NftClient, [{\n    key: \"createNFTCollection\",\n    value: function () {\n      var _createNFTCollection = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$maxSupply, _request$mintFee, _request$mintFeeToken, _request$txOptions, req, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (!(request.mintFee !== undefined && (request.mintFee < 0n || !isAddress(request.mintFeeToken || \"\")))) {\n                _context.next = 3;\n                break;\n              }\n              throw new Error(\"Invalid mint fee token address, mint fee is greater than 0.\");\n            case 3:\n              req = {\n                name: request.name,\n                symbol: request.symbol,\n                maxSupply: (_request$maxSupply = request.maxSupply) !== null && _request$maxSupply !== void 0 ? _request$maxSupply : Number(maxUint32),\n                mintFee: (_request$mintFee = request.mintFee) !== null && _request$mintFee !== void 0 ? _request$mintFee : 0n,\n                mintFeeToken: (_request$mintFeeToken = request.mintFeeToken) !== null && _request$mintFeeToken !== void 0 ? _request$mintFeeToken : zeroAddress,\n                owner: request.owner && getAddress$1(request.owner, \"request.owner\") || this.wallet.account.address\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.spgClient.createCollectionEncode(req)\n              });\n            case 8:\n              _context.next = 10;\n              return this.spgClient.createCollection(req);\n            case 10:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 17;\n                break;\n              }\n              _context.next = 14;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 14:\n              txReceipt = _context.sent;\n              targetLogs = this.spgClient.parseTxCollectionCreatedEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                nftContract: targetLogs[0].nftContract\n              });\n            case 17:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 18:\n              _context.next = 23;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to create a SPG NFT collection\");\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n      function createNFTCollection(_x) {\n        return _createNFTCollection.apply(this, arguments);\n      }\n      return createNFTCollection;\n    }()\n  }]);\n}();\nif (typeof process !== \"undefined\") {\n  dotenv.config();\n}\n/**\n * The StoryClient is the main entry point for the SDK.\n */\nvar StoryClient = /*#__PURE__*/function () {\n  /**\n   * @param config - the configuration for the SDK client\n   */\n  function StoryClient(config) {\n    _classCallCheck(this, StoryClient);\n    _defineProperty(this, \"_ipAsset\", null);\n    _defineProperty(this, \"_permission\", null);\n    _defineProperty(this, \"_license\", null);\n    _defineProperty(this, \"_dispute\", null);\n    _defineProperty(this, \"_ipAccount\", null);\n    _defineProperty(this, \"_royalty\", null);\n    _defineProperty(this, \"_nftClient\", null);\n    this.config = _objectSpread2(_objectSpread2({}, config), {}, {\n      chainId: config.chainId || \"iliad\"\n    });\n    if (!this.config.transport) {\n      throw new Error(\"transport is null, please pass in a valid RPC Provider URL as the transport.\");\n    }\n    var clientConfig = {\n      chain: chainStringToViemChain(this.config.chainId),\n      transport: this.config.transport\n    };\n    this.rpcClient = createPublicClient(clientConfig);\n    if (this.config.wallet) {\n      this.wallet = this.config.wallet;\n    } else if (this.config.account) {\n      var account = this.config.account;\n      this.wallet = createWalletClient(_objectSpread2(_objectSpread2({}, clientConfig), {}, {\n        account: account\n      }));\n    } else {\n      throw new Error(\"must specify a wallet or account\");\n    }\n  }\n\n  /**\n   * Factory method for creating a SDK client with a signer.\n   *\n   * @param config StoryClient - the configuration for a new SDK client\n   */\n  return _createClass(StoryClient, [{\n    key: \"ipAsset\",\n    get:\n    /**\n     * Getter for the ip asset client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the IPAssetClient instance\n     */\n    function get() {\n      if (this._ipAsset === null) {\n        this._ipAsset = new IPAssetClient(this.rpcClient, this.wallet, this.config.chainId);\n      }\n      return this._ipAsset;\n    }\n\n    /**\n     * Getter for the permission client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the PermissionClient instance\n     */\n  }, {\n    key: \"permission\",\n    get: function get() {\n      if (this._permission === null) {\n        this._permission = new PermissionClient(this.rpcClient, this.wallet, this.config.chainId);\n      }\n      return this._permission;\n    }\n\n    /**\n     * Getter for the license client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the LicenseClient instance\n     */\n  }, {\n    key: \"license\",\n    get: function get() {\n      if (this._license === null) {\n        this._license = new LicenseClient(this.rpcClient, this.wallet);\n      }\n      return this._license;\n    }\n\n    /**\n     * Getter for the dispute client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the DisputeClient instance\n     */\n  }, {\n    key: \"dispute\",\n    get: function get() {\n      if (this._dispute === null) {\n        this._dispute = new DisputeClient(this.rpcClient, this.wallet);\n      }\n      return this._dispute;\n    }\n\n    /**\n     * Getter for the ip account client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the IPAccountClient instance\n     */\n  }, {\n    key: \"ipAccount\",\n    get: function get() {\n      if (this._ipAccount === null) {\n        this._ipAccount = new IPAccountClient(this.rpcClient, this.wallet);\n      }\n      return this._ipAccount;\n    }\n\n    /**\n     * Getter for the royalty client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the RoyaltyClient instance\n     */\n  }, {\n    key: \"royalty\",\n    get: function get() {\n      if (this._royalty === null) {\n        this._royalty = new RoyaltyClient(this.rpcClient, this.wallet);\n      }\n      return this._royalty;\n    }\n\n    /**\n     * Getter for the NFT client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the NftClient instance\n     */\n  }, {\n    key: \"nftClient\",\n    get: function get() {\n      if (this._nftClient === null) {\n        this._nftClient = new NftClient(this.rpcClient, this.wallet);\n      }\n      return this._nftClient;\n    }\n  }], [{\n    key: \"newClient\",\n    value: function newClient(config) {\n      return new StoryClient(config);\n    }\n\n    /**\n     * Factory method for creating a SDK client with a signer.\n     *\n     * @param config WalletClientConfig - the configuration for a new SDK client\n     */\n  }, {\n    key: \"newClientUseWallet\",\n    value: function newClientUseWallet(config) {\n      return new StoryClient({\n        chainId: config.chainId,\n        transport: config.transport,\n        wallet: config.wallet\n      });\n    }\n\n    /**\n     * Factory method for creating a SDK client with a signer.\n     *\n     * @param config UseAccountStoryConfig - the configuration for a new SDK client\n     */\n  }, {\n    key: \"newClientUseAccount\",\n    value: function newClientUseAccount(config) {\n      return new StoryClient({\n        account: config.account,\n        chainId: config.chainId,\n        transport: config.transport\n      });\n    }\n  }]);\n}();\nexport { AccessPermission, AddressZero, DisputeClient, HashZero, IPAccountClient, IPAssetClient, LicenseClient, NftClient, PIL_TYPE, PermissionClient, RoyaltyClient, StoryClient, getPermissionSignature, iliad };","map":{"version":3,"names":["isAddress","checksumAddress","encodeFunctionData","decodeEventLog","zeroAddress","getAddress","getAddress$2","toFunctionSelector","keccak256","encodeAbiParameters","toHex","zeroHash","stringToHex","maxUint32","createPublicClient","createWalletClient","dotenv","defineChain","toPrimitive","t","r","e","Symbol","i","call","TypeError","String","Number","toPropertyKey","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","push","apply","_objectSpread2","arguments","length","forEach","getOwnPropertyDescriptors","defineProperties","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_createClass","protoProps","staticProps","prototype","_arrayLikeToArray","arr","len","arr2","Array","_unsupportedIterableToArray","minLen","n","toString","slice","constructor","name","from","test","_createForOfIteratorHelper","allowArrayLike","it","iterator","isArray","F","s","done","f","normalCompletion","didErr","err","step","next","return","_regeneratorRuntime","hasOwnProperty","a","c","asyncIterator","u","toStringTag","define","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","h","l","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","resultName","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","mark","setPrototypeOf","__proto__","awrap","async","Promise","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","info","error","_asyncToGenerator","fn","self","args","undefined","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","indexOf","_objectWithoutProperties","sourceSymbolKeys","propertyIsEnumerable","iliad","id","nativeCurrency","symbol","decimals","rpcUrls","http","webSocket","blockExplorers","url","contracts","multicall3","address","blockCreated","testnet","chainStringToViemChain","chainId","concat","chain","getAddress$1","strict","handleError","msg","message","_getPrototypeOf","bind","_isNativeReflectConstruct","Boolean","valueOf","Reflect","construct","_assertThisInitialized","ReferenceError","_possibleConstructorReturn","_callSuper","_setPrototypeOf","_inherits","subClass","superClass","accessControllerAbi","inputs","internalType","stateMutability","anonymous","indexed","outputs","components","accessControllerAddress","coreMetadataModuleAbi","coreMetadataModuleAddress","disputeModuleAbi","disputeModuleAddress","ipAccountImplAbi","ipAccountImplAddress","ipAssetRegistryAbi","ipAssetRegistryAddress","ipRoyaltyVaultImplAbi","ipRoyaltyVaultImplAddress","licenseRegistryAbi","licenseRegistryAddress","licenseTokenAbi","licenseTokenAddress","licensingModuleAbi","licensingModuleAddress","piLicenseTemplateAbi","piLicenseTemplateAddress","royaltyModuleAbi","royaltyModuleAddress","royaltyPolicyLapAbi","royaltyPolicyLapAddress","spgAbi","spgAddress","AccessControllerEventClient","rpcClient","_rpcClient$chain","watchPermissionSetEvent","_onLogs","watchContractEvent","abi","eventName","onLogs","evs","transactionHash","parseTxPermissionSetEvent","txReceipt","targetLogs","_iterator","logs","_step","log","event","data","topics","AccessControllerClient","_AccessControllerEven","wallet","_this","_setAllPermissions","_callee","request","_yield$this$rpcClient","_callee$","_context","simulateContract","functionName","account","ipAccount","signer","permission","writeContract","setAllPermissions","_x","setAllPermissionsEncode","to","_setBatchPermissions","_callee2","_yield$this$rpcClient2","_callee2$","_context2","permissions","setBatchPermissions","_x2","setBatchPermissionsEncode","_setPermission","_callee3","_yield$this$rpcClient3","_callee3$","_context3","func","setPermission","_x3","setPermissionEncode","CoreMetadataModuleEventClient","_rpcClient$chain2","watchAuthorityUpdatedEvent","_onLogs2","parseTxAuthorityUpdatedEvent","_iterator2","_step2","watchInitializedEvent","_onLogs3","parseTxInitializedEvent","_iterator3","_step3","watchMetadataFrozenEvent","_onLogs4","parseTxMetadataFrozenEvent","_iterator4","_step4","watchMetadataUriSetEvent","_onLogs5","parseTxMetadataUriSetEvent","_iterator5","_step5","watchNftTokenUriSetEvent","_onLogs6","parseTxNftTokenUriSetEvent","_iterator6","_step6","watchUpgradedEvent","_onLogs7","parseTxUpgradedEvent","_iterator7","_step7","CoreMetadataModuleReadOnlyClient","_CoreMetadataModuleEv","_accessController","_callee4","_callee4$","_context4","readContract","accessController","_ipAccountRegistry","_callee5","_callee5$","_context5","ipAccountRegistry","_upgradeInterfaceVersion","_callee6","_callee6$","_context6","upgradeInterfaceVersion","_authority","_callee7","_callee7$","_context7","authority","_isConsumingScheduledOp","_callee8","_callee8$","_context8","isConsumingScheduledOp","_isMetadataFrozen","_callee9","_callee9$","_context9","ipId","isMetadataFrozen","_x4","_name","_callee10","_callee10$","_context10","_proxiableUuid","_callee11","_callee11$","_context11","proxiableUuid","_supportsInterface","_callee12","_callee12$","_context12","interfaceId","supportsInterface","_x5","CoreMetadataModuleClient","_CoreMetadataModuleRe","_this2","_freezeMetadata","_callee13","_yield$this$rpcClient4","_callee13$","_context13","freezeMetadata","_x6","freezeMetadataEncode","_initialize","_callee14","_yield$this$rpcClient5","_callee14$","_context14","accessManager","initialize","_x7","initializeEncode","_setAll","_callee15","_yield$this$rpcClient6","_callee15$","_context15","metadataURI","metadataHash","nftMetadataHash","setAll","_x8","setAllEncode","_setAuthority","_callee16","_yield$this$rpcClient7","_callee16$","_context16","newAuthority","setAuthority","_x9","setAuthorityEncode","_setMetadataUri","_callee17","_yield$this$rpcClient8","_callee17$","_context17","setMetadataUri","_x10","setMetadataUriEncode","_updateNftTokenUri","_callee18","_yield$this$rpcClient9","_callee18$","_context18","updateNftTokenUri","_x11","updateNftTokenUriEncode","_upgradeToAndCall","_callee19","_yield$this$rpcClient10","_callee19$","_context19","newImplementation","upgradeToAndCall","_x12","upgradeToAndCallEncode","DisputeModuleEventClient","_rpcClient$chain3","watchDisputeCancelledEvent","_onLogs8","parseTxDisputeCancelledEvent","_iterator8","_step8","watchDisputeRaisedEvent","_onLogs9","parseTxDisputeRaisedEvent","_iterator9","_step9","watchDisputeResolvedEvent","_onLogs10","parseTxDisputeResolvedEvent","_iterator10","_step10","DisputeModuleClient","_DisputeModuleEventCl","_this3","_cancelDispute","_callee20","_yield$this$rpcClient11","_callee20$","_context20","disputeId","cancelDispute","_x13","cancelDisputeEncode","_raiseDispute","_callee21","_yield$this$rpcClient12","_callee21$","_context21","targetIpId","linkToDisputeEvidence","targetTag","raiseDispute","_x14","raiseDisputeEncode","_resolveDispute","_callee22","_yield$this$rpcClient13","_callee22$","_context22","resolveDispute","_x15","resolveDisputeEncode","IpAccountImplReadOnlyClient","_rpcClient$chain4","_state","_callee23","result","_callee23$","_context23","state","_token","_callee24","_callee24$","_context24","token","IpAccountImplClient","_IpAccountImplReadOnl","_this4","_execute","_callee25","_yield$this$rpcClient14","_callee25$","_context25","operation","execute","_x16","executeEncode","_execute2","_callee26","_yield$this$rpcClient15","_callee26$","_context26","execute2","_x17","execute2Encode","_executeWithSig","_callee27","_yield$this$rpcClient16","_callee27$","_context27","deadline","signature","executeWithSig","_x18","executeWithSigEncode","IpAssetRegistryEventClient","_rpcClient$chain5","watchIpAccountRegisteredEvent","_onLogs11","parseTxIpAccountRegisteredEvent","_iterator11","_step11","watchIpRegisteredEvent","_onLogs12","parseTxIpRegisteredEvent","_iterator12","_step12","IpAssetRegistryReadOnlyClient","_IpAssetRegistryEvent","_ipId","_callee28","_callee28$","_context28","tokenContract","tokenId","_x19","_isRegistered","_callee29","_callee29$","_context29","isRegistered","_x20","IpAssetRegistryClient","_IpAssetRegistryReadO","_this5","_register","_callee30","_yield$this$rpcClient17","_callee30$","_context30","chainid","register","_x21","registerEncode","IpRoyaltyVaultImplEventClient","_rpcClient$chain6","watchRevenueTokenClaimedEvent","_onLogs13","parseTxRevenueTokenClaimedEvent","_iterator13","_step13","watchRoyaltyTokensCollectedEvent","_onLogs14","parseTxRoyaltyTokensCollectedEvent","_iterator14","_step14","watchSnapshotCompletedEvent","_onLogs15","parseTxSnapshotCompletedEvent","_iterator15","_step15","IpRoyaltyVaultImplReadOnlyClient","_IpRoyaltyVaultImplEv","_claimableRevenue","_callee31","_callee31$","_context31","snapshotId","claimableRevenue","_x22","_ipId2","_callee32","_callee32$","_context32","IpRoyaltyVaultImplClient","_IpRoyaltyVaultImplRe","_this6","_claimRevenueBySnapshotBatch","_callee33","_yield$this$rpcClient18","_callee33$","_context33","snapshotIds","claimRevenueBySnapshotBatch","_x23","claimRevenueBySnapshotBatchEncode","_claimRevenueByTokenBatch","_callee34","_yield$this$rpcClient19","_callee34$","_context34","tokenList","claimRevenueByTokenBatch","_x24","claimRevenueByTokenBatchEncode","_collectRoyaltyTokens","_callee35","_yield$this$rpcClient20","_callee35$","_context35","ancestorIpId","collectRoyaltyTokens","_x25","collectRoyaltyTokensEncode","_snapshot","_callee36","_yield$this$rpcClient21","_callee36$","_context36","snapshot","snapshotEncode","LicenseRegistryEventClient","_rpcClient$chain7","_onLogs16","_iterator16","_step16","watchDefaultLicenseTermsSetEvent","_onLogs17","parseTxDefaultLicenseTermsSetEvent","_iterator17","_step17","watchExpirationTimeSetEvent","_onLogs18","parseTxExpirationTimeSetEvent","_iterator18","_step18","_onLogs19","_iterator19","_step19","watchLicenseTemplateRegisteredEvent","_onLogs20","parseTxLicenseTemplateRegisteredEvent","_iterator20","_step20","watchLicensingConfigSetForIpEvent","_onLogs21","parseTxLicensingConfigSetForIpEvent","_iterator21","_step21","watchLicensingConfigSetForLicenseEvent","_onLogs22","parseTxLicensingConfigSetForLicenseEvent","_iterator22","_step22","_onLogs23","_iterator23","_step23","LicenseRegistryReadOnlyClient","_LicenseRegistryEvent","_disputeModule","_callee37","_callee37$","_context37","disputeModule","_expirationTime","_callee38","_callee38$","_context38","expirationTime","_ipGraphAcl","_callee39","_callee39$","_context39","ipGraphAcl","_ipGraphContract","_callee40","_callee40$","_context40","ipGraphContract","_licensingModule","_callee41","_callee41$","_context41","licensingModule","_upgradeInterfaceVersion2","_callee42","_callee42$","_context42","_authority2","_callee43","_callee43$","_context43","_exists","_callee44","_callee44$","_context44","licenseTemplate","licenseTermsId","exists","_x26","_getAttachedLicenseTerms","_callee45","_callee45$","_context45","index","getAttachedLicenseTerms","_x27","_getAttachedLicenseTermsCount","_callee46","_callee46$","_context46","getAttachedLicenseTermsCount","_x28","_getDefaultLicenseTerms","_callee47","_callee47$","_context47","getDefaultLicenseTerms","_getDerivativeIp","_callee48","_callee48$","_context48","parentIpId","childIpId","getDerivativeIp","_x29","_getDerivativeIpCount","_callee49","_callee49$","_context49","getDerivativeIpCount","_x30","_getExpireTime","_callee50","_callee50$","_context50","getExpireTime","_x31","_getLicensingConfig","_callee51","_callee51$","_context51","getLicensingConfig","_x32","_getParentIp","_callee52","_callee52$","_context52","getParentIp","_x33","_getParentIpCount","_callee53","_callee53$","_context53","getParentIpCount","_x34","_hasDerivativeIps","_callee54","_callee54$","_context54","hasDerivativeIps","_x35","_hasIpAttachedLicenseTerms","_callee55","_callee55$","_context55","hasIpAttachedLicenseTerms","_x36","_isConsumingScheduledOp2","_callee56","_callee56$","_context56","_isDerivativeIp","_callee57","_callee57$","_context57","isDerivativeIp","_x37","_isExpiredNow","_callee58","_callee58$","_context58","isExpiredNow","_x38","_isParentIp","_callee59","_callee59$","_context59","isParentIp","_x39","_isRegisteredLicenseTemplate","_callee60","_callee60$","_context60","isRegisteredLicenseTemplate","_x40","_proxiableUuid2","_callee61","_callee61$","_context61","_verifyMintLicenseToken","_callee62","_callee62$","_context62","licensorIpId","isMintedByIpOwner","verifyMintLicenseToken","_x41","LicenseTokenReadOnlyClient","_rpcClient$chain8","_ownerOf","_callee72","_callee72$","_context72","ownerOf","_x51","LicensingModuleEventClient","_rpcClient$chain9","watchLicenseTermsAttachedEvent","_onLogs24","parseTxLicenseTermsAttachedEvent","_iterator24","_step24","watchLicenseTokensMintedEvent","_onLogs25","parseTxLicenseTokensMintedEvent","_iterator25","_step25","LicensingModuleClient","_LicensingModuleEvent","_this8","_attachLicenseTerms","_callee73","_yield$this$rpcClient31","_callee73$","_context73","attachLicenseTerms","_x52","attachLicenseTermsEncode","_mintLicenseTokens","_callee74","_yield$this$rpcClient32","_callee74$","_context74","amount","receiver","royaltyContext","mintLicenseTokens","_x53","mintLicenseTokensEncode","_registerDerivative","_callee75","_yield$this$rpcClient33","_callee75$","_context75","parentIpIds","licenseTermsIds","registerDerivative","_x54","registerDerivativeEncode","_registerDerivativeWithLicenseTokens","_callee76","_yield$this$rpcClient34","_callee76$","_context76","licenseTokenIds","registerDerivativeWithLicenseTokens","_x55","registerDerivativeWithLicenseTokensEncode","PiLicenseTemplateEventClient","_rpcClient$chain11","_onLogs26","_iterator26","_step26","watchDerivativeApprovedEvent","_onLogs27","parseTxDerivativeApprovedEvent","_iterator27","_step27","_onLogs28","_iterator28","_step28","watchLicenseTermsRegisteredEvent","_onLogs29","parseTxLicenseTermsRegisteredEvent","_iterator29","_step29","_onLogs30","_iterator30","_step30","PiLicenseTemplateReadOnlyClient","_PiLicenseTemplateEve","_accessController2","_callee78","_callee78$","_context78","_ipAccountRegistry2","_callee79","_callee79$","_context79","_licenseRegistry","_callee80","_callee80$","_context80","licenseRegistry","_royaltyModule","_callee81","_callee81$","_context81","royaltyModule","_termsRenderer","_callee82","_callee82$","_context82","termsRenderer","_upgradeInterfaceVersion3","_callee83","_callee83$","_context83","_authority3","_callee84","_callee84$","_context84","_exists2","_callee85","_callee85$","_context85","_x57","_getEarlierExpireTime","_callee86","_callee86$","_context86","start","getEarlierExpireTime","_x58","_getExpireTime2","_callee87","_callee87$","_context87","_x59","_getLicenseTerms","_callee88","_callee88$","_context88","selectedLicenseTermsId","terms","getLicenseTerms","_x60","_getLicenseTermsId","_callee89","_callee89$","_context89","getLicenseTermsId","_x61","_getLicenseTermsUri","_callee90","_callee90$","_context90","getLicenseTermsUri","_x62","_getMetadataUri","_callee91","_callee91$","_context91","getMetadataUri","_getRoyaltyPolicy","_callee92","_callee92$","_context92","royaltyPolicy","royaltyData","mintingFee","currency","getRoyaltyPolicy","_x63","_isConsumingScheduledOp3","_callee93","_callee93$","_context93","_isDerivativeApproved","_callee94","_callee94$","_context94","isDerivativeApproved","_x64","_isLicenseTransferable","_callee95","_callee95$","_context95","isLicenseTransferable","_x65","_name2","_callee96","_callee96$","_context96","_proxiableUuid3","_callee97","_callee97$","_context97","_supportsInterface2","_callee98","_callee98$","_context98","_x66","_toJson","_callee99","_callee99$","_context99","toJson","_x67","_totalRegisteredLicenseTerms","_callee100","_callee100$","_context100","totalRegisteredLicenseTerms","_verifyCompatibleLicenses","_callee101","_callee101$","_context101","verifyCompatibleLicenses","_x68","PiLicenseTemplateClient","_PiLicenseTemplateRea","_this9","_initialize3","_callee102","_yield$this$rpcClient35","_callee102$","_context102","_x69","_registerLicenseTerms","_callee103","_yield$this$rpcClient36","_callee103$","_context103","registerLicenseTerms","_x70","registerLicenseTermsEncode","_setApproval","_callee104","_yield$this$rpcClient37","_callee104$","_context104","approved","setApproval","_x71","setApprovalEncode","_setAuthority3","_callee105","_yield$this$rpcClient38","_callee105$","_context105","_x72","_upgradeToAndCall3","_callee106","_yield$this$rpcClient39","_callee106$","_context106","_x73","_verifyMintLicenseToken2","_callee107","_yield$this$rpcClient40","_callee107$","_context107","_x74","verifyMintLicenseTokenEncode","_verifyRegisterDerivative","_callee108","_yield$this$rpcClient41","_callee108$","_context108","licensee","verifyRegisterDerivative","_x75","verifyRegisterDerivativeEncode","_verifyRegisterDerivativeForAllParents","_callee109","_yield$this$rpcClient42","_callee109$","_context109","childIpOwner","verifyRegisterDerivativeForAllParents","_x76","verifyRegisterDerivativeForAllParentsEncode","RoyaltyModuleReadOnlyClient","_rpcClient$chain12","_isWhitelistedRoyaltyPolicy","_callee110","_callee110$","_context110","isWhitelistedRoyaltyPolicy","_x77","_isWhitelistedRoyaltyToken","_callee111","_callee111$","_context111","isWhitelistedRoyaltyToken","_x78","RoyaltyModuleClient","_RoyaltyModuleReadOnl","_this10","_payRoyaltyOnBehalf","_callee112","_yield$this$rpcClient43","_callee112$","_context112","receiverIpId","payerIpId","payRoyaltyOnBehalf","_x79","payRoyaltyOnBehalfEncode","RoyaltyPolicyLapReadOnlyClient","_rpcClient$chain13","_getRoyaltyData","_callee113","_callee113$","_context113","getRoyaltyData","_x80","RoyaltyPolicyLapClient","_RoyaltyPolicyLapRead","_this11","_onRoyaltyPayment","_callee114","_yield$this$rpcClient44","_callee114$","_context114","caller","onRoyaltyPayment","_x81","onRoyaltyPaymentEncode","SpgEventClient","_rpcClient$chain14","watchCollectionCreatedEvent","_onLogs31","parseTxCollectionCreatedEvent","_iterator31","_step31","SpgClient","_SpgEventClient","_this12","_createCollection","_callee115","_yield$this$rpcClient45","_callee115$","_context115","maxSupply","mintFee","mintFeeToken","owner","createCollection","_x82","createCollectionEncode","_mintAndRegisterIp","_callee116","_yield$this$rpcClient46","_callee116$","_context116","nftContract","recipient","ipMetadata","mintAndRegisterIp","_x83","mintAndRegisterIpEncode","_mintAndRegisterIpAndAttachPilTerms","_callee117","_yield$this$rpcClient47","_callee117$","_context117","mintAndRegisterIpAndAttachPilTerms","_x84","mintAndRegisterIpAndAttachPilTermsEncode","_mintAndRegisterIpAndMakeDerivative","_callee118","_yield$this$rpcClient48","_callee118$","_context118","derivData","mintAndRegisterIpAndMakeDerivative","_x85","mintAndRegisterIpAndMakeDerivativeEncode","_mintAndRegisterIpAndMakeDerivativeWithLicenseTokens","_callee119","_yield$this$rpcClient49","_callee119$","_context119","mintAndRegisterIpAndMakeDerivativeWithLicenseTokens","_x86","mintAndRegisterIpAndMakeDerivativeWithLicenseTokensEncode","_registerIp","_callee120","_yield$this$rpcClient50","_callee120$","_context120","sigMetadata","registerIp","_x87","registerIpEncode","_registerIpAndAttachPilTerms","_callee121","_yield$this$rpcClient51","_callee121$","_context121","sigAttach","registerIpAndAttachPilTerms","_x88","registerIpAndAttachPilTermsEncode","_registerIpAndMakeDerivative","_callee122","_yield$this$rpcClient52","_callee122$","_context122","sigRegister","registerIpAndMakeDerivative","_x89","registerIpAndMakeDerivativeEncode","_registerIpAndMakeDerivativeWithLicenseTokens","_callee123","_yield$this$rpcClient53","_callee123$","_context123","registerIpAndMakeDerivativeWithLicenseTokens","_x90","registerIpAndMakeDerivativeWithLicenseTokensEncode","_registerPilTermsAndAttach","_callee124","_yield$this$rpcClient54","_callee124$","_context124","registerPilTermsAndAttach","_x91","registerPilTermsAndAttachEncode","PIL_TYPE","getLicenseTermByType","term","licenseTerms","transferable","defaultMintingFee","BigInt","expiration","commercialUse","commercialAttribution","commercializerChecker","commercializerCheckerData","commercialRevShare","commercialRevCeiling","derivativesAllowed","derivativesAttribution","derivativesApproval","derivativesReciprocal","derivativeRevCeiling","uri","NON_COMMERCIAL_REMIX","COMMERCIAL_USE","royaltyPolicyLAPAddress","AddressZero","HashZero","defaultFunctionSelector","getPermissionSignature","_ref","param","permissionFunc","permissionFunction","accessAddress","nonce","signTypedData","map","item","domain","version","verifyingContract","types","Execute","primaryType","getDeadline","timestamp","Date","now","AccessPermission","_excluded","IPAssetClient","licensingModuleClient","ipAssetRegistryClient","licenseTemplateClient","licenseRegistryReadOnlyClient","licenseTokenReadOnlyClient","royaltyPolicyLAPClient","accessControllerClient","coreMetadataModuleClient","spgClient","generateCreatorMetadata","_param$description","description","_param$image","image","_param$socialMedia","socialMedia","contributionPercent","_param$role","role","generateIpMetadata","_param$title","title","_param$description2","_param$ipType","ipType","_param$relationships","relationships","_param$createdAt","createdAt","_param$watermarkImg","watermarkImg","_param$creators","creators","_param$media","media","_param$attributes","attributes","app","_param$tags","tags","robotTerms","additionalProperties","_request$ipMetadata","_request$ipMetadata2","_request$ipMetadata3","_request$ipMetadata4","_request$txOptions","ipIdAddress","object","_request$txOptions2","txHash","calculatedDeadline","getIpIdAddress","ipMetadataURI","ipMetadataHash","nftMetadataURI","txOptions","encodedTxDataOnly","encodedTxData","size","ALLOW","waitForTransaction","waitForTransactionReceipt","hash","t0","_request$txOptions3","isChildIpIdRegistered","parentId","isParentIpIdRegistered","isAttachedLicenseTerms","req","_request$txOptions4","t1","_request$txOptions5","licenseTokenId","tokenOwnerAddress","_request$txOptions6","_mintAndRegisterIpAssetWithPilTerms","_request$ipMetadata5","_request$ipMetadata6","_request$ipMetadata7","_request$ipMetadata8","_request$txOptions7","licenseTerm","_request$txOptions8","iPRegisteredLog","pilType","mintAndRegisterIpAssetWithPilTerms","_request$ipMetadata9","_request$ipMetadata10","_request$ipMetadata11","_request$ipMetadata12","_request$txOptions9","sigAttachSignature","sigMetadataSignature","_request$txOptions10","ipRegisterEvent","getSigSignatureState","_registerDerivativeIp","_request$ipMetadata13","_request$ipMetadata14","_request$ipMetadata15","_request$ipMetadata16","_request$txOptions11","sigRegisterSignature","_request$txOptions12","receipt","registerDerivativeIp","_request$ipMetadata17","_request$ipMetadata18","_request$ipMetadata19","_request$ipMetadata20","_request$txOptions13","_request$txOptions14","_getIpIdAddress","sigAttachState","licensingModuleLicenseTermsAttachedEvent","defaultLicenseTerms","PermissionClient","checkIsRegistered","success","_createSetPermissionSignature","ipAccountClient","_yield$ipAccountClien","createSetPermissionSignature","_createBatchPermissionSignature","_yield$ipAccountClien2","createBatchPermissionSignature","_checkIsRegistered","LicenseClient","licenseRegistryClient","piLicenseTemplateReadOnlyClient","royaltyModuleReadOnlyClient","_registerPILTerms","isWhitelistedArbitrationPolicy","verifyCommercialUse","verifyDerivatives","registerPILTerms","_registerNonComSocialRemixingPIL","registerNonComSocialRemixingPIL","_registerCommercialUsePIL","registerCommercialUsePIL","_registerCommercialRemixPIL","COMMERCIAL_REMIX","registerCommercialRemixPIL","isExisted","isLicenseIpIdRegistered","startLicenseTokenId","licenseRes","DisputeClient","disputeModuleClient","calldata","_arrayWithHoles","_iterableToArrayLimit","_nonIterableRest","_slicedToArray","IPAccountClient","_getIpAccountNonce","_yield$ipAccount$stat","getIpAccountNonce","_getToken","_yield$ipAccount$toke","_yield$ipAccount$toke2","getToken","RoyaltyClient","royaltyPolicyLapClient","royaltyModuleClient","proxyAddress","ipRoyaltyVault","getRoyaltyVaultAddress","royaltyVaultIpId","royaltyTokensCollected","isReceiverRegistered","isPayerRegistered","_claimRevenue","iPAccountExecuteResponse","claimableToken","claimRevenue","_getRoyaltyVaultAddress","isRoyaltyVaultIpIdRegistered","NftClient","_createNFTCollection","_request$maxSupply","_request$mintFee","_request$mintFeeToken","createNFTCollection","process","config","StoryClient","transport","clientConfig","get","_ipAsset","_permission","_license","_dispute","_ipAccount","_royalty","_nftClient","newClient","newClientUseWallet","newClientUseAccount"],"sources":["/Users/emmanasseri/Desktop/my-own-words/node_modules/@story-protocol/core-sdk/dist/story-protocol-core-sdk.esm.js"],"sourcesContent":["import { isAddress, checksumAddress, encodeFunctionData, decodeEventLog, zeroAddress, getAddress as getAddress$2, toFunctionSelector, keccak256, encodeAbiParameters, toHex, zeroHash, stringToHex, maxUint32, createPublicClient, createWalletClient } from 'viem';\nimport * as dotenv from 'dotenv';\nimport { defineChain } from 'viem/utils';\n\nfunction toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\n\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function () {};\n      return {\n        s: F,\n        n: function () {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function (e) {\n          throw e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function () {\n      it = it.call(o);\n    },\n    n: function () {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function (e) {\n      didErr = true;\n      err = e;\n    },\n    f: function () {\n      try {\n        if (!normalCompletion && it.return != null) it.return();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nfunction _regeneratorRuntime() {\n  _regeneratorRuntime = function () {\n    return e;\n  };\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function (t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == typeof h && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function (t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator.return && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(typeof e + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function (e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function () {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function (e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function (t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function (t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    catch: function (t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function (e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nvar iliad = defineChain({\n  id: 1513,\n  name: \"iliad\",\n  nativeCurrency: {\n    name: \"IP\",\n    symbol: \"IP\",\n    decimals: 18\n  },\n  rpcUrls: {\n    \"default\": {\n      http: [\"https://testnet.storyrpc.io\"],\n      webSocket: [\"wss://story-network.rpc.caldera.xyz/ws\"]\n    }\n  },\n  blockExplorers: {\n    \"default\": {\n      name: \"Explorer\",\n      url: \"https://testnet.storyscan.xyz\"\n    }\n  },\n  contracts: {\n    multicall3: {\n      address: \"0xcA11bde05977b3631167028862bE2a173976CA11\",\n      blockCreated: 5882\n    }\n  },\n  testnet: true\n});\n\nfunction chainStringToViemChain(chainId) {\n  switch (chainId) {\n    case \"1513\":\n    case \"iliad\":\n      return iliad;\n    default:\n      throw new Error(\"chainId \".concat(chainId, \" not supported\"));\n  }\n}\nvar chain = {\n  iliad: 1513n,\n  1513: 1513n\n};\nvar getAddress$1 = function getAddress(address, name, chainId) {\n  if (!isAddress(address, {\n    strict: false\n  })) {\n    throw Error(\"\".concat(name, \" address is invalid: \").concat(address, \", Address must be a hex value of 20 bytes (40 hex characters) and match its checksum counterpart.\"));\n  }\n  return checksumAddress(address, chainId);\n};\n\nfunction handleError(error, msg) {\n  if (error instanceof Error) {\n    throw new Error(\"\".concat(msg, \": \").concat(error.message));\n  }\n  throw new Error(\"\".concat(msg, \": Unknown error type\"));\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _isNativeReflectConstruct() {\n  try {\n    var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n  } catch (t) {}\n  return (_isNativeReflectConstruct = function () {\n    return !!t;\n  })();\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\n\nfunction _callSuper(t, o, e) {\n  return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e));\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// AccessController\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar accessControllerAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"moduleRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessController__BothCallerAndRecipientAreNotRegisteredModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__CallerIsNotIPAccountOrOwner\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessController__IPAccountIsNotValid\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__IPAccountIsZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"AccessController__PermissionDenied\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__PermissionIsNotValid\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__SignerIsZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ToAndFuncAreZeroAddressShouldCallSetAllPermissions\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ZeroIPAccountRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessController__ZeroModuleRegistry\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipAccountOwner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\",\n    indexed: false\n  }, {\n    name: \"permission\",\n    internalType: \"uint8\",\n    type: \"uint8\",\n    indexed: false\n  }],\n  name: \"PermissionSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MODULE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IModuleRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"checkPermission\",\n  outputs: [],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"getPermission\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"permission\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"setAllPermissions\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"permissions\",\n    internalType: \"struct AccessPermission.Permission[]\",\n    type: \"tuple[]\",\n    components: [{\n      name: \"ipAccount\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"to\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"func\",\n      internalType: \"bytes4\",\n      type: \"bytes4\"\n    }, {\n      name: \"permission\",\n      internalType: \"uint8\",\n      type: \"uint8\"\n    }]\n  }],\n  name: \"setBatchPermissions\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"func\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }, {\n    name: \"permission\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"setPermission\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar accessControllerAddress = {\n  1513: \"0x01d470c28822d3701Db6325333cEE9737524776E\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// CoreMetadataModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar coreMetadataModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"CoreMetadataModule__MetadataAlreadyFrozen\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"CoreMetadataModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"MetadataFrozen\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"metadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"MetadataURISet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"nftTokenURI\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"nftMetadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"NFTTokenURISet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"freezeMetadata\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isMetadataFrozen\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"pure\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"metadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"nftMetadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"setAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"metadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"setMetadataURI\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"nftMetadataHash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"updateNftTokenURI\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar coreMetadataModuleAddress = {\n  1513: \"0x290F414EA46b361ECFB6b430F98346CB593D02b9\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// DisputeModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar disputeModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAssetRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotAbleToResolve\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotAllowedToWhitelist\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotDerivative\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotDisputeInitiator\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotInDisputeState\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotRegisteredIpId\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotWhitelistedArbitrationPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotWhitelistedArbitrationRelayer\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__NotWhitelistedDisputeTag\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ParentDisputeNotResolved\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ParentIpIdMismatch\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ParentNotTagged\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroAccessController\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroArbitrationPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroArbitrationRelayer\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroDisputeTag\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroIPAssetRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"DisputeModule__ZeroLinkToDisputeEvidence\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"str\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"StringTooLong\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"ArbitrationPolicySet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"ArbitrationPolicyWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"arbitrationRelayer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"ArbitrationRelayerWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"DefaultArbitrationPolicyUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"derivativeIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"parentDisputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"DerivativeTaggedOnParentInfringement\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"DisputeCancelled\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"decision\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"DisputeJudgementSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"targetIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"disputeInitiator\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"linkToDisputeEvidence\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"targetTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"DisputeRaised\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"DisputeResolved\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"TagWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IN_DISPUTE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ASSET_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAssetRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"arbitrationPolicies\",\n  outputs: [{\n    name: \"policy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"baseArbitrationPolicy\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"cancelDispute\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"disputeCounter\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"disputes\",\n  outputs: [{\n    name: \"targetIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeInitiator\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"linkToDisputeEvidence\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"targetTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"currentTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"parentDisputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isIpTagged\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedArbitrationPolicy\",\n  outputs: [{\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbitrationRelayer\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedArbitrationRelayer\",\n  outputs: [{\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"isWhitelistedDisputeTag\",\n  outputs: [{\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"data\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  name: \"multicall\",\n  outputs: [{\n    name: \"results\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"targetIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"linkToDisputeEvidence\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"targetTag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"raiseDispute\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"resolveDispute\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setArbitrationPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setBaseArbitrationPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"disputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"decision\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"setDisputeJudgement\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"derivativeIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentDisputeId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tagDerivativeIfParentInfringed\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistArbitrationPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"arbitrationPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"arbPolicyRelayer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistArbitrationRelayer\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tag\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistDisputeTag\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar disputeModuleAddress = {\n  1513: \"0xDae11663438a0958E7075F604E3a5eEe77FD3878\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IPAccountImpl\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar ipAccountImplAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAssetRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"moduleRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FnSelectorNotRecognized\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__InvalidBatchLengths\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"module\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"IPAccountStorage__NotRegisteredModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__ZeroIpAssetRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountStorage__ZeroModuleRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__ExpiredSignature\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidCalldata\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidOperation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidSignature\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__InvalidSigner\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccount__ZeroAccessController\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"OperationNotSupported\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SelfOwnDetected\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"Unauthorized\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UpgradeFailed\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }, {\n    name: \"nonce\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }],\n  name: \"Executed\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }, {\n    name: \"nonce\",\n    internalType: \"bytes32\",\n    type: \"bytes32\",\n    indexed: false\n  }, {\n    name: \"deadline\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"signature\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"ExecutedWithSig\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"fallback\",\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ASSET_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MODULE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"bytes32Data\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"bytesData\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"eip712Domain\",\n  outputs: [{\n    name: \"fields\",\n    internalType: \"bytes1\",\n    type: \"bytes1\"\n  }, {\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"version\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"verifyingContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"salt\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"extensions\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"operation\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"execute\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"execute\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"calls\",\n    internalType: \"struct ERC6551.Call[]\",\n    type: \"tuple[]\",\n    components: [{\n      name: \"target\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"value\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"data\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"operation\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  name: \"executeBatch\",\n  outputs: [{\n    name: \"results\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"deadline\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"signature\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"executeWithSig\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespace\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespace\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes32\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"getBytes32\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespaces\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  name: \"getBytes32Batch\",\n  outputs: [{\n    name: \"values\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"namespaces\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  name: \"getBytesBatch\",\n  outputs: [{\n    name: \"values\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"hash\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"signature\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"isValidSignature\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"isValidSigner\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"signer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"isValidSigner\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"owner\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"value\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"setBytes\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"key\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }, {\n    name: \"value\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"setBytes32\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"values\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }],\n  name: \"setBytes32Batch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"keys\",\n    internalType: \"bytes32[]\",\n    type: \"bytes32[]\"\n  }, {\n    name: \"values\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  name: \"setBytesBatch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"state\",\n  outputs: [{\n    name: \"result\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"token\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"receive\",\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar ipAccountImplAddress = {\n  1513: \"0x8F763c16753e830a8020c80f9F0131Eb8Ef52879\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IPAssetRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar ipAssetRegistryAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"erc6551Registry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountImpl\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountRegistry_ZeroERC6551Registry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAccountRegistry_ZeroIpAccountImpl\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAssetRegistry__AlreadyRegistered\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"contractAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"IPAssetRegistry__InvalidToken\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"contractAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"IPAssetRegistry__UnsupportedIERC721\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"contractAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"IPAssetRegistry__UnsupportedIERC721Metadata\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IPAssetRegistry__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"length\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"StringsInsufficientHexLength\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"IPAccountRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"uri\",\n    internalType: \"string\",\n    type: \"string\",\n    indexed: false\n  }, {\n    name: \"registrationDate\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"IPRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ERC6551_PUBLIC_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_IMPL\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_SALT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getIPAccountImpl\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ipAccount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"chainId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ipId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"id\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isRegistered\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"chainid\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"register\",\n  outputs: [{\n    name: \"id\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar ipAssetRegistryAddress = {\n  1513: \"0xe34A78B3d658aF7ad69Ff1EFF9012ECa025a14Be\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// IpRoyaltyVaultImpl\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar ipRoyaltyVaultImplAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"royaltyPolicyLAP\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__AlreadyClaimed\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__ClaimerNotAnAncestor\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__IpGraphCallFailed\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__IpTagged\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__NotRoyaltyPolicyLAP\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__SnapshotIntervalTooShort\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"IpRoyaltyVault__ZeroRoyaltyPolicyLAP\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"Approval\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint8\",\n    type: \"uint8\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"claimer\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"RevenueTokenClaimed\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"royaltyTokensCollected\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"RoyaltyTokensCollected\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"id\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"Snapshot\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"snapshotTimestamp\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"unclaimedTokens\",\n    internalType: \"uint32\",\n    type: \"uint32\",\n    indexed: false\n  }],\n  name: \"SnapshotCompleted\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"Transfer\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_CONTRACT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_POLICY_LAP\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IRoyaltyPolicyLAP\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"addIpRoyaltyVaultTokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"allowance\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ancestorsVaultAmount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"balanceOfAt\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimRevenueBySnapshotBatch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"tokenList\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  name: \"claimRevenueByTokenBatch\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimVaultAmount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimableAtSnapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"claimableRevenue\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"_tokens\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  name: \"collectAccruedTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"collectRoyaltyTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"collectableAmount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"decimals\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint8\",\n    type: \"uint8\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"subtractedValue\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"decreaseAllowance\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"spender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"addedValue\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"increaseAllowance\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"symbol\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"supply\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }, {\n    name: \"unclaimedTokens\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }, {\n    name: \"ipIdAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ipId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"claimer\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isClaimedAtSnapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ancestorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isCollectedByAncestor\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"lastSnapshotTimestamp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"snapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"tokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"totalSupplyAt\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"transfer\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"snapshotId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"unclaimedAtSnapshot\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unclaimedRoyaltyTokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}];\n\n/**\n *\n */\nvar ipRoyaltyVaultImplAddress = {\n  1513: \"0xfb5b5B61c9a437E06Ba87367aaBf3766d091E3D1\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LicenseRegistry\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar licenseRegistryAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipGraphAcl\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }],\n  name: \"LicenseRegistry__AddParentIpToIPGraphFailed\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__CallerNotLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeAlreadyRegistered\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeIpAlreadyHasChild\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeIpAlreadyHasLicense\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__DerivativeIsParent\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__DuplicateLicense\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"length\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__IndexOutOfBounds\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__IpExpired\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__LicenseTermsAlreadyAttached\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__LicenseTermsNotExists\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__LicensorIpHasNoLicenseTerms\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__NotLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__ParentIpExpired\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseRegistry__ParentIpHasNoLicenseTerms\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__ParentIpTagged\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__ParentIpUnmatchedLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"newLicenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__UnmatchedLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseRegistry__UnregisteredLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroIPGraphACL\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseRegistry__ZeroLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__DerivativesCannotAddLicenseTerms\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicensingModule__LicenseTermsNotFound\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"DefaultLicenseTermsSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"expireTime\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"ExpirationTimeSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"LicenseTemplateRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }],\n    indexed: false\n  }],\n  name: \"LicensingConfigSetForIP\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"LicensingConfigSetForLicense\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"EXPIRATION_TIME\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_ACL\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IPGraphACL\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_CONTRACT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"attachLicenseTermsToIp\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"exists\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getAttachedLicenseTerms\",\n  outputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getAttachedLicenseTermsCount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getDefaultLicenseTerms\",\n  outputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getDerivativeIp\",\n  outputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getDerivativeIpCount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getExpireTime\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicensingConfig\",\n  outputs: [{\n    name: \"\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getParentIp\",\n  outputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getParentIpCount\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"hasDerivativeIps\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"hasIpAttachedLicenseTerms\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isDerivativeIp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isExpiredNow\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isParentIp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isRegisteredLicenseTemplate\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"isUsingLicenseToken\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"registerDerivativeIp\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"registerLicenseTemplate\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newLicenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"newLicenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"setDefaultLicenseTerms\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"setLicensingConfigForIp\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"setLicensingConfigForLicense\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"isMintedByIpOwner\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"verifyMintLicenseToken\",\n  outputs: [{\n    name: \"\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  stateMutability: \"view\"\n}];\n\n/**\n *\n */\nvar licenseRegistryAddress = {\n  1513: \"0xF542AF9a5A6E4A85a4f084D38B322516ec336097\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LicenseToken\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar licenseTokenAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC721EnumerableForbiddenBatchMint\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"sender\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721IncorrectOwner\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ERC721InsufficientApproval\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"approver\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidApprover\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidOperator\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidOwner\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidReceiver\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"sender\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC721InvalidSender\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ERC721NonexistentToken\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ERC721OutOfBoundsIndex\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"anotherLicenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseToken__AllLicenseTokensMustFromSameLicenseTemplate\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"childIpIp\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"actualTokenOwner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicenseToken__CallerAndChildIPNotTokenOwner\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseToken__CallerNotLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseToken__NotTransferable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicenseToken__RevokedLicense\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicenseToken__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"value\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"length\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"StringsInsufficientHexLength\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"approved\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"Approval\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"ApprovalForAll\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"_fromTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"_toTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"BatchMetadataUpdate\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"minter\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"LicenseTokenMinted\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }],\n  name: \"Transfer\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"approve\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"balanceOf\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"holder\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"burnLicenseTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getApproved\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTemplate\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTermsId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTokenMetadata\",\n  outputs: [{\n    name: \"\",\n    internalType: \"struct ILicenseToken.LicenseTokenMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"licensorIpId\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTemplate\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTermsId\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicensorIpId\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"imageUrl\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isApprovedForAll\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"isLicenseTokenRevoked\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"minter\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"mintLicenseTokens\",\n  outputs: [{\n    name: \"startLicenseTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"ownerOf\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"safeTransferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"operator\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"setApprovalForAll\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"url\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"setLicensingImageUrl\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"symbol\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tokenByIndex\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"index\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tokenOfOwnerByIndex\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"id\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"tokenURI\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalMintedTokens\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalSupply\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"from\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"to\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"transferFrom\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"validateLicenseTokensForDerivative\",\n  outputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensorIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\"\n}];\n\n/**\n *\n */\nvar licenseTokenAddress = {\n  1513: \"0xB31FE33De46A1FA5d4Ec669EDB049892E0A1EB4C\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// LicensingModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar licensingModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"moduleRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseToken\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__DisputedIpId\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"anotherRoyaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__IncompatibleRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicensingModule__InvalidLicenseTermsId\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"hook\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__InvalidLicensingHook\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__LicenseDenyMintLicenseToken\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"LicensingModule__LicenseNotCompatibleForDerivative\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipLength\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licenseTermsLength\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"LicensingModule__LicenseTermsLengthMismatch\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"LicensingModule__LicenseTokenNotCompatibleForDerivative\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__LicensorIpNotRegistered\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__MintAmountZero\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__NoLicenseToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__NoParentIp\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ReceiverZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroLicenseToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroModuleRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"LicensingModule__ZeroRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\",\n    indexed: false\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\",\n    indexed: false\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\",\n    indexed: false\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"DerivativeRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"LicenseTermsAttached\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"startLicenseTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"LicenseTokensMinted\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_NFT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseToken\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MODULE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IModuleRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract RoyaltyModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"attachLicenseTerms\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"receiver\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"mintLicenseTokens\",\n  outputs: [{\n    name: \"startLicenseTokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"registerDerivative\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"registerDerivativeWithLicenseTokens\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensingConfig\",\n    internalType: \"struct Licensing.LicensingConfig\",\n    type: \"tuple\",\n    components: [{\n      name: \"isSet\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"mintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"licensingHook\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"hookData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"setLicensingConfig\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar licensingModuleAddress = {\n  1513: \"0xf49da534215DA7b48E57A41d41dac25C912FCC60\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// PILicenseTemplate\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar piLicenseTemplateAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAccountRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"ipAccount\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessControlled__NotIpAccount\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"AccessControlled__ZeroAddress\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddAttribution\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddCommercializers\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddDerivativeRevCeiling\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddRevCeiling\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddRevShare\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialDisabled_CantAddRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CommercialEnabled_RoyaltyPolicyRequired\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"checker\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"PILicenseTemplate__CommercializerCheckerDoesNotSupportHook\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__CurrencyTokenNotWhitelisted\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddApproval\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddAttribution\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddDerivativeRevCeiling\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__DerivativesDisabled_CantAddReciprocal\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__RoyaltyPolicyNotWhitelisted\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__RoyaltyPolicyRequiresCurrencyToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"PILicenseTemplate__ZeroRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"DerivativeApproved\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: true\n  }, {\n    name: \"licenseTemplate\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }, {\n    name: \"licenseTerms\",\n    internalType: \"bytes\",\n    type: \"bytes\",\n    indexed: false\n  }],\n  name: \"LicenseTermsRegistered\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ACCOUNT_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAccountRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IRoyaltyModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"TERMS_RENDERER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract PILTermsRenderer\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"exists\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"start\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getEarlierExpireTime\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"start\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getExpireTime\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"selectedLicenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTerms\",\n  outputs: [{\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"getLicenseTermsId\",\n  outputs: [{\n    name: \"selectedLicenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getLicenseTermsURI\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getMetadataURI\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"getRoyaltyPolicy\",\n  outputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"mintingFee\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"currency\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"metadataURI\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isDerivativeApproved\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"isLicenseTransferable\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"registerLicenseTerms\",\n  outputs: [{\n    name: \"id\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"approved\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"setApproval\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"toJson\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"totalRegisteredLicenseTerms\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }],\n  name: \"verifyCompatibleLicenses\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensee\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensorIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"verifyMintLicenseToken\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licensee\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"verifyRegisterDerivative\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"childIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseTermsIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"childIpOwner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"verifyRegisterDerivativeForAllParents\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar piLicenseTemplateAddress = {\n  1513: \"0x8BB1ADE72E21090Fc891e1d4b88AC5E57b27cB31\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RoyaltyModule\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar royaltyModuleAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"disputeModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__CanOnlyMintSelectedPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__IncompatibleRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__IpIsExpired\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__IpIsTagged\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NoParentsOnLinking\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NoRoyaltyPolicySet\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NotAllowedCaller\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NotWhitelistedRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__NotWhitelistedRoyaltyToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroDisputeModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroLicenseRegistry\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroRoyaltyPolicy\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyModule__ZeroRoyaltyToken\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"payerAddress\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"LicenseMintingFeePaid\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"payerIpId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"sender\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"RoyaltyPaid\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"RoyaltyPolicyWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\",\n    indexed: false\n  }],\n  name: \"RoyaltyTokenWhitelistUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"DISPUTE_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IDisputeModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedRoyaltyPolicy\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"isWhitelistedRoyaltyToken\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLicenseMinting\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLinkToParents\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"payerAddress\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRoyaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"payLicenseMintingFee\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"receiverIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"payerIpId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"payRoyaltyOnBehalf\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"royaltyPolicies\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"interfaceId\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  name: \"supportsInterface\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"royaltyPolicy\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistRoyaltyPolicy\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"allowed\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  name: \"whitelistRoyaltyToken\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar royaltyModuleAddress = {\n  1513: \"0x968beb5432c362c12b5Be6967a5d6F1ED5A63F01\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// RoyaltyPolicyLAP\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar royaltyPolicyLapAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipGraphAcl\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressInsufficientBalance\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"EnforcedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ExpectedPause\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ReentrancyGuardReentrantCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__AboveAncestorsLimit\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__AboveParentLimit\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__AboveRoyaltyStackLimit\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__LastPositionNotAbleToMintLicense\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__NotRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__UnlinkableToParents\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroAccessManager\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroIPGraphACL\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroIpRoyaltyVaultBeacon\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroLicensingModule\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"RoyaltyPolicyLAP__ZeroRoyaltyModule\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"SafeERC20FailedOperation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"beacon\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"IpRoyaltyVaultBeaconSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Paused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"ipRoyaltyVault\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"royaltyStack\",\n    internalType: \"uint32\",\n    type: \"uint32\",\n    indexed: false\n  }],\n  name: \"PolicyInitialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }, {\n    name: \"vault\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"RevenueTokenAddedToVault\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"interval\",\n    internalType: \"uint256\",\n    type: \"uint256\",\n    indexed: false\n  }],\n  name: \"SnapshotIntervalSet\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"Unpaused\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_ACL\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IPGraphACL\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_GRAPH_CONTRACT\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MAX_ANCESTORS\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"MAX_PARENTS\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"TOTAL_RT_SUPPLY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"__ProtocolPausable_init\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getIpRoyaltyVaultBeacon\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"getRoyaltyData\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }, {\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"getSnapshotInterval\",\n  outputs: [{\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLicenseMinting\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"parentIpIds\",\n    internalType: \"address[]\",\n    type: \"address[]\"\n  }, {\n    name: \"licenseData\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }, {\n    name: \"externalData\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onLinkToParents\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"amount\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"onRoyaltyPayment\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"pause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"paused\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bool\",\n    type: \"bool\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"beacon\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setIpRoyaltyVaultBeacon\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"timestampInterval\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  name: \"setSnapshotInterval\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"unpause\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newVault\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"upgradeVaults\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}];\n\n/**\n *\n */\nvar royaltyPolicyLapAddress = {\n  1513: \"0x61A5c7570f5bDB118D65053Ba60DE87e050E664e\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SPG\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n/**\n *\n */\nvar spgAbi = [{\n  type: \"constructor\",\n  inputs: [{\n    name: \"accessController\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipAssetRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licensingModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseRegistry\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"royaltyModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"coreMetadataModule\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"pilTemplate\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseToken\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedInvalidAuthority\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"delay\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }],\n  name: \"AccessManagedRequiredDelay\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AccessManagedUnauthorized\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"target\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressEmptyCode\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"account\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"AddressInsufficientBalance\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"ERC1967InvalidImplementation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"ERC1967NonPayable\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"FailedInnerCall\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"InvalidInitialization\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"NotInitializing\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"caller\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"actualTokenOwner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"SPG__CallerAndNotTokenOwner\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SPG__CallerNotMinterRole\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SPG__EmptyLicenseTokens\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"SPG__ZeroAddressParam\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"token\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"SafeERC20FailedOperation\"\n}, {\n  type: \"error\",\n  inputs: [],\n  name: \"UUPSUnauthorizedCallContext\"\n}, {\n  type: \"error\",\n  inputs: [{\n    name: \"slot\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  name: \"UUPSUnsupportedProxiableUUID\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"authority\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: false\n  }],\n  name: \"AuthorityUpdated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"CollectionCreated\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"version\",\n    internalType: \"uint64\",\n    type: \"uint64\",\n    indexed: false\n  }],\n  name: \"Initialized\"\n}, {\n  type: \"event\",\n  anonymous: false,\n  inputs: [{\n    name: \"implementation\",\n    internalType: \"address\",\n    type: \"address\",\n    indexed: true\n  }],\n  name: \"Upgraded\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ACCESS_CONTROLLER\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IAccessController\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"CORE_METADATA_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ICoreMetadataModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"IP_ASSET_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IIPAssetRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_REGISTRY\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseRegistry\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSE_TOKEN\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicenseToken\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"LICENSING_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract ILicensingModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"PIL_TEMPLATE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IPILicenseTemplate\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"ROYALTY_MODULE\",\n  outputs: [{\n    name: \"\",\n    internalType: \"contract IRoyaltyModule\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"UPGRADE_INTERFACE_VERSION\",\n  outputs: [{\n    name: \"\",\n    internalType: \"string\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"authority\",\n  outputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"name\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"symbol\",\n    internalType: \"string\",\n    type: \"string\"\n  }, {\n    name: \"maxSupply\",\n    internalType: \"uint32\",\n    type: \"uint32\"\n  }, {\n    name: \"mintFee\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"mintFeeToken\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"owner\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"createCollection\",\n  outputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"accessManager\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"initialize\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"isConsumingScheduledOp\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }],\n  name: \"mintAndRegisterIp\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"mintAndRegisterIpAndAttachPILTerms\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"derivData\",\n    internalType: \"struct IStoryProtocolGateway.MakeDerivative\",\n    type: \"tuple\",\n    components: [{\n      name: \"parentIpIds\",\n      internalType: \"address[]\",\n      type: \"address[]\"\n    }, {\n      name: \"licenseTemplate\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTermsIds\",\n      internalType: \"uint256[]\",\n      type: \"uint256[]\"\n    }, {\n      name: \"royaltyContext\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"mintAndRegisterIpAndMakeDerivative\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"recipient\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"data\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  name: \"multicall\",\n  outputs: [{\n    name: \"results\",\n    internalType: \"bytes[]\",\n    type: \"bytes[]\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"onERC721Received\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes4\",\n    type: \"bytes4\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [],\n  name: \"proxiableUUID\",\n  outputs: [{\n    name: \"\",\n    internalType: \"bytes32\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIp\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"sigAttach\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIpAndAttachPILTerms\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"derivData\",\n    internalType: \"struct IStoryProtocolGateway.MakeDerivative\",\n    type: \"tuple\",\n    components: [{\n      name: \"parentIpIds\",\n      internalType: \"address[]\",\n      type: \"address[]\"\n    }, {\n      name: \"licenseTemplate\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"licenseTermsIds\",\n      internalType: \"uint256[]\",\n      type: \"uint256[]\"\n    }, {\n      name: \"royaltyContext\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"sigRegister\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIpAndMakeDerivative\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"nftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"tokenId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }, {\n    name: \"licenseTokenIds\",\n    internalType: \"uint256[]\",\n    type: \"uint256[]\"\n  }, {\n    name: \"royaltyContext\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }, {\n    name: \"ipMetadata\",\n    internalType: \"struct IStoryProtocolGateway.IPMetadata\",\n    type: \"tuple\",\n    components: [{\n      name: \"ipMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"ipMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }, {\n      name: \"nftMetadataURI\",\n      internalType: \"string\",\n      type: \"string\"\n    }, {\n      name: \"nftMetadataHash\",\n      internalType: \"bytes32\",\n      type: \"bytes32\"\n    }]\n  }, {\n    name: \"sigMetadata\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }, {\n    name: \"sigRegister\",\n    internalType: \"struct IStoryProtocolGateway.SignatureData\",\n    type: \"tuple\",\n    components: [{\n      name: \"signer\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"deadline\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"signature\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }]\n  }],\n  name: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n  outputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"ipId\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"terms\",\n    internalType: \"struct PILTerms\",\n    type: \"tuple\",\n    components: [{\n      name: \"transferable\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"royaltyPolicy\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"defaultMintingFee\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"expiration\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"commercialUse\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercialAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"commercializerChecker\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"commercializerCheckerData\",\n      internalType: \"bytes\",\n      type: \"bytes\"\n    }, {\n      name: \"commercialRevShare\",\n      internalType: \"uint32\",\n      type: \"uint32\"\n    }, {\n      name: \"commercialRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"derivativesAllowed\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesAttribution\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesApproval\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativesReciprocal\",\n      internalType: \"bool\",\n      type: \"bool\"\n    }, {\n      name: \"derivativeRevCeiling\",\n      internalType: \"uint256\",\n      type: \"uint256\"\n    }, {\n      name: \"currency\",\n      internalType: \"address\",\n      type: \"address\"\n    }, {\n      name: \"uri\",\n      internalType: \"string\",\n      type: \"string\"\n    }]\n  }],\n  name: \"registerPILTermsAndAttach\",\n  outputs: [{\n    name: \"licenseTermsId\",\n    internalType: \"uint256\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newAuthority\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setAuthority\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newNftContractBeacon\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"setNftContractBeacon\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newNftContract\",\n    internalType: \"address\",\n    type: \"address\"\n  }],\n  name: \"upgradeCollections\",\n  outputs: [],\n  stateMutability: \"nonpayable\"\n}, {\n  type: \"function\",\n  inputs: [{\n    name: \"newImplementation\",\n    internalType: \"address\",\n    type: \"address\"\n  }, {\n    name: \"data\",\n    internalType: \"bytes\",\n    type: \"bytes\"\n  }],\n  name: \"upgradeToAndCall\",\n  outputs: [],\n  stateMutability: \"payable\"\n}];\n\n/**\n *\n */\nvar spgAddress = {\n  1513: \"0x69415CE984A79a3Cfbe3F51024C63b6C107331e3\"\n};\n\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n// SDK\n//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n// COMMON =============================================================\n\nfunction getAddress(address, chainId) {\n  return address[chainId || 0] || \"0x\";\n}\n\n// Contract AccessController =============================================================\n\n/**\n * AccessControllerPermissionSetEvent\n *\n * @param ipAccountOwner address\n * @param ipAccount address\n * @param signer address\n * @param to address\n * @param func bytes4\n * @param permission uint8\n */\n\n/**\n * AccessControllerSetAllPermissionsRequest\n *\n * @param ipAccount address\n * @param signer address\n * @param permission uint8\n */\n\n/**\n * AccessControllerSetBatchPermissionsRequest\n *\n * @param permissions tuple[]\n */\n\n/**\n * AccessControllerSetPermissionRequest\n *\n * @param ipAccount address\n * @param signer address\n * @param to address\n * @param func bytes4\n * @param permission uint8\n */\n\n/**\n * contract AccessController event\n */\nvar AccessControllerEventClient = /*#__PURE__*/function () {\n  function AccessControllerEventClient(rpcClient, address) {\n    var _rpcClient$chain;\n    _classCallCheck(this, AccessControllerEventClient);\n    this.address = address || getAddress(accessControllerAddress, (_rpcClient$chain = rpcClient.chain) === null || _rpcClient$chain === void 0 ? void 0 : _rpcClient$chain.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event PermissionSet for contract AccessController\n   */\n  return _createClass(AccessControllerEventClient, [{\n    key: \"watchPermissionSetEvent\",\n    value: function watchPermissionSetEvent(_onLogs) {\n      return this.rpcClient.watchContractEvent({\n        abi: accessControllerAbi,\n        address: this.address,\n        eventName: \"PermissionSet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event PermissionSet for contract AccessController\n     */\n  }, {\n    key: \"parseTxPermissionSetEvent\",\n    value: function parseTxPermissionSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator = _createForOfIteratorHelper(txReceipt.logs),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var log = _step.value;\n          try {\n            var event = decodeEventLog({\n              abi: accessControllerAbi,\n              eventName: \"PermissionSet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"PermissionSet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract AccessController write method\n */\nvar AccessControllerClient = /*#__PURE__*/function (_AccessControllerEven) {\n  function AccessControllerClient(rpcClient, wallet, address) {\n    var _this;\n    _classCallCheck(this, AccessControllerClient);\n    _this = _callSuper(this, AccessControllerClient, [rpcClient, address]);\n    _this.wallet = wallet;\n    return _this;\n  }\n\n  /**\n   * method setAllPermissions for contract AccessController\n   *\n   * @param request AccessControllerSetAllPermissionsRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(AccessControllerClient, _AccessControllerEven);\n  return _createClass(AccessControllerClient, [{\n    key: \"setAllPermissions\",\n    value: (function () {\n      var _setAllPermissions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _yield$this$rpcClient, call;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: accessControllerAbi,\n                address: this.address,\n                functionName: \"setAllPermissions\",\n                account: this.wallet.account,\n                args: [request.ipAccount, request.signer, request.permission]\n              });\n            case 2:\n              _yield$this$rpcClient = _context.sent;\n              call = _yield$this$rpcClient.request;\n              _context.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context.abrupt(\"return\", _context.sent);\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this);\n      }));\n      function setAllPermissions(_x) {\n        return _setAllPermissions.apply(this, arguments);\n      }\n      return setAllPermissions;\n    }()\n    /**\n     * method setAllPermissions for contract AccessController with only encode\n     *\n     * @param request AccessControllerSetAllPermissionsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setAllPermissionsEncode\",\n    value: function setAllPermissionsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: accessControllerAbi,\n          functionName: \"setAllPermissions\",\n          args: [request.ipAccount, request.signer, request.permission]\n        })\n      };\n    }\n\n    /**\n     * method setBatchPermissions for contract AccessController\n     *\n     * @param request AccessControllerSetBatchPermissionsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setBatchPermissions\",\n    value: (function () {\n      var _setBatchPermissions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _yield$this$rpcClient2, call;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: accessControllerAbi,\n                address: this.address,\n                functionName: \"setBatchPermissions\",\n                account: this.wallet.account,\n                args: [request.permissions]\n              });\n            case 2:\n              _yield$this$rpcClient2 = _context2.sent;\n              call = _yield$this$rpcClient2.request;\n              _context2.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context2.abrupt(\"return\", _context2.sent);\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this);\n      }));\n      function setBatchPermissions(_x2) {\n        return _setBatchPermissions.apply(this, arguments);\n      }\n      return setBatchPermissions;\n    }()\n    /**\n     * method setBatchPermissions for contract AccessController with only encode\n     *\n     * @param request AccessControllerSetBatchPermissionsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setBatchPermissionsEncode\",\n    value: function setBatchPermissionsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: accessControllerAbi,\n          functionName: \"setBatchPermissions\",\n          args: [request.permissions]\n        })\n      };\n    }\n\n    /**\n     * method setPermission for contract AccessController\n     *\n     * @param request AccessControllerSetPermissionRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setPermission\",\n    value: (function () {\n      var _setPermission = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _yield$this$rpcClient3, call;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: accessControllerAbi,\n                address: this.address,\n                functionName: \"setPermission\",\n                account: this.wallet.account,\n                args: [request.ipAccount, request.signer, request.to, request.func, request.permission]\n              });\n            case 2:\n              _yield$this$rpcClient3 = _context3.sent;\n              call = _yield$this$rpcClient3.request;\n              _context3.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 7:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this);\n      }));\n      function setPermission(_x3) {\n        return _setPermission.apply(this, arguments);\n      }\n      return setPermission;\n    }()\n    /**\n     * method setPermission for contract AccessController with only encode\n     *\n     * @param request AccessControllerSetPermissionRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setPermissionEncode\",\n    value: function setPermissionEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: accessControllerAbi,\n          functionName: \"setPermission\",\n          args: [request.ipAccount, request.signer, request.to, request.func, request.permission]\n        })\n      };\n    }\n  }]);\n}(AccessControllerEventClient);\n\n// Contract CoreMetadataModule =============================================================\n\n/**\n * CoreMetadataModuleAuthorityUpdatedEvent\n *\n * @param authority address\n */\n\n/**\n * CoreMetadataModuleInitializedEvent\n *\n * @param version uint64\n */\n\n/**\n * CoreMetadataModuleMetadataFrozenEvent\n *\n * @param ipId address\n */\n\n/**\n * CoreMetadataModuleMetadataUriSetEvent\n *\n * @param ipId address\n * @param metadataURI string\n * @param metadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleNftTokenUriSetEvent\n *\n * @param ipId address\n * @param nftTokenURI string\n * @param nftMetadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleUpgradedEvent\n *\n * @param implementation address\n */\n\n/**\n * CoreMetadataModuleIsMetadataFrozenRequest\n *\n * @param ipId address\n */\n\n/**\n * CoreMetadataModuleSupportsInterfaceRequest\n *\n * @param interfaceId bytes4\n */\n\n/**\n * CoreMetadataModuleFreezeMetadataRequest\n *\n * @param ipId address\n */\n\n/**\n * CoreMetadataModuleInitializeRequest\n *\n * @param accessManager address\n */\n\n/**\n * CoreMetadataModuleSetAllRequest\n *\n * @param ipId address\n * @param metadataURI string\n * @param metadataHash bytes32\n * @param nftMetadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleSetAuthorityRequest\n *\n * @param newAuthority address\n */\n\n/**\n * CoreMetadataModuleSetMetadataUriRequest\n *\n * @param ipId address\n * @param metadataURI string\n * @param metadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleUpdateNftTokenUriRequest\n *\n * @param ipId address\n * @param nftMetadataHash bytes32\n */\n\n/**\n * CoreMetadataModuleUpgradeToAndCallRequest\n *\n * @param newImplementation address\n * @param data bytes\n */\n\n/**\n * contract CoreMetadataModule event\n */\nvar CoreMetadataModuleEventClient = /*#__PURE__*/function () {\n  function CoreMetadataModuleEventClient(rpcClient, address) {\n    var _rpcClient$chain2;\n    _classCallCheck(this, CoreMetadataModuleEventClient);\n    this.address = address || getAddress(coreMetadataModuleAddress, (_rpcClient$chain2 = rpcClient.chain) === null || _rpcClient$chain2 === void 0 ? void 0 : _rpcClient$chain2.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event AuthorityUpdated for contract CoreMetadataModule\n   */\n  return _createClass(CoreMetadataModuleEventClient, [{\n    key: \"watchAuthorityUpdatedEvent\",\n    value: function watchAuthorityUpdatedEvent(_onLogs2) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"AuthorityUpdated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs2(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event AuthorityUpdated for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxAuthorityUpdatedEvent\",\n    value: function parseTxAuthorityUpdatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator2 = _createForOfIteratorHelper(txReceipt.logs),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var log = _step2.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"AuthorityUpdated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"AuthorityUpdated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Initialized for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchInitializedEvent\",\n    value: function watchInitializedEvent(_onLogs3) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"Initialized\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs3(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Initialized for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxInitializedEvent\",\n    value: function parseTxInitializedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator3 = _createForOfIteratorHelper(txReceipt.logs),\n        _step3;\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var log = _step3.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"Initialized\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Initialized\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event MetadataFrozen for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchMetadataFrozenEvent\",\n    value: function watchMetadataFrozenEvent(_onLogs4) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"MetadataFrozen\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs4(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event MetadataFrozen for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxMetadataFrozenEvent\",\n    value: function parseTxMetadataFrozenEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator4 = _createForOfIteratorHelper(txReceipt.logs),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var log = _step4.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"MetadataFrozen\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"MetadataFrozen\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event MetadataURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchMetadataUriSetEvent\",\n    value: function watchMetadataUriSetEvent(_onLogs5) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"MetadataURISet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs5(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event MetadataURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxMetadataUriSetEvent\",\n    value: function parseTxMetadataUriSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator5 = _createForOfIteratorHelper(txReceipt.logs),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var log = _step5.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"MetadataURISet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"MetadataURISet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event NFTTokenURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchNftTokenUriSetEvent\",\n    value: function watchNftTokenUriSetEvent(_onLogs6) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"NFTTokenURISet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs6(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event NFTTokenURISet for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxNftTokenUriSetEvent\",\n    value: function parseTxNftTokenUriSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator6 = _createForOfIteratorHelper(txReceipt.logs),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var log = _step6.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"NFTTokenURISet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"NFTTokenURISet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Upgraded for contract CoreMetadataModule\n     */\n  }, {\n    key: \"watchUpgradedEvent\",\n    value: function watchUpgradedEvent(_onLogs7) {\n      return this.rpcClient.watchContractEvent({\n        abi: coreMetadataModuleAbi,\n        address: this.address,\n        eventName: \"Upgraded\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs7(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Upgraded for contract CoreMetadataModule\n     */\n  }, {\n    key: \"parseTxUpgradedEvent\",\n    value: function parseTxUpgradedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator7 = _createForOfIteratorHelper(txReceipt.logs),\n        _step7;\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var log = _step7.value;\n          try {\n            var event = decodeEventLog({\n              abi: coreMetadataModuleAbi,\n              eventName: \"Upgraded\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Upgraded\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract CoreMetadataModule readonly method\n */\nvar CoreMetadataModuleReadOnlyClient = /*#__PURE__*/function (_CoreMetadataModuleEv) {\n  function CoreMetadataModuleReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, CoreMetadataModuleReadOnlyClient);\n    return _callSuper(this, CoreMetadataModuleReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method ACCESS_CONTROLLER for contract CoreMetadataModule\n   *\n   * @param request CoreMetadataModuleAccessControllerRequest\n   * @return Promise<CoreMetadataModuleAccessControllerResponse>\n   */\n  _inherits(CoreMetadataModuleReadOnlyClient, _CoreMetadataModuleEv);\n  return _createClass(CoreMetadataModuleReadOnlyClient, [{\n    key: \"accessController\",\n    value: (function () {\n      var _accessController = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"ACCESS_CONTROLLER\"\n              });\n            case 2:\n              return _context4.abrupt(\"return\", _context4.sent);\n            case 3:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this);\n      }));\n      function accessController() {\n        return _accessController.apply(this, arguments);\n      }\n      return accessController;\n    }()\n    /**\n     * method IP_ACCOUNT_REGISTRY for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleIpAccountRegistryRequest\n     * @return Promise<CoreMetadataModuleIpAccountRegistryResponse>\n     */\n    )\n  }, {\n    key: \"ipAccountRegistry\",\n    value: (function () {\n      var _ipAccountRegistry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"IP_ACCOUNT_REGISTRY\"\n              });\n            case 2:\n              return _context5.abrupt(\"return\", _context5.sent);\n            case 3:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this);\n      }));\n      function ipAccountRegistry() {\n        return _ipAccountRegistry.apply(this, arguments);\n      }\n      return ipAccountRegistry;\n    }()\n    /**\n     * method UPGRADE_INTERFACE_VERSION for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleUpgradeInterfaceVersionRequest\n     * @return Promise<CoreMetadataModuleUpgradeInterfaceVersionResponse>\n     */\n    )\n  }, {\n    key: \"upgradeInterfaceVersion\",\n    value: (function () {\n      var _upgradeInterfaceVersion = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6() {\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"UPGRADE_INTERFACE_VERSION\"\n              });\n            case 2:\n              return _context6.abrupt(\"return\", _context6.sent);\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function upgradeInterfaceVersion() {\n        return _upgradeInterfaceVersion.apply(this, arguments);\n      }\n      return upgradeInterfaceVersion;\n    }()\n    /**\n     * method authority for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleAuthorityRequest\n     * @return Promise<CoreMetadataModuleAuthorityResponse>\n     */\n    )\n  }, {\n    key: \"authority\",\n    value: (function () {\n      var _authority = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7() {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"authority\"\n              });\n            case 2:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 3:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this);\n      }));\n      function authority() {\n        return _authority.apply(this, arguments);\n      }\n      return authority;\n    }()\n    /**\n     * method isConsumingScheduledOp for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleIsConsumingScheduledOpRequest\n     * @return Promise<CoreMetadataModuleIsConsumingScheduledOpResponse>\n     */\n    )\n  }, {\n    key: \"isConsumingScheduledOp\",\n    value: (function () {\n      var _isConsumingScheduledOp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"isConsumingScheduledOp\"\n              });\n            case 2:\n              return _context8.abrupt(\"return\", _context8.sent);\n            case 3:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function isConsumingScheduledOp() {\n        return _isConsumingScheduledOp.apply(this, arguments);\n      }\n      return isConsumingScheduledOp;\n    }()\n    /**\n     * method isMetadataFrozen for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleIsMetadataFrozenRequest\n     * @return Promise<CoreMetadataModuleIsMetadataFrozenResponse>\n     */\n    )\n  }, {\n    key: \"isMetadataFrozen\",\n    value: (function () {\n      var _isMetadataFrozen = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(request) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"isMetadataFrozen\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context9.abrupt(\"return\", _context9.sent);\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function isMetadataFrozen(_x4) {\n        return _isMetadataFrozen.apply(this, arguments);\n      }\n      return isMetadataFrozen;\n    }()\n    /**\n     * method name for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleNameRequest\n     * @return Promise<CoreMetadataModuleNameResponse>\n     */\n    )\n  }, {\n    key: \"name\",\n    value: (function () {\n      var _name = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10() {\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              _context10.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"name\"\n              });\n            case 2:\n              return _context10.abrupt(\"return\", _context10.sent);\n            case 3:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function name() {\n        return _name.apply(this, arguments);\n      }\n      return name;\n    }()\n    /**\n     * method proxiableUUID for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleProxiableUuidRequest\n     * @return Promise<CoreMetadataModuleProxiableUuidResponse>\n     */\n    )\n  }, {\n    key: \"proxiableUuid\",\n    value: (function () {\n      var _proxiableUuid = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee11() {\n        return _regeneratorRuntime().wrap(function _callee11$(_context11) {\n          while (1) switch (_context11.prev = _context11.next) {\n            case 0:\n              _context11.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"proxiableUUID\"\n              });\n            case 2:\n              return _context11.abrupt(\"return\", _context11.sent);\n            case 3:\n            case \"end\":\n              return _context11.stop();\n          }\n        }, _callee11, this);\n      }));\n      function proxiableUuid() {\n        return _proxiableUuid.apply(this, arguments);\n      }\n      return proxiableUuid;\n    }()\n    /**\n     * method supportsInterface for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSupportsInterfaceRequest\n     * @return Promise<CoreMetadataModuleSupportsInterfaceResponse>\n     */\n    )\n  }, {\n    key: \"supportsInterface\",\n    value: (function () {\n      var _supportsInterface = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee12(request) {\n        return _regeneratorRuntime().wrap(function _callee12$(_context12) {\n          while (1) switch (_context12.prev = _context12.next) {\n            case 0:\n              _context12.next = 2;\n              return this.rpcClient.readContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"supportsInterface\",\n                args: [request.interfaceId]\n              });\n            case 2:\n              return _context12.abrupt(\"return\", _context12.sent);\n            case 3:\n            case \"end\":\n              return _context12.stop();\n          }\n        }, _callee12, this);\n      }));\n      function supportsInterface(_x5) {\n        return _supportsInterface.apply(this, arguments);\n      }\n      return supportsInterface;\n    }())\n  }]);\n}(CoreMetadataModuleEventClient);\n\n/**\n * contract CoreMetadataModule write method\n */\nvar CoreMetadataModuleClient = /*#__PURE__*/function (_CoreMetadataModuleRe) {\n  function CoreMetadataModuleClient(rpcClient, wallet, address) {\n    var _this2;\n    _classCallCheck(this, CoreMetadataModuleClient);\n    _this2 = _callSuper(this, CoreMetadataModuleClient, [rpcClient, address]);\n    _this2.wallet = wallet;\n    return _this2;\n  }\n\n  /**\n   * method freezeMetadata for contract CoreMetadataModule\n   *\n   * @param request CoreMetadataModuleFreezeMetadataRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(CoreMetadataModuleClient, _CoreMetadataModuleRe);\n  return _createClass(CoreMetadataModuleClient, [{\n    key: \"freezeMetadata\",\n    value: (function () {\n      var _freezeMetadata = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee13(request) {\n        var _yield$this$rpcClient4, call;\n        return _regeneratorRuntime().wrap(function _callee13$(_context13) {\n          while (1) switch (_context13.prev = _context13.next) {\n            case 0:\n              _context13.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"freezeMetadata\",\n                account: this.wallet.account,\n                args: [request.ipId]\n              });\n            case 2:\n              _yield$this$rpcClient4 = _context13.sent;\n              call = _yield$this$rpcClient4.request;\n              _context13.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context13.abrupt(\"return\", _context13.sent);\n            case 7:\n            case \"end\":\n              return _context13.stop();\n          }\n        }, _callee13, this);\n      }));\n      function freezeMetadata(_x6) {\n        return _freezeMetadata.apply(this, arguments);\n      }\n      return freezeMetadata;\n    }()\n    /**\n     * method freezeMetadata for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleFreezeMetadataRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"freezeMetadataEncode\",\n    value: function freezeMetadataEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"freezeMetadata\",\n          args: [request.ipId]\n        })\n      };\n    }\n\n    /**\n     * method initialize for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleInitializeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"initialize\",\n    value: (function () {\n      var _initialize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee14(request) {\n        var _yield$this$rpcClient5, call;\n        return _regeneratorRuntime().wrap(function _callee14$(_context14) {\n          while (1) switch (_context14.prev = _context14.next) {\n            case 0:\n              _context14.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"initialize\",\n                account: this.wallet.account,\n                args: [request.accessManager]\n              });\n            case 2:\n              _yield$this$rpcClient5 = _context14.sent;\n              call = _yield$this$rpcClient5.request;\n              _context14.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context14.abrupt(\"return\", _context14.sent);\n            case 7:\n            case \"end\":\n              return _context14.stop();\n          }\n        }, _callee14, this);\n      }));\n      function initialize(_x7) {\n        return _initialize.apply(this, arguments);\n      }\n      return initialize;\n    }()\n    /**\n     * method initialize for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleInitializeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"initializeEncode\",\n    value: function initializeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"initialize\",\n          args: [request.accessManager]\n        })\n      };\n    }\n\n    /**\n     * method setAll for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSetAllRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setAll\",\n    value: (function () {\n      var _setAll = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee15(request) {\n        var _yield$this$rpcClient6, call;\n        return _regeneratorRuntime().wrap(function _callee15$(_context15) {\n          while (1) switch (_context15.prev = _context15.next) {\n            case 0:\n              _context15.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"setAll\",\n                account: this.wallet.account,\n                args: [request.ipId, request.metadataURI, request.metadataHash, request.nftMetadataHash]\n              });\n            case 2:\n              _yield$this$rpcClient6 = _context15.sent;\n              call = _yield$this$rpcClient6.request;\n              _context15.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context15.abrupt(\"return\", _context15.sent);\n            case 7:\n            case \"end\":\n              return _context15.stop();\n          }\n        }, _callee15, this);\n      }));\n      function setAll(_x8) {\n        return _setAll.apply(this, arguments);\n      }\n      return setAll;\n    }()\n    /**\n     * method setAll for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleSetAllRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setAllEncode\",\n    value: function setAllEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"setAll\",\n          args: [request.ipId, request.metadataURI, request.metadataHash, request.nftMetadataHash]\n        })\n      };\n    }\n\n    /**\n     * method setAuthority for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSetAuthorityRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setAuthority\",\n    value: (function () {\n      var _setAuthority = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee16(request) {\n        var _yield$this$rpcClient7, call;\n        return _regeneratorRuntime().wrap(function _callee16$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _context16.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"setAuthority\",\n                account: this.wallet.account,\n                args: [request.newAuthority]\n              });\n            case 2:\n              _yield$this$rpcClient7 = _context16.sent;\n              call = _yield$this$rpcClient7.request;\n              _context16.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context16.abrupt(\"return\", _context16.sent);\n            case 7:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee16, this);\n      }));\n      function setAuthority(_x9) {\n        return _setAuthority.apply(this, arguments);\n      }\n      return setAuthority;\n    }()\n    /**\n     * method setAuthority for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleSetAuthorityRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setAuthorityEncode\",\n    value: function setAuthorityEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"setAuthority\",\n          args: [request.newAuthority]\n        })\n      };\n    }\n\n    /**\n     * method setMetadataURI for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleSetMetadataUriRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setMetadataUri\",\n    value: (function () {\n      var _setMetadataUri = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee17(request) {\n        var _yield$this$rpcClient8, call;\n        return _regeneratorRuntime().wrap(function _callee17$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              _context17.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"setMetadataURI\",\n                account: this.wallet.account,\n                args: [request.ipId, request.metadataURI, request.metadataHash]\n              });\n            case 2:\n              _yield$this$rpcClient8 = _context17.sent;\n              call = _yield$this$rpcClient8.request;\n              _context17.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context17.abrupt(\"return\", _context17.sent);\n            case 7:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee17, this);\n      }));\n      function setMetadataUri(_x10) {\n        return _setMetadataUri.apply(this, arguments);\n      }\n      return setMetadataUri;\n    }()\n    /**\n     * method setMetadataURI for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleSetMetadataUriRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setMetadataUriEncode\",\n    value: function setMetadataUriEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"setMetadataURI\",\n          args: [request.ipId, request.metadataURI, request.metadataHash]\n        })\n      };\n    }\n\n    /**\n     * method updateNftTokenURI for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleUpdateNftTokenUriRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"updateNftTokenUri\",\n    value: (function () {\n      var _updateNftTokenUri = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee18(request) {\n        var _yield$this$rpcClient9, call;\n        return _regeneratorRuntime().wrap(function _callee18$(_context18) {\n          while (1) switch (_context18.prev = _context18.next) {\n            case 0:\n              _context18.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"updateNftTokenURI\",\n                account: this.wallet.account,\n                args: [request.ipId, request.nftMetadataHash]\n              });\n            case 2:\n              _yield$this$rpcClient9 = _context18.sent;\n              call = _yield$this$rpcClient9.request;\n              _context18.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context18.abrupt(\"return\", _context18.sent);\n            case 7:\n            case \"end\":\n              return _context18.stop();\n          }\n        }, _callee18, this);\n      }));\n      function updateNftTokenUri(_x11) {\n        return _updateNftTokenUri.apply(this, arguments);\n      }\n      return updateNftTokenUri;\n    }()\n    /**\n     * method updateNftTokenURI for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleUpdateNftTokenUriRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"updateNftTokenUriEncode\",\n    value: function updateNftTokenUriEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"updateNftTokenURI\",\n          args: [request.ipId, request.nftMetadataHash]\n        })\n      };\n    }\n\n    /**\n     * method upgradeToAndCall for contract CoreMetadataModule\n     *\n     * @param request CoreMetadataModuleUpgradeToAndCallRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"upgradeToAndCall\",\n    value: (function () {\n      var _upgradeToAndCall = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee19(request) {\n        var _yield$this$rpcClient10, call;\n        return _regeneratorRuntime().wrap(function _callee19$(_context19) {\n          while (1) switch (_context19.prev = _context19.next) {\n            case 0:\n              _context19.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: coreMetadataModuleAbi,\n                address: this.address,\n                functionName: \"upgradeToAndCall\",\n                account: this.wallet.account,\n                args: [request.newImplementation, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient10 = _context19.sent;\n              call = _yield$this$rpcClient10.request;\n              _context19.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context19.abrupt(\"return\", _context19.sent);\n            case 7:\n            case \"end\":\n              return _context19.stop();\n          }\n        }, _callee19, this);\n      }));\n      function upgradeToAndCall(_x12) {\n        return _upgradeToAndCall.apply(this, arguments);\n      }\n      return upgradeToAndCall;\n    }()\n    /**\n     * method upgradeToAndCall for contract CoreMetadataModule with only encode\n     *\n     * @param request CoreMetadataModuleUpgradeToAndCallRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"upgradeToAndCallEncode\",\n    value: function upgradeToAndCallEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: coreMetadataModuleAbi,\n          functionName: \"upgradeToAndCall\",\n          args: [request.newImplementation, request.data]\n        })\n      };\n    }\n  }]);\n}(CoreMetadataModuleReadOnlyClient);\n\n// Contract DisputeModule =============================================================\n\n/**\n * DisputeModuleDisputeCancelledEvent\n *\n * @param disputeId uint256\n * @param data bytes\n */\n\n/**\n * DisputeModuleDisputeRaisedEvent\n *\n * @param disputeId uint256\n * @param targetIpId address\n * @param disputeInitiator address\n * @param arbitrationPolicy address\n * @param linkToDisputeEvidence bytes32\n * @param targetTag bytes32\n * @param data bytes\n */\n\n/**\n * DisputeModuleDisputeResolvedEvent\n *\n * @param disputeId uint256\n */\n\n/**\n * DisputeModuleCancelDisputeRequest\n *\n * @param disputeId uint256\n * @param data bytes\n */\n\n/**\n * DisputeModuleRaiseDisputeRequest\n *\n * @param targetIpId address\n * @param linkToDisputeEvidence string\n * @param targetTag bytes32\n * @param data bytes\n */\n\n/**\n * DisputeModuleResolveDisputeRequest\n *\n * @param disputeId uint256\n * @param data bytes\n */\n\n/**\n * contract DisputeModule event\n */\nvar DisputeModuleEventClient = /*#__PURE__*/function () {\n  function DisputeModuleEventClient(rpcClient, address) {\n    var _rpcClient$chain3;\n    _classCallCheck(this, DisputeModuleEventClient);\n    this.address = address || getAddress(disputeModuleAddress, (_rpcClient$chain3 = rpcClient.chain) === null || _rpcClient$chain3 === void 0 ? void 0 : _rpcClient$chain3.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event DisputeCancelled for contract DisputeModule\n   */\n  return _createClass(DisputeModuleEventClient, [{\n    key: \"watchDisputeCancelledEvent\",\n    value: function watchDisputeCancelledEvent(_onLogs8) {\n      return this.rpcClient.watchContractEvent({\n        abi: disputeModuleAbi,\n        address: this.address,\n        eventName: \"DisputeCancelled\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs8(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DisputeCancelled for contract DisputeModule\n     */\n  }, {\n    key: \"parseTxDisputeCancelledEvent\",\n    value: function parseTxDisputeCancelledEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator8 = _createForOfIteratorHelper(txReceipt.logs),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var log = _step8.value;\n          try {\n            var event = decodeEventLog({\n              abi: disputeModuleAbi,\n              eventName: \"DisputeCancelled\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DisputeCancelled\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DisputeRaised for contract DisputeModule\n     */\n  }, {\n    key: \"watchDisputeRaisedEvent\",\n    value: function watchDisputeRaisedEvent(_onLogs9) {\n      return this.rpcClient.watchContractEvent({\n        abi: disputeModuleAbi,\n        address: this.address,\n        eventName: \"DisputeRaised\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs9(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DisputeRaised for contract DisputeModule\n     */\n  }, {\n    key: \"parseTxDisputeRaisedEvent\",\n    value: function parseTxDisputeRaisedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator9 = _createForOfIteratorHelper(txReceipt.logs),\n        _step9;\n      try {\n        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n          var log = _step9.value;\n          try {\n            var event = decodeEventLog({\n              abi: disputeModuleAbi,\n              eventName: \"DisputeRaised\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DisputeRaised\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator9.e(err);\n      } finally {\n        _iterator9.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DisputeResolved for contract DisputeModule\n     */\n  }, {\n    key: \"watchDisputeResolvedEvent\",\n    value: function watchDisputeResolvedEvent(_onLogs10) {\n      return this.rpcClient.watchContractEvent({\n        abi: disputeModuleAbi,\n        address: this.address,\n        eventName: \"DisputeResolved\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs10(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DisputeResolved for contract DisputeModule\n     */\n  }, {\n    key: \"parseTxDisputeResolvedEvent\",\n    value: function parseTxDisputeResolvedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator10 = _createForOfIteratorHelper(txReceipt.logs),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var log = _step10.value;\n          try {\n            var event = decodeEventLog({\n              abi: disputeModuleAbi,\n              eventName: \"DisputeResolved\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DisputeResolved\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract DisputeModule write method\n */\nvar DisputeModuleClient = /*#__PURE__*/function (_DisputeModuleEventCl) {\n  function DisputeModuleClient(rpcClient, wallet, address) {\n    var _this3;\n    _classCallCheck(this, DisputeModuleClient);\n    _this3 = _callSuper(this, DisputeModuleClient, [rpcClient, address]);\n    _this3.wallet = wallet;\n    return _this3;\n  }\n\n  /**\n   * method cancelDispute for contract DisputeModule\n   *\n   * @param request DisputeModuleCancelDisputeRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(DisputeModuleClient, _DisputeModuleEventCl);\n  return _createClass(DisputeModuleClient, [{\n    key: \"cancelDispute\",\n    value: (function () {\n      var _cancelDispute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee20(request) {\n        var _yield$this$rpcClient11, call;\n        return _regeneratorRuntime().wrap(function _callee20$(_context20) {\n          while (1) switch (_context20.prev = _context20.next) {\n            case 0:\n              _context20.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: disputeModuleAbi,\n                address: this.address,\n                functionName: \"cancelDispute\",\n                account: this.wallet.account,\n                args: [request.disputeId, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient11 = _context20.sent;\n              call = _yield$this$rpcClient11.request;\n              _context20.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context20.abrupt(\"return\", _context20.sent);\n            case 7:\n            case \"end\":\n              return _context20.stop();\n          }\n        }, _callee20, this);\n      }));\n      function cancelDispute(_x13) {\n        return _cancelDispute.apply(this, arguments);\n      }\n      return cancelDispute;\n    }()\n    /**\n     * method cancelDispute for contract DisputeModule with only encode\n     *\n     * @param request DisputeModuleCancelDisputeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"cancelDisputeEncode\",\n    value: function cancelDisputeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: disputeModuleAbi,\n          functionName: \"cancelDispute\",\n          args: [request.disputeId, request.data]\n        })\n      };\n    }\n\n    /**\n     * method raiseDispute for contract DisputeModule\n     *\n     * @param request DisputeModuleRaiseDisputeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"raiseDispute\",\n    value: (function () {\n      var _raiseDispute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee21(request) {\n        var _yield$this$rpcClient12, call;\n        return _regeneratorRuntime().wrap(function _callee21$(_context21) {\n          while (1) switch (_context21.prev = _context21.next) {\n            case 0:\n              _context21.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: disputeModuleAbi,\n                address: this.address,\n                functionName: \"raiseDispute\",\n                account: this.wallet.account,\n                args: [request.targetIpId, request.linkToDisputeEvidence, request.targetTag, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient12 = _context21.sent;\n              call = _yield$this$rpcClient12.request;\n              _context21.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context21.abrupt(\"return\", _context21.sent);\n            case 7:\n            case \"end\":\n              return _context21.stop();\n          }\n        }, _callee21, this);\n      }));\n      function raiseDispute(_x14) {\n        return _raiseDispute.apply(this, arguments);\n      }\n      return raiseDispute;\n    }()\n    /**\n     * method raiseDispute for contract DisputeModule with only encode\n     *\n     * @param request DisputeModuleRaiseDisputeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"raiseDisputeEncode\",\n    value: function raiseDisputeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: disputeModuleAbi,\n          functionName: \"raiseDispute\",\n          args: [request.targetIpId, request.linkToDisputeEvidence, request.targetTag, request.data]\n        })\n      };\n    }\n\n    /**\n     * method resolveDispute for contract DisputeModule\n     *\n     * @param request DisputeModuleResolveDisputeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"resolveDispute\",\n    value: (function () {\n      var _resolveDispute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee22(request) {\n        var _yield$this$rpcClient13, call;\n        return _regeneratorRuntime().wrap(function _callee22$(_context22) {\n          while (1) switch (_context22.prev = _context22.next) {\n            case 0:\n              _context22.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: disputeModuleAbi,\n                address: this.address,\n                functionName: \"resolveDispute\",\n                account: this.wallet.account,\n                args: [request.disputeId, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient13 = _context22.sent;\n              call = _yield$this$rpcClient13.request;\n              _context22.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context22.abrupt(\"return\", _context22.sent);\n            case 7:\n            case \"end\":\n              return _context22.stop();\n          }\n        }, _callee22, this);\n      }));\n      function resolveDispute(_x15) {\n        return _resolveDispute.apply(this, arguments);\n      }\n      return resolveDispute;\n    }()\n    /**\n     * method resolveDispute for contract DisputeModule with only encode\n     *\n     * @param request DisputeModuleResolveDisputeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"resolveDisputeEncode\",\n    value: function resolveDisputeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: disputeModuleAbi,\n          functionName: \"resolveDispute\",\n          args: [request.disputeId, request.data]\n        })\n      };\n    }\n  }]);\n}(DisputeModuleEventClient);\n\n// Contract IPAccountImpl =============================================================\n\n/**\n * IpAccountImplStateResponse\n *\n * @param result bytes32\n */\n\n/**\n * IpAccountImplTokenResponse\n *\n * @param 0 uint256\n * @param 1 address\n * @param 2 uint256\n */\n\n/**\n * IpAccountImplExecuteRequest\n *\n * @param to address\n * @param value uint256\n * @param data bytes\n * @param operation uint8\n */\n\n/**\n * IpAccountImplExecute2Request\n *\n * @param to address\n * @param value uint256\n * @param data bytes\n */\n\n/**\n * IpAccountImplExecuteWithSigRequest\n *\n * @param to address\n * @param value uint256\n * @param data bytes\n * @param signer address\n * @param deadline uint256\n * @param signature bytes\n */\n\n/**\n * contract IPAccountImpl readonly method\n */\nvar IpAccountImplReadOnlyClient = /*#__PURE__*/function () {\n  function IpAccountImplReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain4;\n    _classCallCheck(this, IpAccountImplReadOnlyClient);\n    this.address = address || getAddress(ipAccountImplAddress, (_rpcClient$chain4 = rpcClient.chain) === null || _rpcClient$chain4 === void 0 ? void 0 : _rpcClient$chain4.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method state for contract IPAccountImpl\n   *\n   * @param request IpAccountImplStateRequest\n   * @return Promise<IpAccountImplStateResponse>\n   */\n  return _createClass(IpAccountImplReadOnlyClient, [{\n    key: \"state\",\n    value: (function () {\n      var _state = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee23() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee23$(_context23) {\n          while (1) switch (_context23.prev = _context23.next) {\n            case 0:\n              _context23.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"state\"\n              });\n            case 2:\n              result = _context23.sent;\n              return _context23.abrupt(\"return\", {\n                result: result\n              });\n            case 4:\n            case \"end\":\n              return _context23.stop();\n          }\n        }, _callee23, this);\n      }));\n      function state() {\n        return _state.apply(this, arguments);\n      }\n      return state;\n    }()\n    /**\n     * method token for contract IPAccountImpl\n     *\n     * @param request IpAccountImplTokenRequest\n     * @return Promise<IpAccountImplTokenResponse>\n     */\n    )\n  }, {\n    key: \"token\",\n    value: (function () {\n      var _token = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee24() {\n        return _regeneratorRuntime().wrap(function _callee24$(_context24) {\n          while (1) switch (_context24.prev = _context24.next) {\n            case 0:\n              _context24.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"token\"\n              });\n            case 2:\n              return _context24.abrupt(\"return\", _context24.sent);\n            case 3:\n            case \"end\":\n              return _context24.stop();\n          }\n        }, _callee24, this);\n      }));\n      function token() {\n        return _token.apply(this, arguments);\n      }\n      return token;\n    }())\n  }]);\n}();\n\n/**\n * contract IPAccountImpl write method\n */\nvar IpAccountImplClient = /*#__PURE__*/function (_IpAccountImplReadOnl) {\n  function IpAccountImplClient(rpcClient, wallet, address) {\n    var _this4;\n    _classCallCheck(this, IpAccountImplClient);\n    _this4 = _callSuper(this, IpAccountImplClient, [rpcClient, address]);\n    _this4.wallet = wallet;\n    return _this4;\n  }\n\n  /**\n   * method execute for contract IPAccountImpl\n   *\n   * @param request IpAccountImplExecuteRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(IpAccountImplClient, _IpAccountImplReadOnl);\n  return _createClass(IpAccountImplClient, [{\n    key: \"execute\",\n    value: (function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee25(request) {\n        var _yield$this$rpcClient14, call;\n        return _regeneratorRuntime().wrap(function _callee25$(_context25) {\n          while (1) switch (_context25.prev = _context25.next) {\n            case 0:\n              _context25.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"execute\",\n                account: this.wallet.account,\n                args: [request.to, request.value, request.data, request.operation]\n              });\n            case 2:\n              _yield$this$rpcClient14 = _context25.sent;\n              call = _yield$this$rpcClient14.request;\n              _context25.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context25.abrupt(\"return\", _context25.sent);\n            case 7:\n            case \"end\":\n              return _context25.stop();\n          }\n        }, _callee25, this);\n      }));\n      function execute(_x16) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /**\n     * method execute for contract IPAccountImpl with only encode\n     *\n     * @param request IpAccountImplExecuteRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"executeEncode\",\n    value: function executeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAccountImplAbi,\n          functionName: \"execute\",\n          args: [request.to, request.value, request.data, request.operation]\n        })\n      };\n    }\n\n    /**\n     * method execute for contract IPAccountImpl\n     *\n     * @param request IpAccountImplExecute2Request\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"execute2\",\n    value: (function () {\n      var _execute2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee26(request) {\n        var _yield$this$rpcClient15, call;\n        return _regeneratorRuntime().wrap(function _callee26$(_context26) {\n          while (1) switch (_context26.prev = _context26.next) {\n            case 0:\n              _context26.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"execute\",\n                account: this.wallet.account,\n                args: [request.to, request.value, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient15 = _context26.sent;\n              call = _yield$this$rpcClient15.request;\n              _context26.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context26.abrupt(\"return\", _context26.sent);\n            case 7:\n            case \"end\":\n              return _context26.stop();\n          }\n        }, _callee26, this);\n      }));\n      function execute2(_x17) {\n        return _execute2.apply(this, arguments);\n      }\n      return execute2;\n    }()\n    /**\n     * method execute for contract IPAccountImpl with only encode\n     *\n     * @param request IpAccountImplExecute2Request\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"execute2Encode\",\n    value: function execute2Encode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAccountImplAbi,\n          functionName: \"execute\",\n          args: [request.to, request.value, request.data]\n        })\n      };\n    }\n\n    /**\n     * method executeWithSig for contract IPAccountImpl\n     *\n     * @param request IpAccountImplExecuteWithSigRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"executeWithSig\",\n    value: (function () {\n      var _executeWithSig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee27(request) {\n        var _yield$this$rpcClient16, call;\n        return _regeneratorRuntime().wrap(function _callee27$(_context27) {\n          while (1) switch (_context27.prev = _context27.next) {\n            case 0:\n              _context27.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAccountImplAbi,\n                address: this.address,\n                functionName: \"executeWithSig\",\n                account: this.wallet.account,\n                args: [request.to, request.value, request.data, request.signer, request.deadline, request.signature]\n              });\n            case 2:\n              _yield$this$rpcClient16 = _context27.sent;\n              call = _yield$this$rpcClient16.request;\n              _context27.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context27.abrupt(\"return\", _context27.sent);\n            case 7:\n            case \"end\":\n              return _context27.stop();\n          }\n        }, _callee27, this);\n      }));\n      function executeWithSig(_x18) {\n        return _executeWithSig.apply(this, arguments);\n      }\n      return executeWithSig;\n    }()\n    /**\n     * method executeWithSig for contract IPAccountImpl with only encode\n     *\n     * @param request IpAccountImplExecuteWithSigRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"executeWithSigEncode\",\n    value: function executeWithSigEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAccountImplAbi,\n          functionName: \"executeWithSig\",\n          args: [request.to, request.value, request.data, request.signer, request.deadline, request.signature]\n        })\n      };\n    }\n  }]);\n}(IpAccountImplReadOnlyClient);\n\n// Contract IPAssetRegistry =============================================================\n\n/**\n * IpAssetRegistryIpAccountRegisteredEvent\n *\n * @param account address\n * @param implementation address\n * @param chainId uint256\n * @param tokenContract address\n * @param tokenId uint256\n */\n\n/**\n * IpAssetRegistryIpRegisteredEvent\n *\n * @param ipId address\n * @param chainId uint256\n * @param tokenContract address\n * @param tokenId uint256\n * @param name string\n * @param uri string\n * @param registrationDate uint256\n */\n\n/**\n * IpAssetRegistryIpIdRequest\n *\n * @param chainId uint256\n * @param tokenContract address\n * @param tokenId uint256\n */\n\n/**\n * IpAssetRegistryIsRegisteredRequest\n *\n * @param id address\n */\n\n/**\n * IpAssetRegistryRegisterRequest\n *\n * @param chainid uint256\n * @param tokenContract address\n * @param tokenId uint256\n */\n\n/**\n * contract IPAssetRegistry event\n */\nvar IpAssetRegistryEventClient = /*#__PURE__*/function () {\n  function IpAssetRegistryEventClient(rpcClient, address) {\n    var _rpcClient$chain5;\n    _classCallCheck(this, IpAssetRegistryEventClient);\n    this.address = address || getAddress(ipAssetRegistryAddress, (_rpcClient$chain5 = rpcClient.chain) === null || _rpcClient$chain5 === void 0 ? void 0 : _rpcClient$chain5.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event IPAccountRegistered for contract IPAssetRegistry\n   */\n  return _createClass(IpAssetRegistryEventClient, [{\n    key: \"watchIpAccountRegisteredEvent\",\n    value: function watchIpAccountRegisteredEvent(_onLogs11) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipAssetRegistryAbi,\n        address: this.address,\n        eventName: \"IPAccountRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs11(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event IPAccountRegistered for contract IPAssetRegistry\n     */\n  }, {\n    key: \"parseTxIpAccountRegisteredEvent\",\n    value: function parseTxIpAccountRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator11 = _createForOfIteratorHelper(txReceipt.logs),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var log = _step11.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipAssetRegistryAbi,\n              eventName: \"IPAccountRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"IPAccountRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event IPRegistered for contract IPAssetRegistry\n     */\n  }, {\n    key: \"watchIpRegisteredEvent\",\n    value: function watchIpRegisteredEvent(_onLogs12) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipAssetRegistryAbi,\n        address: this.address,\n        eventName: \"IPRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs12(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event IPRegistered for contract IPAssetRegistry\n     */\n  }, {\n    key: \"parseTxIpRegisteredEvent\",\n    value: function parseTxIpRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator12 = _createForOfIteratorHelper(txReceipt.logs),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var log = _step12.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipAssetRegistryAbi,\n              eventName: \"IPRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"IPRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract IPAssetRegistry readonly method\n */\nvar IpAssetRegistryReadOnlyClient = /*#__PURE__*/function (_IpAssetRegistryEvent) {\n  function IpAssetRegistryReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, IpAssetRegistryReadOnlyClient);\n    return _callSuper(this, IpAssetRegistryReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method ipId for contract IPAssetRegistry\n   *\n   * @param request IpAssetRegistryIpIdRequest\n   * @return Promise<IpAssetRegistryIpIdResponse>\n   */\n  _inherits(IpAssetRegistryReadOnlyClient, _IpAssetRegistryEvent);\n  return _createClass(IpAssetRegistryReadOnlyClient, [{\n    key: \"ipId\",\n    value: (function () {\n      var _ipId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee28(request) {\n        return _regeneratorRuntime().wrap(function _callee28$(_context28) {\n          while (1) switch (_context28.prev = _context28.next) {\n            case 0:\n              _context28.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAssetRegistryAbi,\n                address: this.address,\n                functionName: \"ipId\",\n                args: [request.chainId, request.tokenContract, request.tokenId]\n              });\n            case 2:\n              return _context28.abrupt(\"return\", _context28.sent);\n            case 3:\n            case \"end\":\n              return _context28.stop();\n          }\n        }, _callee28, this);\n      }));\n      function ipId(_x19) {\n        return _ipId.apply(this, arguments);\n      }\n      return ipId;\n    }()\n    /**\n     * method isRegistered for contract IPAssetRegistry\n     *\n     * @param request IpAssetRegistryIsRegisteredRequest\n     * @return Promise<IpAssetRegistryIsRegisteredResponse>\n     */\n    )\n  }, {\n    key: \"isRegistered\",\n    value: (function () {\n      var _isRegistered = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee29(request) {\n        return _regeneratorRuntime().wrap(function _callee29$(_context29) {\n          while (1) switch (_context29.prev = _context29.next) {\n            case 0:\n              _context29.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipAssetRegistryAbi,\n                address: this.address,\n                functionName: \"isRegistered\",\n                args: [request.id]\n              });\n            case 2:\n              return _context29.abrupt(\"return\", _context29.sent);\n            case 3:\n            case \"end\":\n              return _context29.stop();\n          }\n        }, _callee29, this);\n      }));\n      function isRegistered(_x20) {\n        return _isRegistered.apply(this, arguments);\n      }\n      return isRegistered;\n    }())\n  }]);\n}(IpAssetRegistryEventClient);\n\n/**\n * contract IPAssetRegistry write method\n */\nvar IpAssetRegistryClient = /*#__PURE__*/function (_IpAssetRegistryReadO) {\n  function IpAssetRegistryClient(rpcClient, wallet, address) {\n    var _this5;\n    _classCallCheck(this, IpAssetRegistryClient);\n    _this5 = _callSuper(this, IpAssetRegistryClient, [rpcClient, address]);\n    _this5.wallet = wallet;\n    return _this5;\n  }\n\n  /**\n   * method register for contract IPAssetRegistry\n   *\n   * @param request IpAssetRegistryRegisterRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(IpAssetRegistryClient, _IpAssetRegistryReadO);\n  return _createClass(IpAssetRegistryClient, [{\n    key: \"register\",\n    value: (function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee30(request) {\n        var _yield$this$rpcClient17, call;\n        return _regeneratorRuntime().wrap(function _callee30$(_context30) {\n          while (1) switch (_context30.prev = _context30.next) {\n            case 0:\n              _context30.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipAssetRegistryAbi,\n                address: this.address,\n                functionName: \"register\",\n                account: this.wallet.account,\n                args: [request.chainid, request.tokenContract, request.tokenId]\n              });\n            case 2:\n              _yield$this$rpcClient17 = _context30.sent;\n              call = _yield$this$rpcClient17.request;\n              _context30.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context30.abrupt(\"return\", _context30.sent);\n            case 7:\n            case \"end\":\n              return _context30.stop();\n          }\n        }, _callee30, this);\n      }));\n      function register(_x21) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n    /**\n     * method register for contract IPAssetRegistry with only encode\n     *\n     * @param request IpAssetRegistryRegisterRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerEncode\",\n    value: function registerEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipAssetRegistryAbi,\n          functionName: \"register\",\n          args: [request.chainid, request.tokenContract, request.tokenId]\n        })\n      };\n    }\n  }]);\n}(IpAssetRegistryReadOnlyClient);\n\n// Contract IpRoyaltyVaultImpl =============================================================\n\n/**\n * IpRoyaltyVaultImplRevenueTokenClaimedEvent\n *\n * @param claimer address\n * @param token address\n * @param amount uint256\n */\n\n/**\n * IpRoyaltyVaultImplRoyaltyTokensCollectedEvent\n *\n * @param ancestorIpId address\n * @param royaltyTokensCollected uint256\n */\n\n/**\n * IpRoyaltyVaultImplSnapshotCompletedEvent\n *\n * @param snapshotId uint256\n * @param snapshotTimestamp uint256\n * @param unclaimedTokens uint32\n */\n\n/**\n * IpRoyaltyVaultImplClaimableRevenueRequest\n *\n * @param account address\n * @param snapshotId uint256\n * @param token address\n */\n\n/**\n * IpRoyaltyVaultImplClaimRevenueBySnapshotBatchRequest\n *\n * @param snapshotIds uint256[]\n * @param token address\n */\n\n/**\n * IpRoyaltyVaultImplClaimRevenueByTokenBatchRequest\n *\n * @param snapshotId uint256\n * @param tokenList address[]\n */\n\n/**\n * IpRoyaltyVaultImplCollectRoyaltyTokensRequest\n *\n * @param ancestorIpId address\n */\n\n/**\n * contract IpRoyaltyVaultImpl event\n */\nvar IpRoyaltyVaultImplEventClient = /*#__PURE__*/function () {\n  function IpRoyaltyVaultImplEventClient(rpcClient, address) {\n    var _rpcClient$chain6;\n    _classCallCheck(this, IpRoyaltyVaultImplEventClient);\n    this.address = address || getAddress(ipRoyaltyVaultImplAddress, (_rpcClient$chain6 = rpcClient.chain) === null || _rpcClient$chain6 === void 0 ? void 0 : _rpcClient$chain6.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event RevenueTokenClaimed for contract IpRoyaltyVaultImpl\n   */\n  return _createClass(IpRoyaltyVaultImplEventClient, [{\n    key: \"watchRevenueTokenClaimedEvent\",\n    value: function watchRevenueTokenClaimedEvent(_onLogs13) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipRoyaltyVaultImplAbi,\n        address: this.address,\n        eventName: \"RevenueTokenClaimed\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs13(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event RevenueTokenClaimed for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"parseTxRevenueTokenClaimedEvent\",\n    value: function parseTxRevenueTokenClaimedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator13 = _createForOfIteratorHelper(txReceipt.logs),\n        _step13;\n      try {\n        for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n          var log = _step13.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipRoyaltyVaultImplAbi,\n              eventName: \"RevenueTokenClaimed\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"RevenueTokenClaimed\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator13.e(err);\n      } finally {\n        _iterator13.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event RoyaltyTokensCollected for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"watchRoyaltyTokensCollectedEvent\",\n    value: function watchRoyaltyTokensCollectedEvent(_onLogs14) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipRoyaltyVaultImplAbi,\n        address: this.address,\n        eventName: \"RoyaltyTokensCollected\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs14(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event RoyaltyTokensCollected for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"parseTxRoyaltyTokensCollectedEvent\",\n    value: function parseTxRoyaltyTokensCollectedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator14 = _createForOfIteratorHelper(txReceipt.logs),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var log = _step14.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipRoyaltyVaultImplAbi,\n              eventName: \"RoyaltyTokensCollected\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"RoyaltyTokensCollected\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event SnapshotCompleted for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"watchSnapshotCompletedEvent\",\n    value: function watchSnapshotCompletedEvent(_onLogs15) {\n      return this.rpcClient.watchContractEvent({\n        abi: ipRoyaltyVaultImplAbi,\n        address: this.address,\n        eventName: \"SnapshotCompleted\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs15(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event SnapshotCompleted for contract IpRoyaltyVaultImpl\n     */\n  }, {\n    key: \"parseTxSnapshotCompletedEvent\",\n    value: function parseTxSnapshotCompletedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator15 = _createForOfIteratorHelper(txReceipt.logs),\n        _step15;\n      try {\n        for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n          var log = _step15.value;\n          try {\n            var event = decodeEventLog({\n              abi: ipRoyaltyVaultImplAbi,\n              eventName: \"SnapshotCompleted\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"SnapshotCompleted\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator15.e(err);\n      } finally {\n        _iterator15.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract IpRoyaltyVaultImpl readonly method\n */\nvar IpRoyaltyVaultImplReadOnlyClient = /*#__PURE__*/function (_IpRoyaltyVaultImplEv) {\n  function IpRoyaltyVaultImplReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, IpRoyaltyVaultImplReadOnlyClient);\n    return _callSuper(this, IpRoyaltyVaultImplReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method claimableRevenue for contract IpRoyaltyVaultImpl\n   *\n   * @param request IpRoyaltyVaultImplClaimableRevenueRequest\n   * @return Promise<IpRoyaltyVaultImplClaimableRevenueResponse>\n   */\n  _inherits(IpRoyaltyVaultImplReadOnlyClient, _IpRoyaltyVaultImplEv);\n  return _createClass(IpRoyaltyVaultImplReadOnlyClient, [{\n    key: \"claimableRevenue\",\n    value: (function () {\n      var _claimableRevenue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee31(request) {\n        return _regeneratorRuntime().wrap(function _callee31$(_context31) {\n          while (1) switch (_context31.prev = _context31.next) {\n            case 0:\n              _context31.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"claimableRevenue\",\n                args: [request.account, request.snapshotId, request.token]\n              });\n            case 2:\n              return _context31.abrupt(\"return\", _context31.sent);\n            case 3:\n            case \"end\":\n              return _context31.stop();\n          }\n        }, _callee31, this);\n      }));\n      function claimableRevenue(_x22) {\n        return _claimableRevenue.apply(this, arguments);\n      }\n      return claimableRevenue;\n    }()\n    /**\n     * method ipId for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplIpIdRequest\n     * @return Promise<IpRoyaltyVaultImplIpIdResponse>\n     */\n    )\n  }, {\n    key: \"ipId\",\n    value: (function () {\n      var _ipId2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee32() {\n        return _regeneratorRuntime().wrap(function _callee32$(_context32) {\n          while (1) switch (_context32.prev = _context32.next) {\n            case 0:\n              _context32.next = 2;\n              return this.rpcClient.readContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"ipId\"\n              });\n            case 2:\n              return _context32.abrupt(\"return\", _context32.sent);\n            case 3:\n            case \"end\":\n              return _context32.stop();\n          }\n        }, _callee32, this);\n      }));\n      function ipId() {\n        return _ipId2.apply(this, arguments);\n      }\n      return ipId;\n    }())\n  }]);\n}(IpRoyaltyVaultImplEventClient);\n\n/**\n * contract IpRoyaltyVaultImpl write method\n */\nvar IpRoyaltyVaultImplClient = /*#__PURE__*/function (_IpRoyaltyVaultImplRe) {\n  function IpRoyaltyVaultImplClient(rpcClient, wallet, address) {\n    var _this6;\n    _classCallCheck(this, IpRoyaltyVaultImplClient);\n    _this6 = _callSuper(this, IpRoyaltyVaultImplClient, [rpcClient, address]);\n    _this6.wallet = wallet;\n    return _this6;\n  }\n\n  /**\n   * method claimRevenueBySnapshotBatch for contract IpRoyaltyVaultImpl\n   *\n   * @param request IpRoyaltyVaultImplClaimRevenueBySnapshotBatchRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(IpRoyaltyVaultImplClient, _IpRoyaltyVaultImplRe);\n  return _createClass(IpRoyaltyVaultImplClient, [{\n    key: \"claimRevenueBySnapshotBatch\",\n    value: (function () {\n      var _claimRevenueBySnapshotBatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee33(request) {\n        var _yield$this$rpcClient18, call;\n        return _regeneratorRuntime().wrap(function _callee33$(_context33) {\n          while (1) switch (_context33.prev = _context33.next) {\n            case 0:\n              _context33.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"claimRevenueBySnapshotBatch\",\n                account: this.wallet.account,\n                args: [request.snapshotIds, request.token]\n              });\n            case 2:\n              _yield$this$rpcClient18 = _context33.sent;\n              call = _yield$this$rpcClient18.request;\n              _context33.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context33.abrupt(\"return\", _context33.sent);\n            case 7:\n            case \"end\":\n              return _context33.stop();\n          }\n        }, _callee33, this);\n      }));\n      function claimRevenueBySnapshotBatch(_x23) {\n        return _claimRevenueBySnapshotBatch.apply(this, arguments);\n      }\n      return claimRevenueBySnapshotBatch;\n    }()\n    /**\n     * method claimRevenueBySnapshotBatch for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplClaimRevenueBySnapshotBatchRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"claimRevenueBySnapshotBatchEncode\",\n    value: function claimRevenueBySnapshotBatchEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"claimRevenueBySnapshotBatch\",\n          args: [request.snapshotIds, request.token]\n        })\n      };\n    }\n\n    /**\n     * method claimRevenueByTokenBatch for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplClaimRevenueByTokenBatchRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"claimRevenueByTokenBatch\",\n    value: (function () {\n      var _claimRevenueByTokenBatch = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee34(request) {\n        var _yield$this$rpcClient19, call;\n        return _regeneratorRuntime().wrap(function _callee34$(_context34) {\n          while (1) switch (_context34.prev = _context34.next) {\n            case 0:\n              _context34.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"claimRevenueByTokenBatch\",\n                account: this.wallet.account,\n                args: [request.snapshotId, request.tokenList]\n              });\n            case 2:\n              _yield$this$rpcClient19 = _context34.sent;\n              call = _yield$this$rpcClient19.request;\n              _context34.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context34.abrupt(\"return\", _context34.sent);\n            case 7:\n            case \"end\":\n              return _context34.stop();\n          }\n        }, _callee34, this);\n      }));\n      function claimRevenueByTokenBatch(_x24) {\n        return _claimRevenueByTokenBatch.apply(this, arguments);\n      }\n      return claimRevenueByTokenBatch;\n    }()\n    /**\n     * method claimRevenueByTokenBatch for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplClaimRevenueByTokenBatchRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"claimRevenueByTokenBatchEncode\",\n    value: function claimRevenueByTokenBatchEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"claimRevenueByTokenBatch\",\n          args: [request.snapshotId, request.tokenList]\n        })\n      };\n    }\n\n    /**\n     * method collectRoyaltyTokens for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplCollectRoyaltyTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"collectRoyaltyTokens\",\n    value: (function () {\n      var _collectRoyaltyTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee35(request) {\n        var _yield$this$rpcClient20, call;\n        return _regeneratorRuntime().wrap(function _callee35$(_context35) {\n          while (1) switch (_context35.prev = _context35.next) {\n            case 0:\n              _context35.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"collectRoyaltyTokens\",\n                account: this.wallet.account,\n                args: [request.ancestorIpId]\n              });\n            case 2:\n              _yield$this$rpcClient20 = _context35.sent;\n              call = _yield$this$rpcClient20.request;\n              _context35.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context35.abrupt(\"return\", _context35.sent);\n            case 7:\n            case \"end\":\n              return _context35.stop();\n          }\n        }, _callee35, this);\n      }));\n      function collectRoyaltyTokens(_x25) {\n        return _collectRoyaltyTokens.apply(this, arguments);\n      }\n      return collectRoyaltyTokens;\n    }()\n    /**\n     * method collectRoyaltyTokens for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplCollectRoyaltyTokensRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"collectRoyaltyTokensEncode\",\n    value: function collectRoyaltyTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"collectRoyaltyTokens\",\n          args: [request.ancestorIpId]\n        })\n      };\n    }\n\n    /**\n     * method snapshot for contract IpRoyaltyVaultImpl\n     *\n     * @param request IpRoyaltyVaultImplSnapshotRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"snapshot\",\n    value: (function () {\n      var _snapshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee36() {\n        var _yield$this$rpcClient21, call;\n        return _regeneratorRuntime().wrap(function _callee36$(_context36) {\n          while (1) switch (_context36.prev = _context36.next) {\n            case 0:\n              _context36.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: ipRoyaltyVaultImplAbi,\n                address: this.address,\n                functionName: \"snapshot\",\n                account: this.wallet.account\n              });\n            case 2:\n              _yield$this$rpcClient21 = _context36.sent;\n              call = _yield$this$rpcClient21.request;\n              _context36.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context36.abrupt(\"return\", _context36.sent);\n            case 7:\n            case \"end\":\n              return _context36.stop();\n          }\n        }, _callee36, this);\n      }));\n      function snapshot() {\n        return _snapshot.apply(this, arguments);\n      }\n      return snapshot;\n    }()\n    /**\n     * method snapshot for contract IpRoyaltyVaultImpl with only encode\n     *\n     * @param request IpRoyaltyVaultImplSnapshotRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"snapshotEncode\",\n    value: function snapshotEncode() {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: ipRoyaltyVaultImplAbi,\n          functionName: \"snapshot\"\n        })\n      };\n    }\n  }]);\n}(IpRoyaltyVaultImplReadOnlyClient);\n\n// Contract LicenseRegistry =============================================================\n\n/**\n * LicenseRegistryAuthorityUpdatedEvent\n *\n * @param authority address\n */\n\n/**\n * LicenseRegistryDefaultLicenseTermsSetEvent\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryExpirationTimeSetEvent\n *\n * @param ipId address\n * @param expireTime uint256\n */\n\n/**\n * LicenseRegistryInitializedEvent\n *\n * @param version uint64\n */\n\n/**\n * LicenseRegistryLicenseTemplateRegisteredEvent\n *\n * @param licenseTemplate address\n */\n\n/**\n * LicenseRegistryLicensingConfigSetForIpEvent\n *\n * @param ipId address\n * @param licensingConfig tuple\n */\n\n/**\n * LicenseRegistryLicensingConfigSetForLicenseEvent\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryUpgradedEvent\n *\n * @param implementation address\n */\n\n/**\n * LicenseRegistryExistsRequest\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetAttachedLicenseTermsRequest\n *\n * @param ipId address\n * @param index uint256\n */\n\n/**\n * LicenseRegistryGetAttachedLicenseTermsResponse\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetAttachedLicenseTermsCountRequest\n *\n * @param ipId address\n */\n\n/**\n * LicenseRegistryGetDefaultLicenseTermsResponse\n *\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetDerivativeIpRequest\n *\n * @param parentIpId address\n * @param index uint256\n */\n\n/**\n * LicenseRegistryGetDerivativeIpResponse\n *\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryGetDerivativeIpCountRequest\n *\n * @param parentIpId address\n */\n\n/**\n * LicenseRegistryGetExpireTimeRequest\n *\n * @param ipId address\n */\n\n/**\n * LicenseRegistryGetLicensingConfigRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryGetParentIpRequest\n *\n * @param childIpId address\n * @param index uint256\n */\n\n/**\n * LicenseRegistryGetParentIpResponse\n *\n * @param parentIpId address\n */\n\n/**\n * LicenseRegistryGetParentIpCountRequest\n *\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryHasDerivativeIpsRequest\n *\n * @param parentIpId address\n */\n\n/**\n * LicenseRegistryHasIpAttachedLicenseTermsRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryIsDerivativeIpRequest\n *\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryIsExpiredNowRequest\n *\n * @param ipId address\n */\n\n/**\n * LicenseRegistryIsParentIpRequest\n *\n * @param parentIpId address\n * @param childIpId address\n */\n\n/**\n * LicenseRegistryIsRegisteredLicenseTemplateRequest\n *\n * @param licenseTemplate address\n */\n\n/**\n * LicenseRegistryVerifyMintLicenseTokenRequest\n *\n * @param licensorIpId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param isMintedByIpOwner bool\n */\n\n/**\n * LicenseRegistryAttachLicenseTermsToIpRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicenseRegistryInitializeRequest\n *\n * @param accessManager address\n */\n\n/**\n * LicenseRegistryRegisterDerivativeIpRequest\n *\n * @param childIpId address\n * @param parentIpIds address[]\n * @param licenseTemplate address\n * @param licenseTermsIds uint256[]\n * @param isUsingLicenseToken bool\n */\n\n/**\n * LicenseRegistryRegisterLicenseTemplateRequest\n *\n * @param licenseTemplate address\n */\n\n/**\n * LicenseRegistrySetAuthorityRequest\n *\n * @param newAuthority address\n */\n\n/**\n * LicenseRegistrySetDefaultLicenseTermsRequest\n *\n * @param newLicenseTemplate address\n * @param newLicenseTermsId uint256\n */\n\n/**\n * LicenseRegistrySetLicensingConfigForIpRequest\n *\n * @param ipId address\n * @param licensingConfig tuple\n */\n\n/**\n * LicenseRegistrySetLicensingConfigForLicenseRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param licensingConfig tuple\n */\n\n/**\n * LicenseRegistryUpgradeToAndCallRequest\n *\n * @param newImplementation address\n * @param data bytes\n */\n\n/**\n * contract LicenseRegistry event\n */\nvar LicenseRegistryEventClient = /*#__PURE__*/function () {\n  function LicenseRegistryEventClient(rpcClient, address) {\n    var _rpcClient$chain7;\n    _classCallCheck(this, LicenseRegistryEventClient);\n    this.address = address || getAddress(licenseRegistryAddress, (_rpcClient$chain7 = rpcClient.chain) === null || _rpcClient$chain7 === void 0 ? void 0 : _rpcClient$chain7.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event AuthorityUpdated for contract LicenseRegistry\n   */\n  return _createClass(LicenseRegistryEventClient, [{\n    key: \"watchAuthorityUpdatedEvent\",\n    value: function watchAuthorityUpdatedEvent(_onLogs16) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"AuthorityUpdated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs16(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event AuthorityUpdated for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxAuthorityUpdatedEvent\",\n    value: function parseTxAuthorityUpdatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator16 = _createForOfIteratorHelper(txReceipt.logs),\n        _step16;\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var log = _step16.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"AuthorityUpdated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"AuthorityUpdated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DefaultLicenseTermsSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchDefaultLicenseTermsSetEvent\",\n    value: function watchDefaultLicenseTermsSetEvent(_onLogs17) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"DefaultLicenseTermsSet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs17(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DefaultLicenseTermsSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxDefaultLicenseTermsSetEvent\",\n    value: function parseTxDefaultLicenseTermsSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator17 = _createForOfIteratorHelper(txReceipt.logs),\n        _step17;\n      try {\n        for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n          var log = _step17.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"DefaultLicenseTermsSet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DefaultLicenseTermsSet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator17.e(err);\n      } finally {\n        _iterator17.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event ExpirationTimeSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchExpirationTimeSetEvent\",\n    value: function watchExpirationTimeSetEvent(_onLogs18) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"ExpirationTimeSet\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs18(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event ExpirationTimeSet for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxExpirationTimeSetEvent\",\n    value: function parseTxExpirationTimeSetEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator18 = _createForOfIteratorHelper(txReceipt.logs),\n        _step18;\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var log = _step18.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"ExpirationTimeSet\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"ExpirationTimeSet\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Initialized for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchInitializedEvent\",\n    value: function watchInitializedEvent(_onLogs19) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"Initialized\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs19(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Initialized for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxInitializedEvent\",\n    value: function parseTxInitializedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator19 = _createForOfIteratorHelper(txReceipt.logs),\n        _step19;\n      try {\n        for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n          var log = _step19.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"Initialized\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Initialized\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator19.e(err);\n      } finally {\n        _iterator19.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicenseTemplateRegistered for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchLicenseTemplateRegisteredEvent\",\n    value: function watchLicenseTemplateRegisteredEvent(_onLogs20) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"LicenseTemplateRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs20(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTemplateRegistered for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxLicenseTemplateRegisteredEvent\",\n    value: function parseTxLicenseTemplateRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator20 = _createForOfIteratorHelper(txReceipt.logs),\n        _step20;\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var log = _step20.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"LicenseTemplateRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTemplateRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicensingConfigSetForIP for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchLicensingConfigSetForIpEvent\",\n    value: function watchLicensingConfigSetForIpEvent(_onLogs21) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"LicensingConfigSetForIP\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs21(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicensingConfigSetForIP for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxLicensingConfigSetForIpEvent\",\n    value: function parseTxLicensingConfigSetForIpEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator21 = _createForOfIteratorHelper(txReceipt.logs),\n        _step21;\n      try {\n        for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n          var log = _step21.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"LicensingConfigSetForIP\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicensingConfigSetForIP\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator21.e(err);\n      } finally {\n        _iterator21.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicensingConfigSetForLicense for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchLicensingConfigSetForLicenseEvent\",\n    value: function watchLicensingConfigSetForLicenseEvent(_onLogs22) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"LicensingConfigSetForLicense\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs22(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicensingConfigSetForLicense for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxLicensingConfigSetForLicenseEvent\",\n    value: function parseTxLicensingConfigSetForLicenseEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator22 = _createForOfIteratorHelper(txReceipt.logs),\n        _step22;\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var log = _step22.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"LicensingConfigSetForLicense\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicensingConfigSetForLicense\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Upgraded for contract LicenseRegistry\n     */\n  }, {\n    key: \"watchUpgradedEvent\",\n    value: function watchUpgradedEvent(_onLogs23) {\n      return this.rpcClient.watchContractEvent({\n        abi: licenseRegistryAbi,\n        address: this.address,\n        eventName: \"Upgraded\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs23(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Upgraded for contract LicenseRegistry\n     */\n  }, {\n    key: \"parseTxUpgradedEvent\",\n    value: function parseTxUpgradedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator23 = _createForOfIteratorHelper(txReceipt.logs),\n        _step23;\n      try {\n        for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n          var log = _step23.value;\n          try {\n            var event = decodeEventLog({\n              abi: licenseRegistryAbi,\n              eventName: \"Upgraded\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Upgraded\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator23.e(err);\n      } finally {\n        _iterator23.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract LicenseRegistry readonly method\n */\nvar LicenseRegistryReadOnlyClient = /*#__PURE__*/function (_LicenseRegistryEvent) {\n  function LicenseRegistryReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, LicenseRegistryReadOnlyClient);\n    return _callSuper(this, LicenseRegistryReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method DISPUTE_MODULE for contract LicenseRegistry\n   *\n   * @param request LicenseRegistryDisputeModuleRequest\n   * @return Promise<LicenseRegistryDisputeModuleResponse>\n   */\n  _inherits(LicenseRegistryReadOnlyClient, _LicenseRegistryEvent);\n  return _createClass(LicenseRegistryReadOnlyClient, [{\n    key: \"disputeModule\",\n    value: (function () {\n      var _disputeModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee37() {\n        return _regeneratorRuntime().wrap(function _callee37$(_context37) {\n          while (1) switch (_context37.prev = _context37.next) {\n            case 0:\n              _context37.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"DISPUTE_MODULE\"\n              });\n            case 2:\n              return _context37.abrupt(\"return\", _context37.sent);\n            case 3:\n            case \"end\":\n              return _context37.stop();\n          }\n        }, _callee37, this);\n      }));\n      function disputeModule() {\n        return _disputeModule.apply(this, arguments);\n      }\n      return disputeModule;\n    }()\n    /**\n     * method EXPIRATION_TIME for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryExpirationTimeRequest\n     * @return Promise<LicenseRegistryExpirationTimeResponse>\n     */\n    )\n  }, {\n    key: \"expirationTime\",\n    value: (function () {\n      var _expirationTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee38() {\n        return _regeneratorRuntime().wrap(function _callee38$(_context38) {\n          while (1) switch (_context38.prev = _context38.next) {\n            case 0:\n              _context38.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"EXPIRATION_TIME\"\n              });\n            case 2:\n              return _context38.abrupt(\"return\", _context38.sent);\n            case 3:\n            case \"end\":\n              return _context38.stop();\n          }\n        }, _callee38, this);\n      }));\n      function expirationTime() {\n        return _expirationTime.apply(this, arguments);\n      }\n      return expirationTime;\n    }()\n    /**\n     * method IP_GRAPH_ACL for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIpGraphAclRequest\n     * @return Promise<LicenseRegistryIpGraphAclResponse>\n     */\n    )\n  }, {\n    key: \"ipGraphAcl\",\n    value: (function () {\n      var _ipGraphAcl = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee39() {\n        return _regeneratorRuntime().wrap(function _callee39$(_context39) {\n          while (1) switch (_context39.prev = _context39.next) {\n            case 0:\n              _context39.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"IP_GRAPH_ACL\"\n              });\n            case 2:\n              return _context39.abrupt(\"return\", _context39.sent);\n            case 3:\n            case \"end\":\n              return _context39.stop();\n          }\n        }, _callee39, this);\n      }));\n      function ipGraphAcl() {\n        return _ipGraphAcl.apply(this, arguments);\n      }\n      return ipGraphAcl;\n    }()\n    /**\n     * method IP_GRAPH_CONTRACT for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIpGraphContractRequest\n     * @return Promise<LicenseRegistryIpGraphContractResponse>\n     */\n    )\n  }, {\n    key: \"ipGraphContract\",\n    value: (function () {\n      var _ipGraphContract = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee40() {\n        return _regeneratorRuntime().wrap(function _callee40$(_context40) {\n          while (1) switch (_context40.prev = _context40.next) {\n            case 0:\n              _context40.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"IP_GRAPH_CONTRACT\"\n              });\n            case 2:\n              return _context40.abrupt(\"return\", _context40.sent);\n            case 3:\n            case \"end\":\n              return _context40.stop();\n          }\n        }, _callee40, this);\n      }));\n      function ipGraphContract() {\n        return _ipGraphContract.apply(this, arguments);\n      }\n      return ipGraphContract;\n    }()\n    /**\n     * method LICENSING_MODULE for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryLicensingModuleRequest\n     * @return Promise<LicenseRegistryLicensingModuleResponse>\n     */\n    )\n  }, {\n    key: \"licensingModule\",\n    value: (function () {\n      var _licensingModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee41() {\n        return _regeneratorRuntime().wrap(function _callee41$(_context41) {\n          while (1) switch (_context41.prev = _context41.next) {\n            case 0:\n              _context41.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"LICENSING_MODULE\"\n              });\n            case 2:\n              return _context41.abrupt(\"return\", _context41.sent);\n            case 3:\n            case \"end\":\n              return _context41.stop();\n          }\n        }, _callee41, this);\n      }));\n      function licensingModule() {\n        return _licensingModule.apply(this, arguments);\n      }\n      return licensingModule;\n    }()\n    /**\n     * method UPGRADE_INTERFACE_VERSION for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryUpgradeInterfaceVersionRequest\n     * @return Promise<LicenseRegistryUpgradeInterfaceVersionResponse>\n     */\n    )\n  }, {\n    key: \"upgradeInterfaceVersion\",\n    value: (function () {\n      var _upgradeInterfaceVersion2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee42() {\n        return _regeneratorRuntime().wrap(function _callee42$(_context42) {\n          while (1) switch (_context42.prev = _context42.next) {\n            case 0:\n              _context42.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"UPGRADE_INTERFACE_VERSION\"\n              });\n            case 2:\n              return _context42.abrupt(\"return\", _context42.sent);\n            case 3:\n            case \"end\":\n              return _context42.stop();\n          }\n        }, _callee42, this);\n      }));\n      function upgradeInterfaceVersion() {\n        return _upgradeInterfaceVersion2.apply(this, arguments);\n      }\n      return upgradeInterfaceVersion;\n    }()\n    /**\n     * method authority for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryAuthorityRequest\n     * @return Promise<LicenseRegistryAuthorityResponse>\n     */\n    )\n  }, {\n    key: \"authority\",\n    value: (function () {\n      var _authority2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee43() {\n        return _regeneratorRuntime().wrap(function _callee43$(_context43) {\n          while (1) switch (_context43.prev = _context43.next) {\n            case 0:\n              _context43.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"authority\"\n              });\n            case 2:\n              return _context43.abrupt(\"return\", _context43.sent);\n            case 3:\n            case \"end\":\n              return _context43.stop();\n          }\n        }, _callee43, this);\n      }));\n      function authority() {\n        return _authority2.apply(this, arguments);\n      }\n      return authority;\n    }()\n    /**\n     * method exists for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryExistsRequest\n     * @return Promise<LicenseRegistryExistsResponse>\n     */\n    )\n  }, {\n    key: \"exists\",\n    value: (function () {\n      var _exists = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee44(request) {\n        return _regeneratorRuntime().wrap(function _callee44$(_context44) {\n          while (1) switch (_context44.prev = _context44.next) {\n            case 0:\n              _context44.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"exists\",\n                args: [request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              return _context44.abrupt(\"return\", _context44.sent);\n            case 3:\n            case \"end\":\n              return _context44.stop();\n          }\n        }, _callee44, this);\n      }));\n      function exists(_x26) {\n        return _exists.apply(this, arguments);\n      }\n      return exists;\n    }()\n    /**\n     * method getAttachedLicenseTerms for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetAttachedLicenseTermsRequest\n     * @return Promise<LicenseRegistryGetAttachedLicenseTermsResponse>\n     */\n    )\n  }, {\n    key: \"getAttachedLicenseTerms\",\n    value: (function () {\n      var _getAttachedLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee45(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee45$(_context45) {\n          while (1) switch (_context45.prev = _context45.next) {\n            case 0:\n              _context45.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getAttachedLicenseTerms\",\n                args: [request.ipId, request.index]\n              });\n            case 2:\n              result = _context45.sent;\n              return _context45.abrupt(\"return\", {\n                licenseTemplate: result[0],\n                licenseTermsId: result[1]\n              });\n            case 4:\n            case \"end\":\n              return _context45.stop();\n          }\n        }, _callee45, this);\n      }));\n      function getAttachedLicenseTerms(_x27) {\n        return _getAttachedLicenseTerms.apply(this, arguments);\n      }\n      return getAttachedLicenseTerms;\n    }()\n    /**\n     * method getAttachedLicenseTermsCount for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetAttachedLicenseTermsCountRequest\n     * @return Promise<LicenseRegistryGetAttachedLicenseTermsCountResponse>\n     */\n    )\n  }, {\n    key: \"getAttachedLicenseTermsCount\",\n    value: (function () {\n      var _getAttachedLicenseTermsCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee46(request) {\n        return _regeneratorRuntime().wrap(function _callee46$(_context46) {\n          while (1) switch (_context46.prev = _context46.next) {\n            case 0:\n              _context46.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getAttachedLicenseTermsCount\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context46.abrupt(\"return\", _context46.sent);\n            case 3:\n            case \"end\":\n              return _context46.stop();\n          }\n        }, _callee46, this);\n      }));\n      function getAttachedLicenseTermsCount(_x28) {\n        return _getAttachedLicenseTermsCount.apply(this, arguments);\n      }\n      return getAttachedLicenseTermsCount;\n    }()\n    /**\n     * method getDefaultLicenseTerms for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetDefaultLicenseTermsRequest\n     * @return Promise<LicenseRegistryGetDefaultLicenseTermsResponse>\n     */\n    )\n  }, {\n    key: \"getDefaultLicenseTerms\",\n    value: (function () {\n      var _getDefaultLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee47() {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee47$(_context47) {\n          while (1) switch (_context47.prev = _context47.next) {\n            case 0:\n              _context47.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getDefaultLicenseTerms\"\n              });\n            case 2:\n              result = _context47.sent;\n              return _context47.abrupt(\"return\", {\n                licenseTemplate: result[0],\n                licenseTermsId: result[1]\n              });\n            case 4:\n            case \"end\":\n              return _context47.stop();\n          }\n        }, _callee47, this);\n      }));\n      function getDefaultLicenseTerms() {\n        return _getDefaultLicenseTerms.apply(this, arguments);\n      }\n      return getDefaultLicenseTerms;\n    }()\n    /**\n     * method getDerivativeIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetDerivativeIpRequest\n     * @return Promise<LicenseRegistryGetDerivativeIpResponse>\n     */\n    )\n  }, {\n    key: \"getDerivativeIp\",\n    value: (function () {\n      var _getDerivativeIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee48(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee48$(_context48) {\n          while (1) switch (_context48.prev = _context48.next) {\n            case 0:\n              _context48.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getDerivativeIp\",\n                args: [request.parentIpId, request.index]\n              });\n            case 2:\n              result = _context48.sent;\n              return _context48.abrupt(\"return\", {\n                childIpId: result\n              });\n            case 4:\n            case \"end\":\n              return _context48.stop();\n          }\n        }, _callee48, this);\n      }));\n      function getDerivativeIp(_x29) {\n        return _getDerivativeIp.apply(this, arguments);\n      }\n      return getDerivativeIp;\n    }()\n    /**\n     * method getDerivativeIpCount for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetDerivativeIpCountRequest\n     * @return Promise<LicenseRegistryGetDerivativeIpCountResponse>\n     */\n    )\n  }, {\n    key: \"getDerivativeIpCount\",\n    value: (function () {\n      var _getDerivativeIpCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee49(request) {\n        return _regeneratorRuntime().wrap(function _callee49$(_context49) {\n          while (1) switch (_context49.prev = _context49.next) {\n            case 0:\n              _context49.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getDerivativeIpCount\",\n                args: [request.parentIpId]\n              });\n            case 2:\n              return _context49.abrupt(\"return\", _context49.sent);\n            case 3:\n            case \"end\":\n              return _context49.stop();\n          }\n        }, _callee49, this);\n      }));\n      function getDerivativeIpCount(_x30) {\n        return _getDerivativeIpCount.apply(this, arguments);\n      }\n      return getDerivativeIpCount;\n    }()\n    /**\n     * method getExpireTime for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetExpireTimeRequest\n     * @return Promise<LicenseRegistryGetExpireTimeResponse>\n     */\n    )\n  }, {\n    key: \"getExpireTime\",\n    value: (function () {\n      var _getExpireTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee50(request) {\n        return _regeneratorRuntime().wrap(function _callee50$(_context50) {\n          while (1) switch (_context50.prev = _context50.next) {\n            case 0:\n              _context50.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getExpireTime\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context50.abrupt(\"return\", _context50.sent);\n            case 3:\n            case \"end\":\n              return _context50.stop();\n          }\n        }, _callee50, this);\n      }));\n      function getExpireTime(_x31) {\n        return _getExpireTime.apply(this, arguments);\n      }\n      return getExpireTime;\n    }()\n    /**\n     * method getLicensingConfig for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetLicensingConfigRequest\n     * @return Promise<LicenseRegistryGetLicensingConfigResponse>\n     */\n    )\n  }, {\n    key: \"getLicensingConfig\",\n    value: (function () {\n      var _getLicensingConfig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee51(request) {\n        return _regeneratorRuntime().wrap(function _callee51$(_context51) {\n          while (1) switch (_context51.prev = _context51.next) {\n            case 0:\n              _context51.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getLicensingConfig\",\n                args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              return _context51.abrupt(\"return\", _context51.sent);\n            case 3:\n            case \"end\":\n              return _context51.stop();\n          }\n        }, _callee51, this);\n      }));\n      function getLicensingConfig(_x32) {\n        return _getLicensingConfig.apply(this, arguments);\n      }\n      return getLicensingConfig;\n    }()\n    /**\n     * method getParentIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetParentIpRequest\n     * @return Promise<LicenseRegistryGetParentIpResponse>\n     */\n    )\n  }, {\n    key: \"getParentIp\",\n    value: (function () {\n      var _getParentIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee52(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee52$(_context52) {\n          while (1) switch (_context52.prev = _context52.next) {\n            case 0:\n              _context52.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getParentIp\",\n                args: [request.childIpId, request.index]\n              });\n            case 2:\n              result = _context52.sent;\n              return _context52.abrupt(\"return\", {\n                parentIpId: result\n              });\n            case 4:\n            case \"end\":\n              return _context52.stop();\n          }\n        }, _callee52, this);\n      }));\n      function getParentIp(_x33) {\n        return _getParentIp.apply(this, arguments);\n      }\n      return getParentIp;\n    }()\n    /**\n     * method getParentIpCount for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryGetParentIpCountRequest\n     * @return Promise<LicenseRegistryGetParentIpCountResponse>\n     */\n    )\n  }, {\n    key: \"getParentIpCount\",\n    value: (function () {\n      var _getParentIpCount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee53(request) {\n        return _regeneratorRuntime().wrap(function _callee53$(_context53) {\n          while (1) switch (_context53.prev = _context53.next) {\n            case 0:\n              _context53.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"getParentIpCount\",\n                args: [request.childIpId]\n              });\n            case 2:\n              return _context53.abrupt(\"return\", _context53.sent);\n            case 3:\n            case \"end\":\n              return _context53.stop();\n          }\n        }, _callee53, this);\n      }));\n      function getParentIpCount(_x34) {\n        return _getParentIpCount.apply(this, arguments);\n      }\n      return getParentIpCount;\n    }()\n    /**\n     * method hasDerivativeIps for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryHasDerivativeIpsRequest\n     * @return Promise<LicenseRegistryHasDerivativeIpsResponse>\n     */\n    )\n  }, {\n    key: \"hasDerivativeIps\",\n    value: (function () {\n      var _hasDerivativeIps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee54(request) {\n        return _regeneratorRuntime().wrap(function _callee54$(_context54) {\n          while (1) switch (_context54.prev = _context54.next) {\n            case 0:\n              _context54.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"hasDerivativeIps\",\n                args: [request.parentIpId]\n              });\n            case 2:\n              return _context54.abrupt(\"return\", _context54.sent);\n            case 3:\n            case \"end\":\n              return _context54.stop();\n          }\n        }, _callee54, this);\n      }));\n      function hasDerivativeIps(_x35) {\n        return _hasDerivativeIps.apply(this, arguments);\n      }\n      return hasDerivativeIps;\n    }()\n    /**\n     * method hasIpAttachedLicenseTerms for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryHasIpAttachedLicenseTermsRequest\n     * @return Promise<LicenseRegistryHasIpAttachedLicenseTermsResponse>\n     */\n    )\n  }, {\n    key: \"hasIpAttachedLicenseTerms\",\n    value: (function () {\n      var _hasIpAttachedLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee55(request) {\n        return _regeneratorRuntime().wrap(function _callee55$(_context55) {\n          while (1) switch (_context55.prev = _context55.next) {\n            case 0:\n              _context55.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"hasIpAttachedLicenseTerms\",\n                args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              return _context55.abrupt(\"return\", _context55.sent);\n            case 3:\n            case \"end\":\n              return _context55.stop();\n          }\n        }, _callee55, this);\n      }));\n      function hasIpAttachedLicenseTerms(_x36) {\n        return _hasIpAttachedLicenseTerms.apply(this, arguments);\n      }\n      return hasIpAttachedLicenseTerms;\n    }()\n    /**\n     * method isConsumingScheduledOp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsConsumingScheduledOpRequest\n     * @return Promise<LicenseRegistryIsConsumingScheduledOpResponse>\n     */\n    )\n  }, {\n    key: \"isConsumingScheduledOp\",\n    value: (function () {\n      var _isConsumingScheduledOp2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee56() {\n        return _regeneratorRuntime().wrap(function _callee56$(_context56) {\n          while (1) switch (_context56.prev = _context56.next) {\n            case 0:\n              _context56.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isConsumingScheduledOp\"\n              });\n            case 2:\n              return _context56.abrupt(\"return\", _context56.sent);\n            case 3:\n            case \"end\":\n              return _context56.stop();\n          }\n        }, _callee56, this);\n      }));\n      function isConsumingScheduledOp() {\n        return _isConsumingScheduledOp2.apply(this, arguments);\n      }\n      return isConsumingScheduledOp;\n    }()\n    /**\n     * method isDerivativeIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsDerivativeIpRequest\n     * @return Promise<LicenseRegistryIsDerivativeIpResponse>\n     */\n    )\n  }, {\n    key: \"isDerivativeIp\",\n    value: (function () {\n      var _isDerivativeIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee57(request) {\n        return _regeneratorRuntime().wrap(function _callee57$(_context57) {\n          while (1) switch (_context57.prev = _context57.next) {\n            case 0:\n              _context57.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isDerivativeIp\",\n                args: [request.childIpId]\n              });\n            case 2:\n              return _context57.abrupt(\"return\", _context57.sent);\n            case 3:\n            case \"end\":\n              return _context57.stop();\n          }\n        }, _callee57, this);\n      }));\n      function isDerivativeIp(_x37) {\n        return _isDerivativeIp.apply(this, arguments);\n      }\n      return isDerivativeIp;\n    }()\n    /**\n     * method isExpiredNow for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsExpiredNowRequest\n     * @return Promise<LicenseRegistryIsExpiredNowResponse>\n     */\n    )\n  }, {\n    key: \"isExpiredNow\",\n    value: (function () {\n      var _isExpiredNow = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee58(request) {\n        return _regeneratorRuntime().wrap(function _callee58$(_context58) {\n          while (1) switch (_context58.prev = _context58.next) {\n            case 0:\n              _context58.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isExpiredNow\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context58.abrupt(\"return\", _context58.sent);\n            case 3:\n            case \"end\":\n              return _context58.stop();\n          }\n        }, _callee58, this);\n      }));\n      function isExpiredNow(_x38) {\n        return _isExpiredNow.apply(this, arguments);\n      }\n      return isExpiredNow;\n    }()\n    /**\n     * method isParentIp for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsParentIpRequest\n     * @return Promise<LicenseRegistryIsParentIpResponse>\n     */\n    )\n  }, {\n    key: \"isParentIp\",\n    value: (function () {\n      var _isParentIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee59(request) {\n        return _regeneratorRuntime().wrap(function _callee59$(_context59) {\n          while (1) switch (_context59.prev = _context59.next) {\n            case 0:\n              _context59.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isParentIp\",\n                args: [request.parentIpId, request.childIpId]\n              });\n            case 2:\n              return _context59.abrupt(\"return\", _context59.sent);\n            case 3:\n            case \"end\":\n              return _context59.stop();\n          }\n        }, _callee59, this);\n      }));\n      function isParentIp(_x39) {\n        return _isParentIp.apply(this, arguments);\n      }\n      return isParentIp;\n    }()\n    /**\n     * method isRegisteredLicenseTemplate for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryIsRegisteredLicenseTemplateRequest\n     * @return Promise<LicenseRegistryIsRegisteredLicenseTemplateResponse>\n     */\n    )\n  }, {\n    key: \"isRegisteredLicenseTemplate\",\n    value: (function () {\n      var _isRegisteredLicenseTemplate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee60(request) {\n        return _regeneratorRuntime().wrap(function _callee60$(_context60) {\n          while (1) switch (_context60.prev = _context60.next) {\n            case 0:\n              _context60.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"isRegisteredLicenseTemplate\",\n                args: [request.licenseTemplate]\n              });\n            case 2:\n              return _context60.abrupt(\"return\", _context60.sent);\n            case 3:\n            case \"end\":\n              return _context60.stop();\n          }\n        }, _callee60, this);\n      }));\n      function isRegisteredLicenseTemplate(_x40) {\n        return _isRegisteredLicenseTemplate.apply(this, arguments);\n      }\n      return isRegisteredLicenseTemplate;\n    }()\n    /**\n     * method proxiableUUID for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryProxiableUuidRequest\n     * @return Promise<LicenseRegistryProxiableUuidResponse>\n     */\n    )\n  }, {\n    key: \"proxiableUuid\",\n    value: (function () {\n      var _proxiableUuid2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee61() {\n        return _regeneratorRuntime().wrap(function _callee61$(_context61) {\n          while (1) switch (_context61.prev = _context61.next) {\n            case 0:\n              _context61.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"proxiableUUID\"\n              });\n            case 2:\n              return _context61.abrupt(\"return\", _context61.sent);\n            case 3:\n            case \"end\":\n              return _context61.stop();\n          }\n        }, _callee61, this);\n      }));\n      function proxiableUuid() {\n        return _proxiableUuid2.apply(this, arguments);\n      }\n      return proxiableUuid;\n    }()\n    /**\n     * method verifyMintLicenseToken for contract LicenseRegistry\n     *\n     * @param request LicenseRegistryVerifyMintLicenseTokenRequest\n     * @return Promise<LicenseRegistryVerifyMintLicenseTokenResponse>\n     */\n    )\n  }, {\n    key: \"verifyMintLicenseToken\",\n    value: (function () {\n      var _verifyMintLicenseToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee62(request) {\n        return _regeneratorRuntime().wrap(function _callee62$(_context62) {\n          while (1) switch (_context62.prev = _context62.next) {\n            case 0:\n              _context62.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseRegistryAbi,\n                address: this.address,\n                functionName: \"verifyMintLicenseToken\",\n                args: [request.licensorIpId, request.licenseTemplate, request.licenseTermsId, request.isMintedByIpOwner]\n              });\n            case 2:\n              return _context62.abrupt(\"return\", _context62.sent);\n            case 3:\n            case \"end\":\n              return _context62.stop();\n          }\n        }, _callee62, this);\n      }));\n      function verifyMintLicenseToken(_x41) {\n        return _verifyMintLicenseToken.apply(this, arguments);\n      }\n      return verifyMintLicenseToken;\n    }())\n  }]);\n}(LicenseRegistryEventClient);\n\n// Contract LicenseToken =============================================================\n\n/**\n * LicenseTokenOwnerOfRequest\n *\n * @param tokenId uint256\n */\n\n/**\n * contract LicenseToken readonly method\n */\nvar LicenseTokenReadOnlyClient = /*#__PURE__*/function () {\n  function LicenseTokenReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain8;\n    _classCallCheck(this, LicenseTokenReadOnlyClient);\n    this.address = address || getAddress(licenseTokenAddress, (_rpcClient$chain8 = rpcClient.chain) === null || _rpcClient$chain8 === void 0 ? void 0 : _rpcClient$chain8.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method ownerOf for contract LicenseToken\n   *\n   * @param request LicenseTokenOwnerOfRequest\n   * @return Promise<LicenseTokenOwnerOfResponse>\n   */\n  return _createClass(LicenseTokenReadOnlyClient, [{\n    key: \"ownerOf\",\n    value: (function () {\n      var _ownerOf = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee72(request) {\n        return _regeneratorRuntime().wrap(function _callee72$(_context72) {\n          while (1) switch (_context72.prev = _context72.next) {\n            case 0:\n              _context72.next = 2;\n              return this.rpcClient.readContract({\n                abi: licenseTokenAbi,\n                address: this.address,\n                functionName: \"ownerOf\",\n                args: [request.tokenId]\n              });\n            case 2:\n              return _context72.abrupt(\"return\", _context72.sent);\n            case 3:\n            case \"end\":\n              return _context72.stop();\n          }\n        }, _callee72, this);\n      }));\n      function ownerOf(_x51) {\n        return _ownerOf.apply(this, arguments);\n      }\n      return ownerOf;\n    }())\n  }]);\n}();\n\n// Contract LicensingModule =============================================================\n\n/**\n * LicensingModuleLicenseTermsAttachedEvent\n *\n * @param caller address\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicensingModuleLicenseTokensMintedEvent\n *\n * @param caller address\n * @param licensorIpId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param amount uint256\n * @param receiver address\n * @param startLicenseTokenId uint256\n */\n\n/**\n * LicensingModuleAttachLicenseTermsRequest\n *\n * @param ipId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n */\n\n/**\n * LicensingModuleMintLicenseTokensRequest\n *\n * @param licensorIpId address\n * @param licenseTemplate address\n * @param licenseTermsId uint256\n * @param amount uint256\n * @param receiver address\n * @param royaltyContext bytes\n */\n\n/**\n * LicensingModuleRegisterDerivativeRequest\n *\n * @param childIpId address\n * @param parentIpIds address[]\n * @param licenseTermsIds uint256[]\n * @param licenseTemplate address\n * @param royaltyContext bytes\n */\n\n/**\n * LicensingModuleRegisterDerivativeWithLicenseTokensRequest\n *\n * @param childIpId address\n * @param licenseTokenIds uint256[]\n * @param royaltyContext bytes\n */\n\n/**\n * contract LicensingModule event\n */\nvar LicensingModuleEventClient = /*#__PURE__*/function () {\n  function LicensingModuleEventClient(rpcClient, address) {\n    var _rpcClient$chain9;\n    _classCallCheck(this, LicensingModuleEventClient);\n    this.address = address || getAddress(licensingModuleAddress, (_rpcClient$chain9 = rpcClient.chain) === null || _rpcClient$chain9 === void 0 ? void 0 : _rpcClient$chain9.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event LicenseTermsAttached for contract LicensingModule\n   */\n  return _createClass(LicensingModuleEventClient, [{\n    key: \"watchLicenseTermsAttachedEvent\",\n    value: function watchLicenseTermsAttachedEvent(_onLogs24) {\n      return this.rpcClient.watchContractEvent({\n        abi: licensingModuleAbi,\n        address: this.address,\n        eventName: \"LicenseTermsAttached\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs24(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTermsAttached for contract LicensingModule\n     */\n  }, {\n    key: \"parseTxLicenseTermsAttachedEvent\",\n    value: function parseTxLicenseTermsAttachedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator24 = _createForOfIteratorHelper(txReceipt.logs),\n        _step24;\n      try {\n        for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n          var log = _step24.value;\n          try {\n            var event = decodeEventLog({\n              abi: licensingModuleAbi,\n              eventName: \"LicenseTermsAttached\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTermsAttached\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator24.e(err);\n      } finally {\n        _iterator24.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicenseTokensMinted for contract LicensingModule\n     */\n  }, {\n    key: \"watchLicenseTokensMintedEvent\",\n    value: function watchLicenseTokensMintedEvent(_onLogs25) {\n      return this.rpcClient.watchContractEvent({\n        abi: licensingModuleAbi,\n        address: this.address,\n        eventName: \"LicenseTokensMinted\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs25(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTokensMinted for contract LicensingModule\n     */\n  }, {\n    key: \"parseTxLicenseTokensMintedEvent\",\n    value: function parseTxLicenseTokensMintedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator25 = _createForOfIteratorHelper(txReceipt.logs),\n        _step25;\n      try {\n        for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n          var log = _step25.value;\n          try {\n            var event = decodeEventLog({\n              abi: licensingModuleAbi,\n              eventName: \"LicenseTokensMinted\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTokensMinted\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator25.e(err);\n      } finally {\n        _iterator25.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract LicensingModule write method\n */\nvar LicensingModuleClient = /*#__PURE__*/function (_LicensingModuleEvent) {\n  function LicensingModuleClient(rpcClient, wallet, address) {\n    var _this8;\n    _classCallCheck(this, LicensingModuleClient);\n    _this8 = _callSuper(this, LicensingModuleClient, [rpcClient, address]);\n    _this8.wallet = wallet;\n    return _this8;\n  }\n\n  /**\n   * method attachLicenseTerms for contract LicensingModule\n   *\n   * @param request LicensingModuleAttachLicenseTermsRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(LicensingModuleClient, _LicensingModuleEvent);\n  return _createClass(LicensingModuleClient, [{\n    key: \"attachLicenseTerms\",\n    value: (function () {\n      var _attachLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee73(request) {\n        var _yield$this$rpcClient31, call;\n        return _regeneratorRuntime().wrap(function _callee73$(_context73) {\n          while (1) switch (_context73.prev = _context73.next) {\n            case 0:\n              _context73.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"attachLicenseTerms\",\n                account: this.wallet.account,\n                args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n              });\n            case 2:\n              _yield$this$rpcClient31 = _context73.sent;\n              call = _yield$this$rpcClient31.request;\n              _context73.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context73.abrupt(\"return\", _context73.sent);\n            case 7:\n            case \"end\":\n              return _context73.stop();\n          }\n        }, _callee73, this);\n      }));\n      function attachLicenseTerms(_x52) {\n        return _attachLicenseTerms.apply(this, arguments);\n      }\n      return attachLicenseTerms;\n    }()\n    /**\n     * method attachLicenseTerms for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleAttachLicenseTermsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"attachLicenseTermsEncode\",\n    value: function attachLicenseTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"attachLicenseTerms\",\n          args: [request.ipId, request.licenseTemplate, request.licenseTermsId]\n        })\n      };\n    }\n\n    /**\n     * method mintLicenseTokens for contract LicensingModule\n     *\n     * @param request LicensingModuleMintLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintLicenseTokens\",\n    value: (function () {\n      var _mintLicenseTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee74(request) {\n        var _yield$this$rpcClient32, call;\n        return _regeneratorRuntime().wrap(function _callee74$(_context74) {\n          while (1) switch (_context74.prev = _context74.next) {\n            case 0:\n              _context74.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"mintLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.licensorIpId, request.licenseTemplate, request.licenseTermsId, request.amount, request.receiver, request.royaltyContext]\n              });\n            case 2:\n              _yield$this$rpcClient32 = _context74.sent;\n              call = _yield$this$rpcClient32.request;\n              _context74.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context74.abrupt(\"return\", _context74.sent);\n            case 7:\n            case \"end\":\n              return _context74.stop();\n          }\n        }, _callee74, this);\n      }));\n      function mintLicenseTokens(_x53) {\n        return _mintLicenseTokens.apply(this, arguments);\n      }\n      return mintLicenseTokens;\n    }()\n    /**\n     * method mintLicenseTokens for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleMintLicenseTokensRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"mintLicenseTokensEncode\",\n    value: function mintLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"mintLicenseTokens\",\n          args: [request.licensorIpId, request.licenseTemplate, request.licenseTermsId, request.amount, request.receiver, request.royaltyContext]\n        })\n      };\n    }\n\n    /**\n     * method registerDerivative for contract LicensingModule\n     *\n     * @param request LicensingModuleRegisterDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerDerivative\",\n    value: (function () {\n      var _registerDerivative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee75(request) {\n        var _yield$this$rpcClient33, call;\n        return _regeneratorRuntime().wrap(function _callee75$(_context75) {\n          while (1) switch (_context75.prev = _context75.next) {\n            case 0:\n              _context75.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"registerDerivative\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.licenseTemplate, request.royaltyContext]\n              });\n            case 2:\n              _yield$this$rpcClient33 = _context75.sent;\n              call = _yield$this$rpcClient33.request;\n              _context75.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context75.abrupt(\"return\", _context75.sent);\n            case 7:\n            case \"end\":\n              return _context75.stop();\n          }\n        }, _callee75, this);\n      }));\n      function registerDerivative(_x54) {\n        return _registerDerivative.apply(this, arguments);\n      }\n      return registerDerivative;\n    }()\n    /**\n     * method registerDerivative for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleRegisterDerivativeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerDerivativeEncode\",\n    value: function registerDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"registerDerivative\",\n          args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.licenseTemplate, request.royaltyContext]\n        })\n      };\n    }\n\n    /**\n     * method registerDerivativeWithLicenseTokens for contract LicensingModule\n     *\n     * @param request LicensingModuleRegisterDerivativeWithLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerDerivativeWithLicenseTokens\",\n    value: (function () {\n      var _registerDerivativeWithLicenseTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee76(request) {\n        var _yield$this$rpcClient34, call;\n        return _regeneratorRuntime().wrap(function _callee76$(_context76) {\n          while (1) switch (_context76.prev = _context76.next) {\n            case 0:\n              _context76.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: licensingModuleAbi,\n                address: this.address,\n                functionName: \"registerDerivativeWithLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.licenseTokenIds, request.royaltyContext]\n              });\n            case 2:\n              _yield$this$rpcClient34 = _context76.sent;\n              call = _yield$this$rpcClient34.request;\n              _context76.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context76.abrupt(\"return\", _context76.sent);\n            case 7:\n            case \"end\":\n              return _context76.stop();\n          }\n        }, _callee76, this);\n      }));\n      function registerDerivativeWithLicenseTokens(_x55) {\n        return _registerDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return registerDerivativeWithLicenseTokens;\n    }()\n    /**\n     * method registerDerivativeWithLicenseTokens for contract LicensingModule with only encode\n     *\n     * @param request LicensingModuleRegisterDerivativeWithLicenseTokensRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerDerivativeWithLicenseTokensEncode\",\n    value: function registerDerivativeWithLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: licensingModuleAbi,\n          functionName: \"registerDerivativeWithLicenseTokens\",\n          args: [request.childIpId, request.licenseTokenIds, request.royaltyContext]\n        })\n      };\n    }\n  }]);\n}(LicensingModuleEventClient);\n\n// Contract PILicenseTemplate =============================================================\n\n/**\n * PiLicenseTemplateAuthorityUpdatedEvent\n *\n * @param authority address\n */\n\n/**\n * PiLicenseTemplateDerivativeApprovedEvent\n *\n * @param licenseTermsId uint256\n * @param ipId address\n * @param caller address\n * @param approved bool\n */\n\n/**\n * PiLicenseTemplateInitializedEvent\n *\n * @param version uint64\n */\n\n/**\n * PiLicenseTemplateLicenseTermsRegisteredEvent\n *\n * @param licenseTermsId uint256\n * @param licenseTemplate address\n * @param licenseTerms bytes\n */\n\n/**\n * PiLicenseTemplateUpgradedEvent\n *\n * @param implementation address\n */\n\n/**\n * PiLicenseTemplateExistsRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetEarlierExpireTimeRequest\n *\n * @param licenseTermsIds uint256[]\n * @param start uint256\n */\n\n/**\n * PiLicenseTemplateGetExpireTimeRequest\n *\n * @param licenseTermsId uint256\n * @param start uint256\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsRequest\n *\n * @param selectedLicenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsResponse\n *\n * @param terms tuple\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsIdRequest\n *\n * @param terms tuple\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsIdResponse\n *\n * @param selectedLicenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetLicenseTermsUriRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetRoyaltyPolicyRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateGetRoyaltyPolicyResponse\n *\n * @param royaltyPolicy address\n * @param royaltyData bytes\n * @param mintingFee uint256\n * @param currency address\n */\n\n/**\n * PiLicenseTemplateIsDerivativeApprovedRequest\n *\n * @param parentIpId address\n * @param licenseTermsId uint256\n * @param childIpId address\n */\n\n/**\n * PiLicenseTemplateIsLicenseTransferableRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateSupportsInterfaceRequest\n *\n * @param interfaceId bytes4\n */\n\n/**\n * PiLicenseTemplateToJsonRequest\n *\n * @param licenseTermsId uint256\n */\n\n/**\n * PiLicenseTemplateVerifyCompatibleLicensesRequest\n *\n * @param licenseTermsIds uint256[]\n */\n\n/**\n * PiLicenseTemplateInitializeRequest\n *\n * @param accessManager address\n * @param name string\n * @param metadataURI string\n */\n\n/**\n * PiLicenseTemplateRegisterLicenseTermsRequest\n *\n * @param terms tuple\n */\n\n/**\n * PiLicenseTemplateSetApprovalRequest\n *\n * @param parentIpId address\n * @param licenseTermsId uint256\n * @param childIpId address\n * @param approved bool\n */\n\n/**\n * PiLicenseTemplateSetAuthorityRequest\n *\n * @param newAuthority address\n */\n\n/**\n * PiLicenseTemplateUpgradeToAndCallRequest\n *\n * @param newImplementation address\n * @param data bytes\n */\n\n/**\n * PiLicenseTemplateVerifyMintLicenseTokenRequest\n *\n * @param 0 uint256\n * @param 1 address\n * @param 2 address\n * @param 3 uint256\n */\n\n/**\n * PiLicenseTemplateVerifyRegisterDerivativeRequest\n *\n * @param childIpId address\n * @param parentIpId address\n * @param licenseTermsId uint256\n * @param licensee address\n */\n\n/**\n * PiLicenseTemplateVerifyRegisterDerivativeForAllParentsRequest\n *\n * @param childIpId address\n * @param parentIpIds address[]\n * @param licenseTermsIds uint256[]\n * @param childIpOwner address\n */\n\n/**\n * contract PILicenseTemplate event\n */\nvar PiLicenseTemplateEventClient = /*#__PURE__*/function () {\n  function PiLicenseTemplateEventClient(rpcClient, address) {\n    var _rpcClient$chain11;\n    _classCallCheck(this, PiLicenseTemplateEventClient);\n    this.address = address || getAddress(piLicenseTemplateAddress, (_rpcClient$chain11 = rpcClient.chain) === null || _rpcClient$chain11 === void 0 ? void 0 : _rpcClient$chain11.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event AuthorityUpdated for contract PILicenseTemplate\n   */\n  return _createClass(PiLicenseTemplateEventClient, [{\n    key: \"watchAuthorityUpdatedEvent\",\n    value: function watchAuthorityUpdatedEvent(_onLogs26) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"AuthorityUpdated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs26(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event AuthorityUpdated for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxAuthorityUpdatedEvent\",\n    value: function parseTxAuthorityUpdatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator26 = _createForOfIteratorHelper(txReceipt.logs),\n        _step26;\n      try {\n        for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n          var log = _step26.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"AuthorityUpdated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"AuthorityUpdated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator26.e(err);\n      } finally {\n        _iterator26.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event DerivativeApproved for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchDerivativeApprovedEvent\",\n    value: function watchDerivativeApprovedEvent(_onLogs27) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"DerivativeApproved\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs27(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event DerivativeApproved for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxDerivativeApprovedEvent\",\n    value: function parseTxDerivativeApprovedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator27 = _createForOfIteratorHelper(txReceipt.logs),\n        _step27;\n      try {\n        for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n          var log = _step27.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"DerivativeApproved\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"DerivativeApproved\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator27.e(err);\n      } finally {\n        _iterator27.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Initialized for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchInitializedEvent\",\n    value: function watchInitializedEvent(_onLogs28) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"Initialized\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs28(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Initialized for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxInitializedEvent\",\n    value: function parseTxInitializedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator28 = _createForOfIteratorHelper(txReceipt.logs),\n        _step28;\n      try {\n        for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n          var log = _step28.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"Initialized\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Initialized\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator28.e(err);\n      } finally {\n        _iterator28.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event LicenseTermsRegistered for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchLicenseTermsRegisteredEvent\",\n    value: function watchLicenseTermsRegisteredEvent(_onLogs29) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"LicenseTermsRegistered\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs29(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event LicenseTermsRegistered for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxLicenseTermsRegisteredEvent\",\n    value: function parseTxLicenseTermsRegisteredEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator29 = _createForOfIteratorHelper(txReceipt.logs),\n        _step29;\n      try {\n        for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n          var log = _step29.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"LicenseTermsRegistered\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"LicenseTermsRegistered\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator29.e(err);\n      } finally {\n        _iterator29.f();\n      }\n      return targetLogs;\n    }\n\n    /**\n     * event Upgraded for contract PILicenseTemplate\n     */\n  }, {\n    key: \"watchUpgradedEvent\",\n    value: function watchUpgradedEvent(_onLogs30) {\n      return this.rpcClient.watchContractEvent({\n        abi: piLicenseTemplateAbi,\n        address: this.address,\n        eventName: \"Upgraded\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs30(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event Upgraded for contract PILicenseTemplate\n     */\n  }, {\n    key: \"parseTxUpgradedEvent\",\n    value: function parseTxUpgradedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator30 = _createForOfIteratorHelper(txReceipt.logs),\n        _step30;\n      try {\n        for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n          var log = _step30.value;\n          try {\n            var event = decodeEventLog({\n              abi: piLicenseTemplateAbi,\n              eventName: \"Upgraded\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"Upgraded\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator30.e(err);\n      } finally {\n        _iterator30.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract PILicenseTemplate readonly method\n */\nvar PiLicenseTemplateReadOnlyClient = /*#__PURE__*/function (_PiLicenseTemplateEve) {\n  function PiLicenseTemplateReadOnlyClient(rpcClient, address) {\n    _classCallCheck(this, PiLicenseTemplateReadOnlyClient);\n    return _callSuper(this, PiLicenseTemplateReadOnlyClient, [rpcClient, address]);\n  }\n\n  /**\n   * method ACCESS_CONTROLLER for contract PILicenseTemplate\n   *\n   * @param request PiLicenseTemplateAccessControllerRequest\n   * @return Promise<PiLicenseTemplateAccessControllerResponse>\n   */\n  _inherits(PiLicenseTemplateReadOnlyClient, _PiLicenseTemplateEve);\n  return _createClass(PiLicenseTemplateReadOnlyClient, [{\n    key: \"accessController\",\n    value: (function () {\n      var _accessController2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee78() {\n        return _regeneratorRuntime().wrap(function _callee78$(_context78) {\n          while (1) switch (_context78.prev = _context78.next) {\n            case 0:\n              _context78.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"ACCESS_CONTROLLER\"\n              });\n            case 2:\n              return _context78.abrupt(\"return\", _context78.sent);\n            case 3:\n            case \"end\":\n              return _context78.stop();\n          }\n        }, _callee78, this);\n      }));\n      function accessController() {\n        return _accessController2.apply(this, arguments);\n      }\n      return accessController;\n    }()\n    /**\n     * method IP_ACCOUNT_REGISTRY for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIpAccountRegistryRequest\n     * @return Promise<PiLicenseTemplateIpAccountRegistryResponse>\n     */\n    )\n  }, {\n    key: \"ipAccountRegistry\",\n    value: (function () {\n      var _ipAccountRegistry2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee79() {\n        return _regeneratorRuntime().wrap(function _callee79$(_context79) {\n          while (1) switch (_context79.prev = _context79.next) {\n            case 0:\n              _context79.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"IP_ACCOUNT_REGISTRY\"\n              });\n            case 2:\n              return _context79.abrupt(\"return\", _context79.sent);\n            case 3:\n            case \"end\":\n              return _context79.stop();\n          }\n        }, _callee79, this);\n      }));\n      function ipAccountRegistry() {\n        return _ipAccountRegistry2.apply(this, arguments);\n      }\n      return ipAccountRegistry;\n    }()\n    /**\n     * method LICENSE_REGISTRY for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateLicenseRegistryRequest\n     * @return Promise<PiLicenseTemplateLicenseRegistryResponse>\n     */\n    )\n  }, {\n    key: \"licenseRegistry\",\n    value: (function () {\n      var _licenseRegistry = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee80() {\n        return _regeneratorRuntime().wrap(function _callee80$(_context80) {\n          while (1) switch (_context80.prev = _context80.next) {\n            case 0:\n              _context80.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"LICENSE_REGISTRY\"\n              });\n            case 2:\n              return _context80.abrupt(\"return\", _context80.sent);\n            case 3:\n            case \"end\":\n              return _context80.stop();\n          }\n        }, _callee80, this);\n      }));\n      function licenseRegistry() {\n        return _licenseRegistry.apply(this, arguments);\n      }\n      return licenseRegistry;\n    }()\n    /**\n     * method ROYALTY_MODULE for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateRoyaltyModuleRequest\n     * @return Promise<PiLicenseTemplateRoyaltyModuleResponse>\n     */\n    )\n  }, {\n    key: \"royaltyModule\",\n    value: (function () {\n      var _royaltyModule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee81() {\n        return _regeneratorRuntime().wrap(function _callee81$(_context81) {\n          while (1) switch (_context81.prev = _context81.next) {\n            case 0:\n              _context81.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"ROYALTY_MODULE\"\n              });\n            case 2:\n              return _context81.abrupt(\"return\", _context81.sent);\n            case 3:\n            case \"end\":\n              return _context81.stop();\n          }\n        }, _callee81, this);\n      }));\n      function royaltyModule() {\n        return _royaltyModule.apply(this, arguments);\n      }\n      return royaltyModule;\n    }()\n    /**\n     * method TERMS_RENDERER for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateTermsRendererRequest\n     * @return Promise<PiLicenseTemplateTermsRendererResponse>\n     */\n    )\n  }, {\n    key: \"termsRenderer\",\n    value: (function () {\n      var _termsRenderer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee82() {\n        return _regeneratorRuntime().wrap(function _callee82$(_context82) {\n          while (1) switch (_context82.prev = _context82.next) {\n            case 0:\n              _context82.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"TERMS_RENDERER\"\n              });\n            case 2:\n              return _context82.abrupt(\"return\", _context82.sent);\n            case 3:\n            case \"end\":\n              return _context82.stop();\n          }\n        }, _callee82, this);\n      }));\n      function termsRenderer() {\n        return _termsRenderer.apply(this, arguments);\n      }\n      return termsRenderer;\n    }()\n    /**\n     * method UPGRADE_INTERFACE_VERSION for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateUpgradeInterfaceVersionRequest\n     * @return Promise<PiLicenseTemplateUpgradeInterfaceVersionResponse>\n     */\n    )\n  }, {\n    key: \"upgradeInterfaceVersion\",\n    value: (function () {\n      var _upgradeInterfaceVersion3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee83() {\n        return _regeneratorRuntime().wrap(function _callee83$(_context83) {\n          while (1) switch (_context83.prev = _context83.next) {\n            case 0:\n              _context83.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"UPGRADE_INTERFACE_VERSION\"\n              });\n            case 2:\n              return _context83.abrupt(\"return\", _context83.sent);\n            case 3:\n            case \"end\":\n              return _context83.stop();\n          }\n        }, _callee83, this);\n      }));\n      function upgradeInterfaceVersion() {\n        return _upgradeInterfaceVersion3.apply(this, arguments);\n      }\n      return upgradeInterfaceVersion;\n    }()\n    /**\n     * method authority for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateAuthorityRequest\n     * @return Promise<PiLicenseTemplateAuthorityResponse>\n     */\n    )\n  }, {\n    key: \"authority\",\n    value: (function () {\n      var _authority3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee84() {\n        return _regeneratorRuntime().wrap(function _callee84$(_context84) {\n          while (1) switch (_context84.prev = _context84.next) {\n            case 0:\n              _context84.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"authority\"\n              });\n            case 2:\n              return _context84.abrupt(\"return\", _context84.sent);\n            case 3:\n            case \"end\":\n              return _context84.stop();\n          }\n        }, _callee84, this);\n      }));\n      function authority() {\n        return _authority3.apply(this, arguments);\n      }\n      return authority;\n    }()\n    /**\n     * method exists for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateExistsRequest\n     * @return Promise<PiLicenseTemplateExistsResponse>\n     */\n    )\n  }, {\n    key: \"exists\",\n    value: (function () {\n      var _exists2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee85(request) {\n        return _regeneratorRuntime().wrap(function _callee85$(_context85) {\n          while (1) switch (_context85.prev = _context85.next) {\n            case 0:\n              _context85.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"exists\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context85.abrupt(\"return\", _context85.sent);\n            case 3:\n            case \"end\":\n              return _context85.stop();\n          }\n        }, _callee85, this);\n      }));\n      function exists(_x57) {\n        return _exists2.apply(this, arguments);\n      }\n      return exists;\n    }()\n    /**\n     * method getEarlierExpireTime for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetEarlierExpireTimeRequest\n     * @return Promise<PiLicenseTemplateGetEarlierExpireTimeResponse>\n     */\n    )\n  }, {\n    key: \"getEarlierExpireTime\",\n    value: (function () {\n      var _getEarlierExpireTime = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee86(request) {\n        return _regeneratorRuntime().wrap(function _callee86$(_context86) {\n          while (1) switch (_context86.prev = _context86.next) {\n            case 0:\n              _context86.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getEarlierExpireTime\",\n                args: [request.licenseTermsIds, request.start]\n              });\n            case 2:\n              return _context86.abrupt(\"return\", _context86.sent);\n            case 3:\n            case \"end\":\n              return _context86.stop();\n          }\n        }, _callee86, this);\n      }));\n      function getEarlierExpireTime(_x58) {\n        return _getEarlierExpireTime.apply(this, arguments);\n      }\n      return getEarlierExpireTime;\n    }()\n    /**\n     * method getExpireTime for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetExpireTimeRequest\n     * @return Promise<PiLicenseTemplateGetExpireTimeResponse>\n     */\n    )\n  }, {\n    key: \"getExpireTime\",\n    value: (function () {\n      var _getExpireTime2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee87(request) {\n        return _regeneratorRuntime().wrap(function _callee87$(_context87) {\n          while (1) switch (_context87.prev = _context87.next) {\n            case 0:\n              _context87.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getExpireTime\",\n                args: [request.licenseTermsId, request.start]\n              });\n            case 2:\n              return _context87.abrupt(\"return\", _context87.sent);\n            case 3:\n            case \"end\":\n              return _context87.stop();\n          }\n        }, _callee87, this);\n      }));\n      function getExpireTime(_x59) {\n        return _getExpireTime2.apply(this, arguments);\n      }\n      return getExpireTime;\n    }()\n    /**\n     * method getLicenseTerms for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetLicenseTermsRequest\n     * @return Promise<PiLicenseTemplateGetLicenseTermsResponse>\n     */\n    )\n  }, {\n    key: \"getLicenseTerms\",\n    value: (function () {\n      var _getLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee88(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee88$(_context88) {\n          while (1) switch (_context88.prev = _context88.next) {\n            case 0:\n              _context88.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getLicenseTerms\",\n                args: [request.selectedLicenseTermsId]\n              });\n            case 2:\n              result = _context88.sent;\n              return _context88.abrupt(\"return\", {\n                terms: result\n              });\n            case 4:\n            case \"end\":\n              return _context88.stop();\n          }\n        }, _callee88, this);\n      }));\n      function getLicenseTerms(_x60) {\n        return _getLicenseTerms.apply(this, arguments);\n      }\n      return getLicenseTerms;\n    }()\n    /**\n     * method getLicenseTermsId for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetLicenseTermsIdRequest\n     * @return Promise<PiLicenseTemplateGetLicenseTermsIdResponse>\n     */\n    )\n  }, {\n    key: \"getLicenseTermsId\",\n    value: (function () {\n      var _getLicenseTermsId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee89(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee89$(_context89) {\n          while (1) switch (_context89.prev = _context89.next) {\n            case 0:\n              _context89.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getLicenseTermsId\",\n                args: [request.terms]\n              });\n            case 2:\n              result = _context89.sent;\n              return _context89.abrupt(\"return\", {\n                selectedLicenseTermsId: result\n              });\n            case 4:\n            case \"end\":\n              return _context89.stop();\n          }\n        }, _callee89, this);\n      }));\n      function getLicenseTermsId(_x61) {\n        return _getLicenseTermsId.apply(this, arguments);\n      }\n      return getLicenseTermsId;\n    }()\n    /**\n     * method getLicenseTermsURI for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetLicenseTermsUriRequest\n     * @return Promise<PiLicenseTemplateGetLicenseTermsUriResponse>\n     */\n    )\n  }, {\n    key: \"getLicenseTermsUri\",\n    value: (function () {\n      var _getLicenseTermsUri = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee90(request) {\n        return _regeneratorRuntime().wrap(function _callee90$(_context90) {\n          while (1) switch (_context90.prev = _context90.next) {\n            case 0:\n              _context90.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getLicenseTermsURI\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context90.abrupt(\"return\", _context90.sent);\n            case 3:\n            case \"end\":\n              return _context90.stop();\n          }\n        }, _callee90, this);\n      }));\n      function getLicenseTermsUri(_x62) {\n        return _getLicenseTermsUri.apply(this, arguments);\n      }\n      return getLicenseTermsUri;\n    }()\n    /**\n     * method getMetadataURI for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetMetadataUriRequest\n     * @return Promise<PiLicenseTemplateGetMetadataUriResponse>\n     */\n    )\n  }, {\n    key: \"getMetadataUri\",\n    value: (function () {\n      var _getMetadataUri = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee91() {\n        return _regeneratorRuntime().wrap(function _callee91$(_context91) {\n          while (1) switch (_context91.prev = _context91.next) {\n            case 0:\n              _context91.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getMetadataURI\"\n              });\n            case 2:\n              return _context91.abrupt(\"return\", _context91.sent);\n            case 3:\n            case \"end\":\n              return _context91.stop();\n          }\n        }, _callee91, this);\n      }));\n      function getMetadataUri() {\n        return _getMetadataUri.apply(this, arguments);\n      }\n      return getMetadataUri;\n    }()\n    /**\n     * method getRoyaltyPolicy for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateGetRoyaltyPolicyRequest\n     * @return Promise<PiLicenseTemplateGetRoyaltyPolicyResponse>\n     */\n    )\n  }, {\n    key: \"getRoyaltyPolicy\",\n    value: (function () {\n      var _getRoyaltyPolicy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee92(request) {\n        var result;\n        return _regeneratorRuntime().wrap(function _callee92$(_context92) {\n          while (1) switch (_context92.prev = _context92.next) {\n            case 0:\n              _context92.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"getRoyaltyPolicy\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              result = _context92.sent;\n              return _context92.abrupt(\"return\", {\n                royaltyPolicy: result[0],\n                royaltyData: result[1],\n                mintingFee: result[2],\n                currency: result[3]\n              });\n            case 4:\n            case \"end\":\n              return _context92.stop();\n          }\n        }, _callee92, this);\n      }));\n      function getRoyaltyPolicy(_x63) {\n        return _getRoyaltyPolicy.apply(this, arguments);\n      }\n      return getRoyaltyPolicy;\n    }()\n    /**\n     * method isConsumingScheduledOp for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIsConsumingScheduledOpRequest\n     * @return Promise<PiLicenseTemplateIsConsumingScheduledOpResponse>\n     */\n    )\n  }, {\n    key: \"isConsumingScheduledOp\",\n    value: (function () {\n      var _isConsumingScheduledOp3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee93() {\n        return _regeneratorRuntime().wrap(function _callee93$(_context93) {\n          while (1) switch (_context93.prev = _context93.next) {\n            case 0:\n              _context93.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"isConsumingScheduledOp\"\n              });\n            case 2:\n              return _context93.abrupt(\"return\", _context93.sent);\n            case 3:\n            case \"end\":\n              return _context93.stop();\n          }\n        }, _callee93, this);\n      }));\n      function isConsumingScheduledOp() {\n        return _isConsumingScheduledOp3.apply(this, arguments);\n      }\n      return isConsumingScheduledOp;\n    }()\n    /**\n     * method isDerivativeApproved for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIsDerivativeApprovedRequest\n     * @return Promise<PiLicenseTemplateIsDerivativeApprovedResponse>\n     */\n    )\n  }, {\n    key: \"isDerivativeApproved\",\n    value: (function () {\n      var _isDerivativeApproved = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee94(request) {\n        return _regeneratorRuntime().wrap(function _callee94$(_context94) {\n          while (1) switch (_context94.prev = _context94.next) {\n            case 0:\n              _context94.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"isDerivativeApproved\",\n                args: [request.parentIpId, request.licenseTermsId, request.childIpId]\n              });\n            case 2:\n              return _context94.abrupt(\"return\", _context94.sent);\n            case 3:\n            case \"end\":\n              return _context94.stop();\n          }\n        }, _callee94, this);\n      }));\n      function isDerivativeApproved(_x64) {\n        return _isDerivativeApproved.apply(this, arguments);\n      }\n      return isDerivativeApproved;\n    }()\n    /**\n     * method isLicenseTransferable for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateIsLicenseTransferableRequest\n     * @return Promise<PiLicenseTemplateIsLicenseTransferableResponse>\n     */\n    )\n  }, {\n    key: \"isLicenseTransferable\",\n    value: (function () {\n      var _isLicenseTransferable = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee95(request) {\n        return _regeneratorRuntime().wrap(function _callee95$(_context95) {\n          while (1) switch (_context95.prev = _context95.next) {\n            case 0:\n              _context95.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"isLicenseTransferable\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context95.abrupt(\"return\", _context95.sent);\n            case 3:\n            case \"end\":\n              return _context95.stop();\n          }\n        }, _callee95, this);\n      }));\n      function isLicenseTransferable(_x65) {\n        return _isLicenseTransferable.apply(this, arguments);\n      }\n      return isLicenseTransferable;\n    }()\n    /**\n     * method name for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateNameRequest\n     * @return Promise<PiLicenseTemplateNameResponse>\n     */\n    )\n  }, {\n    key: \"name\",\n    value: (function () {\n      var _name2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee96() {\n        return _regeneratorRuntime().wrap(function _callee96$(_context96) {\n          while (1) switch (_context96.prev = _context96.next) {\n            case 0:\n              _context96.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"name\"\n              });\n            case 2:\n              return _context96.abrupt(\"return\", _context96.sent);\n            case 3:\n            case \"end\":\n              return _context96.stop();\n          }\n        }, _callee96, this);\n      }));\n      function name() {\n        return _name2.apply(this, arguments);\n      }\n      return name;\n    }()\n    /**\n     * method proxiableUUID for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateProxiableUuidRequest\n     * @return Promise<PiLicenseTemplateProxiableUuidResponse>\n     */\n    )\n  }, {\n    key: \"proxiableUuid\",\n    value: (function () {\n      var _proxiableUuid3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee97() {\n        return _regeneratorRuntime().wrap(function _callee97$(_context97) {\n          while (1) switch (_context97.prev = _context97.next) {\n            case 0:\n              _context97.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"proxiableUUID\"\n              });\n            case 2:\n              return _context97.abrupt(\"return\", _context97.sent);\n            case 3:\n            case \"end\":\n              return _context97.stop();\n          }\n        }, _callee97, this);\n      }));\n      function proxiableUuid() {\n        return _proxiableUuid3.apply(this, arguments);\n      }\n      return proxiableUuid;\n    }()\n    /**\n     * method supportsInterface for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateSupportsInterfaceRequest\n     * @return Promise<PiLicenseTemplateSupportsInterfaceResponse>\n     */\n    )\n  }, {\n    key: \"supportsInterface\",\n    value: (function () {\n      var _supportsInterface2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee98(request) {\n        return _regeneratorRuntime().wrap(function _callee98$(_context98) {\n          while (1) switch (_context98.prev = _context98.next) {\n            case 0:\n              _context98.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"supportsInterface\",\n                args: [request.interfaceId]\n              });\n            case 2:\n              return _context98.abrupt(\"return\", _context98.sent);\n            case 3:\n            case \"end\":\n              return _context98.stop();\n          }\n        }, _callee98, this);\n      }));\n      function supportsInterface(_x66) {\n        return _supportsInterface2.apply(this, arguments);\n      }\n      return supportsInterface;\n    }()\n    /**\n     * method toJson for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateToJsonRequest\n     * @return Promise<PiLicenseTemplateToJsonResponse>\n     */\n    )\n  }, {\n    key: \"toJson\",\n    value: (function () {\n      var _toJson = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee99(request) {\n        return _regeneratorRuntime().wrap(function _callee99$(_context99) {\n          while (1) switch (_context99.prev = _context99.next) {\n            case 0:\n              _context99.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"toJson\",\n                args: [request.licenseTermsId]\n              });\n            case 2:\n              return _context99.abrupt(\"return\", _context99.sent);\n            case 3:\n            case \"end\":\n              return _context99.stop();\n          }\n        }, _callee99, this);\n      }));\n      function toJson(_x67) {\n        return _toJson.apply(this, arguments);\n      }\n      return toJson;\n    }()\n    /**\n     * method totalRegisteredLicenseTerms for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateTotalRegisteredLicenseTermsRequest\n     * @return Promise<PiLicenseTemplateTotalRegisteredLicenseTermsResponse>\n     */\n    )\n  }, {\n    key: \"totalRegisteredLicenseTerms\",\n    value: (function () {\n      var _totalRegisteredLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee100() {\n        return _regeneratorRuntime().wrap(function _callee100$(_context100) {\n          while (1) switch (_context100.prev = _context100.next) {\n            case 0:\n              _context100.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"totalRegisteredLicenseTerms\"\n              });\n            case 2:\n              return _context100.abrupt(\"return\", _context100.sent);\n            case 3:\n            case \"end\":\n              return _context100.stop();\n          }\n        }, _callee100, this);\n      }));\n      function totalRegisteredLicenseTerms() {\n        return _totalRegisteredLicenseTerms.apply(this, arguments);\n      }\n      return totalRegisteredLicenseTerms;\n    }()\n    /**\n     * method verifyCompatibleLicenses for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyCompatibleLicensesRequest\n     * @return Promise<PiLicenseTemplateVerifyCompatibleLicensesResponse>\n     */\n    )\n  }, {\n    key: \"verifyCompatibleLicenses\",\n    value: (function () {\n      var _verifyCompatibleLicenses = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee101(request) {\n        return _regeneratorRuntime().wrap(function _callee101$(_context101) {\n          while (1) switch (_context101.prev = _context101.next) {\n            case 0:\n              _context101.next = 2;\n              return this.rpcClient.readContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyCompatibleLicenses\",\n                args: [request.licenseTermsIds]\n              });\n            case 2:\n              return _context101.abrupt(\"return\", _context101.sent);\n            case 3:\n            case \"end\":\n              return _context101.stop();\n          }\n        }, _callee101, this);\n      }));\n      function verifyCompatibleLicenses(_x68) {\n        return _verifyCompatibleLicenses.apply(this, arguments);\n      }\n      return verifyCompatibleLicenses;\n    }())\n  }]);\n}(PiLicenseTemplateEventClient);\n\n/**\n * contract PILicenseTemplate write method\n */\nvar PiLicenseTemplateClient = /*#__PURE__*/function (_PiLicenseTemplateRea) {\n  function PiLicenseTemplateClient(rpcClient, wallet, address) {\n    var _this9;\n    _classCallCheck(this, PiLicenseTemplateClient);\n    _this9 = _callSuper(this, PiLicenseTemplateClient, [rpcClient, address]);\n    _this9.wallet = wallet;\n    return _this9;\n  }\n\n  /**\n   * method initialize for contract PILicenseTemplate\n   *\n   * @param request PiLicenseTemplateInitializeRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(PiLicenseTemplateClient, _PiLicenseTemplateRea);\n  return _createClass(PiLicenseTemplateClient, [{\n    key: \"initialize\",\n    value: (function () {\n      var _initialize3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee102(request) {\n        var _yield$this$rpcClient35, call;\n        return _regeneratorRuntime().wrap(function _callee102$(_context102) {\n          while (1) switch (_context102.prev = _context102.next) {\n            case 0:\n              _context102.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"initialize\",\n                account: this.wallet.account,\n                args: [request.accessManager, request.name, request.metadataURI]\n              });\n            case 2:\n              _yield$this$rpcClient35 = _context102.sent;\n              call = _yield$this$rpcClient35.request;\n              _context102.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context102.abrupt(\"return\", _context102.sent);\n            case 7:\n            case \"end\":\n              return _context102.stop();\n          }\n        }, _callee102, this);\n      }));\n      function initialize(_x69) {\n        return _initialize3.apply(this, arguments);\n      }\n      return initialize;\n    }()\n    /**\n     * method initialize for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateInitializeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"initializeEncode\",\n    value: function initializeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"initialize\",\n          args: [request.accessManager, request.name, request.metadataURI]\n        })\n      };\n    }\n\n    /**\n     * method registerLicenseTerms for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateRegisterLicenseTermsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerLicenseTerms\",\n    value: (function () {\n      var _registerLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee103(request) {\n        var _yield$this$rpcClient36, call;\n        return _regeneratorRuntime().wrap(function _callee103$(_context103) {\n          while (1) switch (_context103.prev = _context103.next) {\n            case 0:\n              _context103.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"registerLicenseTerms\",\n                account: this.wallet.account,\n                args: [request.terms]\n              });\n            case 2:\n              _yield$this$rpcClient36 = _context103.sent;\n              call = _yield$this$rpcClient36.request;\n              _context103.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context103.abrupt(\"return\", _context103.sent);\n            case 7:\n            case \"end\":\n              return _context103.stop();\n          }\n        }, _callee103, this);\n      }));\n      function registerLicenseTerms(_x70) {\n        return _registerLicenseTerms.apply(this, arguments);\n      }\n      return registerLicenseTerms;\n    }()\n    /**\n     * method registerLicenseTerms for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateRegisterLicenseTermsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerLicenseTermsEncode\",\n    value: function registerLicenseTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"registerLicenseTerms\",\n          args: [request.terms]\n        })\n      };\n    }\n\n    /**\n     * method setApproval for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateSetApprovalRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setApproval\",\n    value: (function () {\n      var _setApproval = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee104(request) {\n        var _yield$this$rpcClient37, call;\n        return _regeneratorRuntime().wrap(function _callee104$(_context104) {\n          while (1) switch (_context104.prev = _context104.next) {\n            case 0:\n              _context104.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"setApproval\",\n                account: this.wallet.account,\n                args: [request.parentIpId, request.licenseTermsId, request.childIpId, request.approved]\n              });\n            case 2:\n              _yield$this$rpcClient37 = _context104.sent;\n              call = _yield$this$rpcClient37.request;\n              _context104.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context104.abrupt(\"return\", _context104.sent);\n            case 7:\n            case \"end\":\n              return _context104.stop();\n          }\n        }, _callee104, this);\n      }));\n      function setApproval(_x71) {\n        return _setApproval.apply(this, arguments);\n      }\n      return setApproval;\n    }()\n    /**\n     * method setApproval for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateSetApprovalRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setApprovalEncode\",\n    value: function setApprovalEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"setApproval\",\n          args: [request.parentIpId, request.licenseTermsId, request.childIpId, request.approved]\n        })\n      };\n    }\n\n    /**\n     * method setAuthority for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateSetAuthorityRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"setAuthority\",\n    value: (function () {\n      var _setAuthority3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee105(request) {\n        var _yield$this$rpcClient38, call;\n        return _regeneratorRuntime().wrap(function _callee105$(_context105) {\n          while (1) switch (_context105.prev = _context105.next) {\n            case 0:\n              _context105.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"setAuthority\",\n                account: this.wallet.account,\n                args: [request.newAuthority]\n              });\n            case 2:\n              _yield$this$rpcClient38 = _context105.sent;\n              call = _yield$this$rpcClient38.request;\n              _context105.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context105.abrupt(\"return\", _context105.sent);\n            case 7:\n            case \"end\":\n              return _context105.stop();\n          }\n        }, _callee105, this);\n      }));\n      function setAuthority(_x72) {\n        return _setAuthority3.apply(this, arguments);\n      }\n      return setAuthority;\n    }()\n    /**\n     * method setAuthority for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateSetAuthorityRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"setAuthorityEncode\",\n    value: function setAuthorityEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"setAuthority\",\n          args: [request.newAuthority]\n        })\n      };\n    }\n\n    /**\n     * method upgradeToAndCall for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateUpgradeToAndCallRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"upgradeToAndCall\",\n    value: (function () {\n      var _upgradeToAndCall3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee106(request) {\n        var _yield$this$rpcClient39, call;\n        return _regeneratorRuntime().wrap(function _callee106$(_context106) {\n          while (1) switch (_context106.prev = _context106.next) {\n            case 0:\n              _context106.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"upgradeToAndCall\",\n                account: this.wallet.account,\n                args: [request.newImplementation, request.data]\n              });\n            case 2:\n              _yield$this$rpcClient39 = _context106.sent;\n              call = _yield$this$rpcClient39.request;\n              _context106.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context106.abrupt(\"return\", _context106.sent);\n            case 7:\n            case \"end\":\n              return _context106.stop();\n          }\n        }, _callee106, this);\n      }));\n      function upgradeToAndCall(_x73) {\n        return _upgradeToAndCall3.apply(this, arguments);\n      }\n      return upgradeToAndCall;\n    }()\n    /**\n     * method upgradeToAndCall for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateUpgradeToAndCallRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"upgradeToAndCallEncode\",\n    value: function upgradeToAndCallEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"upgradeToAndCall\",\n          args: [request.newImplementation, request.data]\n        })\n      };\n    }\n\n    /**\n     * method verifyMintLicenseToken for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyMintLicenseTokenRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"verifyMintLicenseToken\",\n    value: (function () {\n      var _verifyMintLicenseToken2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee107(request) {\n        var _yield$this$rpcClient40, call;\n        return _regeneratorRuntime().wrap(function _callee107$(_context107) {\n          while (1) switch (_context107.prev = _context107.next) {\n            case 0:\n              _context107.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyMintLicenseToken\",\n                account: this.wallet.account,\n                args: [request[0], request[1], request[2], request[3]]\n              });\n            case 2:\n              _yield$this$rpcClient40 = _context107.sent;\n              call = _yield$this$rpcClient40.request;\n              _context107.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context107.abrupt(\"return\", _context107.sent);\n            case 7:\n            case \"end\":\n              return _context107.stop();\n          }\n        }, _callee107, this);\n      }));\n      function verifyMintLicenseToken(_x74) {\n        return _verifyMintLicenseToken2.apply(this, arguments);\n      }\n      return verifyMintLicenseToken;\n    }()\n    /**\n     * method verifyMintLicenseToken for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateVerifyMintLicenseTokenRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"verifyMintLicenseTokenEncode\",\n    value: function verifyMintLicenseTokenEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"verifyMintLicenseToken\",\n          args: [request[0], request[1], request[2], request[3]]\n        })\n      };\n    }\n\n    /**\n     * method verifyRegisterDerivative for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"verifyRegisterDerivative\",\n    value: (function () {\n      var _verifyRegisterDerivative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee108(request) {\n        var _yield$this$rpcClient41, call;\n        return _regeneratorRuntime().wrap(function _callee108$(_context108) {\n          while (1) switch (_context108.prev = _context108.next) {\n            case 0:\n              _context108.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyRegisterDerivative\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.parentIpId, request.licenseTermsId, request.licensee]\n              });\n            case 2:\n              _yield$this$rpcClient41 = _context108.sent;\n              call = _yield$this$rpcClient41.request;\n              _context108.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context108.abrupt(\"return\", _context108.sent);\n            case 7:\n            case \"end\":\n              return _context108.stop();\n          }\n        }, _callee108, this);\n      }));\n      function verifyRegisterDerivative(_x75) {\n        return _verifyRegisterDerivative.apply(this, arguments);\n      }\n      return verifyRegisterDerivative;\n    }()\n    /**\n     * method verifyRegisterDerivative for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"verifyRegisterDerivativeEncode\",\n    value: function verifyRegisterDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"verifyRegisterDerivative\",\n          args: [request.childIpId, request.parentIpId, request.licenseTermsId, request.licensee]\n        })\n      };\n    }\n\n    /**\n     * method verifyRegisterDerivativeForAllParents for contract PILicenseTemplate\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeForAllParentsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"verifyRegisterDerivativeForAllParents\",\n    value: (function () {\n      var _verifyRegisterDerivativeForAllParents = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee109(request) {\n        var _yield$this$rpcClient42, call;\n        return _regeneratorRuntime().wrap(function _callee109$(_context109) {\n          while (1) switch (_context109.prev = _context109.next) {\n            case 0:\n              _context109.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: piLicenseTemplateAbi,\n                address: this.address,\n                functionName: \"verifyRegisterDerivativeForAllParents\",\n                account: this.wallet.account,\n                args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.childIpOwner]\n              });\n            case 2:\n              _yield$this$rpcClient42 = _context109.sent;\n              call = _yield$this$rpcClient42.request;\n              _context109.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context109.abrupt(\"return\", _context109.sent);\n            case 7:\n            case \"end\":\n              return _context109.stop();\n          }\n        }, _callee109, this);\n      }));\n      function verifyRegisterDerivativeForAllParents(_x76) {\n        return _verifyRegisterDerivativeForAllParents.apply(this, arguments);\n      }\n      return verifyRegisterDerivativeForAllParents;\n    }()\n    /**\n     * method verifyRegisterDerivativeForAllParents for contract PILicenseTemplate with only encode\n     *\n     * @param request PiLicenseTemplateVerifyRegisterDerivativeForAllParentsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"verifyRegisterDerivativeForAllParentsEncode\",\n    value: function verifyRegisterDerivativeForAllParentsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: piLicenseTemplateAbi,\n          functionName: \"verifyRegisterDerivativeForAllParents\",\n          args: [request.childIpId, request.parentIpIds, request.licenseTermsIds, request.childIpOwner]\n        })\n      };\n    }\n  }]);\n}(PiLicenseTemplateReadOnlyClient);\n\n// Contract RoyaltyModule =============================================================\n\n/**\n * RoyaltyModuleIsWhitelistedRoyaltyPolicyRequest\n *\n * @param royaltyPolicy address\n */\n\n/**\n * RoyaltyModuleIsWhitelistedRoyaltyTokenRequest\n *\n * @param token address\n */\n\n/**\n * RoyaltyModulePayRoyaltyOnBehalfRequest\n *\n * @param receiverIpId address\n * @param payerIpId address\n * @param token address\n * @param amount uint256\n */\n\n/**\n * contract RoyaltyModule readonly method\n */\nvar RoyaltyModuleReadOnlyClient = /*#__PURE__*/function () {\n  function RoyaltyModuleReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain12;\n    _classCallCheck(this, RoyaltyModuleReadOnlyClient);\n    this.address = address || getAddress(royaltyModuleAddress, (_rpcClient$chain12 = rpcClient.chain) === null || _rpcClient$chain12 === void 0 ? void 0 : _rpcClient$chain12.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method isWhitelistedRoyaltyPolicy for contract RoyaltyModule\n   *\n   * @param request RoyaltyModuleIsWhitelistedRoyaltyPolicyRequest\n   * @return Promise<RoyaltyModuleIsWhitelistedRoyaltyPolicyResponse>\n   */\n  return _createClass(RoyaltyModuleReadOnlyClient, [{\n    key: \"isWhitelistedRoyaltyPolicy\",\n    value: (function () {\n      var _isWhitelistedRoyaltyPolicy = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee110(request) {\n        return _regeneratorRuntime().wrap(function _callee110$(_context110) {\n          while (1) switch (_context110.prev = _context110.next) {\n            case 0:\n              _context110.next = 2;\n              return this.rpcClient.readContract({\n                abi: royaltyModuleAbi,\n                address: this.address,\n                functionName: \"isWhitelistedRoyaltyPolicy\",\n                args: [request.royaltyPolicy]\n              });\n            case 2:\n              return _context110.abrupt(\"return\", _context110.sent);\n            case 3:\n            case \"end\":\n              return _context110.stop();\n          }\n        }, _callee110, this);\n      }));\n      function isWhitelistedRoyaltyPolicy(_x77) {\n        return _isWhitelistedRoyaltyPolicy.apply(this, arguments);\n      }\n      return isWhitelistedRoyaltyPolicy;\n    }()\n    /**\n     * method isWhitelistedRoyaltyToken for contract RoyaltyModule\n     *\n     * @param request RoyaltyModuleIsWhitelistedRoyaltyTokenRequest\n     * @return Promise<RoyaltyModuleIsWhitelistedRoyaltyTokenResponse>\n     */\n    )\n  }, {\n    key: \"isWhitelistedRoyaltyToken\",\n    value: (function () {\n      var _isWhitelistedRoyaltyToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee111(request) {\n        return _regeneratorRuntime().wrap(function _callee111$(_context111) {\n          while (1) switch (_context111.prev = _context111.next) {\n            case 0:\n              _context111.next = 2;\n              return this.rpcClient.readContract({\n                abi: royaltyModuleAbi,\n                address: this.address,\n                functionName: \"isWhitelistedRoyaltyToken\",\n                args: [request.token]\n              });\n            case 2:\n              return _context111.abrupt(\"return\", _context111.sent);\n            case 3:\n            case \"end\":\n              return _context111.stop();\n          }\n        }, _callee111, this);\n      }));\n      function isWhitelistedRoyaltyToken(_x78) {\n        return _isWhitelistedRoyaltyToken.apply(this, arguments);\n      }\n      return isWhitelistedRoyaltyToken;\n    }())\n  }]);\n}();\n\n/**\n * contract RoyaltyModule write method\n */\nvar RoyaltyModuleClient = /*#__PURE__*/function (_RoyaltyModuleReadOnl) {\n  function RoyaltyModuleClient(rpcClient, wallet, address) {\n    var _this10;\n    _classCallCheck(this, RoyaltyModuleClient);\n    _this10 = _callSuper(this, RoyaltyModuleClient, [rpcClient, address]);\n    _this10.wallet = wallet;\n    return _this10;\n  }\n\n  /**\n   * method payRoyaltyOnBehalf for contract RoyaltyModule\n   *\n   * @param request RoyaltyModulePayRoyaltyOnBehalfRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(RoyaltyModuleClient, _RoyaltyModuleReadOnl);\n  return _createClass(RoyaltyModuleClient, [{\n    key: \"payRoyaltyOnBehalf\",\n    value: (function () {\n      var _payRoyaltyOnBehalf = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee112(request) {\n        var _yield$this$rpcClient43, call;\n        return _regeneratorRuntime().wrap(function _callee112$(_context112) {\n          while (1) switch (_context112.prev = _context112.next) {\n            case 0:\n              _context112.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: royaltyModuleAbi,\n                address: this.address,\n                functionName: \"payRoyaltyOnBehalf\",\n                account: this.wallet.account,\n                args: [request.receiverIpId, request.payerIpId, request.token, request.amount]\n              });\n            case 2:\n              _yield$this$rpcClient43 = _context112.sent;\n              call = _yield$this$rpcClient43.request;\n              _context112.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context112.abrupt(\"return\", _context112.sent);\n            case 7:\n            case \"end\":\n              return _context112.stop();\n          }\n        }, _callee112, this);\n      }));\n      function payRoyaltyOnBehalf(_x79) {\n        return _payRoyaltyOnBehalf.apply(this, arguments);\n      }\n      return payRoyaltyOnBehalf;\n    }()\n    /**\n     * method payRoyaltyOnBehalf for contract RoyaltyModule with only encode\n     *\n     * @param request RoyaltyModulePayRoyaltyOnBehalfRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"payRoyaltyOnBehalfEncode\",\n    value: function payRoyaltyOnBehalfEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: royaltyModuleAbi,\n          functionName: \"payRoyaltyOnBehalf\",\n          args: [request.receiverIpId, request.payerIpId, request.token, request.amount]\n        })\n      };\n    }\n  }]);\n}(RoyaltyModuleReadOnlyClient);\n\n// Contract RoyaltyPolicyLAP =============================================================\n\n/**\n * RoyaltyPolicyLapGetRoyaltyDataRequest\n *\n * @param ipId address\n */\n\n/**\n * RoyaltyPolicyLapGetRoyaltyDataResponse\n *\n * @param 0 bool\n * @param 1 address\n * @param 2 uint32\n */\n\n/**\n * RoyaltyPolicyLapOnRoyaltyPaymentRequest\n *\n * @param caller address\n * @param ipId address\n * @param token address\n * @param amount uint256\n */\n\n/**\n * contract RoyaltyPolicyLAP readonly method\n */\nvar RoyaltyPolicyLapReadOnlyClient = /*#__PURE__*/function () {\n  function RoyaltyPolicyLapReadOnlyClient(rpcClient, address) {\n    var _rpcClient$chain13;\n    _classCallCheck(this, RoyaltyPolicyLapReadOnlyClient);\n    this.address = address || getAddress(royaltyPolicyLapAddress, (_rpcClient$chain13 = rpcClient.chain) === null || _rpcClient$chain13 === void 0 ? void 0 : _rpcClient$chain13.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * method getRoyaltyData for contract RoyaltyPolicyLAP\n   *\n   * @param request RoyaltyPolicyLapGetRoyaltyDataRequest\n   * @return Promise<RoyaltyPolicyLapGetRoyaltyDataResponse>\n   */\n  return _createClass(RoyaltyPolicyLapReadOnlyClient, [{\n    key: \"getRoyaltyData\",\n    value: (function () {\n      var _getRoyaltyData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee113(request) {\n        return _regeneratorRuntime().wrap(function _callee113$(_context113) {\n          while (1) switch (_context113.prev = _context113.next) {\n            case 0:\n              _context113.next = 2;\n              return this.rpcClient.readContract({\n                abi: royaltyPolicyLapAbi,\n                address: this.address,\n                functionName: \"getRoyaltyData\",\n                args: [request.ipId]\n              });\n            case 2:\n              return _context113.abrupt(\"return\", _context113.sent);\n            case 3:\n            case \"end\":\n              return _context113.stop();\n          }\n        }, _callee113, this);\n      }));\n      function getRoyaltyData(_x80) {\n        return _getRoyaltyData.apply(this, arguments);\n      }\n      return getRoyaltyData;\n    }())\n  }]);\n}();\n\n/**\n * contract RoyaltyPolicyLAP write method\n */\nvar RoyaltyPolicyLapClient = /*#__PURE__*/function (_RoyaltyPolicyLapRead) {\n  function RoyaltyPolicyLapClient(rpcClient, wallet, address) {\n    var _this11;\n    _classCallCheck(this, RoyaltyPolicyLapClient);\n    _this11 = _callSuper(this, RoyaltyPolicyLapClient, [rpcClient, address]);\n    _this11.wallet = wallet;\n    return _this11;\n  }\n\n  /**\n   * method onRoyaltyPayment for contract RoyaltyPolicyLAP\n   *\n   * @param request RoyaltyPolicyLapOnRoyaltyPaymentRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(RoyaltyPolicyLapClient, _RoyaltyPolicyLapRead);\n  return _createClass(RoyaltyPolicyLapClient, [{\n    key: \"onRoyaltyPayment\",\n    value: (function () {\n      var _onRoyaltyPayment = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee114(request) {\n        var _yield$this$rpcClient44, call;\n        return _regeneratorRuntime().wrap(function _callee114$(_context114) {\n          while (1) switch (_context114.prev = _context114.next) {\n            case 0:\n              _context114.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: royaltyPolicyLapAbi,\n                address: this.address,\n                functionName: \"onRoyaltyPayment\",\n                account: this.wallet.account,\n                args: [request.caller, request.ipId, request.token, request.amount]\n              });\n            case 2:\n              _yield$this$rpcClient44 = _context114.sent;\n              call = _yield$this$rpcClient44.request;\n              _context114.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context114.abrupt(\"return\", _context114.sent);\n            case 7:\n            case \"end\":\n              return _context114.stop();\n          }\n        }, _callee114, this);\n      }));\n      function onRoyaltyPayment(_x81) {\n        return _onRoyaltyPayment.apply(this, arguments);\n      }\n      return onRoyaltyPayment;\n    }()\n    /**\n     * method onRoyaltyPayment for contract RoyaltyPolicyLAP with only encode\n     *\n     * @param request RoyaltyPolicyLapOnRoyaltyPaymentRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"onRoyaltyPaymentEncode\",\n    value: function onRoyaltyPaymentEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: royaltyPolicyLapAbi,\n          functionName: \"onRoyaltyPayment\",\n          args: [request.caller, request.ipId, request.token, request.amount]\n        })\n      };\n    }\n  }]);\n}(RoyaltyPolicyLapReadOnlyClient);\n\n// Contract SPG =============================================================\n\n/**\n * SpgCollectionCreatedEvent\n *\n * @param nftContract address\n */\n\n/**\n * SpgCreateCollectionRequest\n *\n * @param name string\n * @param symbol string\n * @param maxSupply uint32\n * @param mintFee uint256\n * @param mintFeeToken address\n * @param owner address\n */\n\n/**\n * SpgMintAndRegisterIpRequest\n *\n * @param nftContract address\n * @param recipient address\n * @param ipMetadata tuple\n */\n\n/**\n * SpgMintAndRegisterIpAndAttachPilTermsRequest\n *\n * @param nftContract address\n * @param recipient address\n * @param ipMetadata tuple\n * @param terms tuple\n */\n\n/**\n * SpgMintAndRegisterIpAndMakeDerivativeRequest\n *\n * @param nftContract address\n * @param derivData tuple\n * @param ipMetadata tuple\n * @param recipient address\n */\n\n/**\n * SpgMintAndRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n *\n * @param nftContract address\n * @param licenseTokenIds uint256[]\n * @param royaltyContext bytes\n * @param ipMetadata tuple\n * @param recipient address\n */\n\n/**\n * SpgRegisterIpRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param ipMetadata tuple\n * @param sigMetadata tuple\n */\n\n/**\n * SpgRegisterIpAndAttachPilTermsRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param ipMetadata tuple\n * @param terms tuple\n * @param sigMetadata tuple\n * @param sigAttach tuple\n */\n\n/**\n * SpgRegisterIpAndMakeDerivativeRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param derivData tuple\n * @param ipMetadata tuple\n * @param sigMetadata tuple\n * @param sigRegister tuple\n */\n\n/**\n * SpgRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n *\n * @param nftContract address\n * @param tokenId uint256\n * @param licenseTokenIds uint256[]\n * @param royaltyContext bytes\n * @param ipMetadata tuple\n * @param sigMetadata tuple\n * @param sigRegister tuple\n */\n\n/**\n * SpgRegisterPilTermsAndAttachRequest\n *\n * @param ipId address\n * @param terms tuple\n */\n\n/**\n * contract SPG event\n */\nvar SpgEventClient = /*#__PURE__*/function () {\n  function SpgEventClient(rpcClient, address) {\n    var _rpcClient$chain14;\n    _classCallCheck(this, SpgEventClient);\n    this.address = address || getAddress(spgAddress, (_rpcClient$chain14 = rpcClient.chain) === null || _rpcClient$chain14 === void 0 ? void 0 : _rpcClient$chain14.id);\n    this.rpcClient = rpcClient;\n  }\n\n  /**\n   * event CollectionCreated for contract SPG\n   */\n  return _createClass(SpgEventClient, [{\n    key: \"watchCollectionCreatedEvent\",\n    value: function watchCollectionCreatedEvent(_onLogs31) {\n      return this.rpcClient.watchContractEvent({\n        abi: spgAbi,\n        address: this.address,\n        eventName: \"CollectionCreated\",\n        onLogs: function onLogs(evs) {\n          evs.forEach(function (it) {\n            return _onLogs31(it.transactionHash, it.args);\n          });\n        }\n      });\n    }\n\n    /**\n     * parse tx receipt event CollectionCreated for contract SPG\n     */\n  }, {\n    key: \"parseTxCollectionCreatedEvent\",\n    value: function parseTxCollectionCreatedEvent(txReceipt) {\n      var targetLogs = [];\n      var _iterator31 = _createForOfIteratorHelper(txReceipt.logs),\n        _step31;\n      try {\n        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n          var log = _step31.value;\n          try {\n            var event = decodeEventLog({\n              abi: spgAbi,\n              eventName: \"CollectionCreated\",\n              data: log.data,\n              topics: log.topics\n            });\n            if (event.eventName === \"CollectionCreated\") {\n              targetLogs.push(event.args);\n            }\n          } catch (e) {\n            /* empty */\n          }\n        }\n      } catch (err) {\n        _iterator31.e(err);\n      } finally {\n        _iterator31.f();\n      }\n      return targetLogs;\n    }\n  }]);\n}();\n\n/**\n * contract SPG write method\n */\nvar SpgClient = /*#__PURE__*/function (_SpgEventClient) {\n  function SpgClient(rpcClient, wallet, address) {\n    var _this12;\n    _classCallCheck(this, SpgClient);\n    _this12 = _callSuper(this, SpgClient, [rpcClient, address]);\n    _this12.wallet = wallet;\n    return _this12;\n  }\n\n  /**\n   * method createCollection for contract SPG\n   *\n   * @param request SpgCreateCollectionRequest\n   * @return Promise<WriteContractReturnType>\n   */\n  _inherits(SpgClient, _SpgEventClient);\n  return _createClass(SpgClient, [{\n    key: \"createCollection\",\n    value: (function () {\n      var _createCollection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee115(request) {\n        var _yield$this$rpcClient45, call;\n        return _regeneratorRuntime().wrap(function _callee115$(_context115) {\n          while (1) switch (_context115.prev = _context115.next) {\n            case 0:\n              _context115.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"createCollection\",\n                account: this.wallet.account,\n                args: [request.name, request.symbol, request.maxSupply, request.mintFee, request.mintFeeToken, request.owner]\n              });\n            case 2:\n              _yield$this$rpcClient45 = _context115.sent;\n              call = _yield$this$rpcClient45.request;\n              _context115.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context115.abrupt(\"return\", _context115.sent);\n            case 7:\n            case \"end\":\n              return _context115.stop();\n          }\n        }, _callee115, this);\n      }));\n      function createCollection(_x82) {\n        return _createCollection.apply(this, arguments);\n      }\n      return createCollection;\n    }()\n    /**\n     * method createCollection for contract SPG with only encode\n     *\n     * @param request SpgCreateCollectionRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"createCollectionEncode\",\n    value: function createCollectionEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"createCollection\",\n          args: [request.name, request.symbol, request.maxSupply, request.mintFee, request.mintFeeToken, request.owner]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIp for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIp\",\n    value: (function () {\n      var _mintAndRegisterIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee116(request) {\n        var _yield$this$rpcClient46, call;\n        return _regeneratorRuntime().wrap(function _callee116$(_context116) {\n          while (1) switch (_context116.prev = _context116.next) {\n            case 0:\n              _context116.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIp\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.recipient, request.ipMetadata]\n              });\n            case 2:\n              _yield$this$rpcClient46 = _context116.sent;\n              call = _yield$this$rpcClient46.request;\n              _context116.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context116.abrupt(\"return\", _context116.sent);\n            case 7:\n            case \"end\":\n              return _context116.stop();\n          }\n        }, _callee116, this);\n      }));\n      function mintAndRegisterIp(_x83) {\n        return _mintAndRegisterIp.apply(this, arguments);\n      }\n      return mintAndRegisterIp;\n    }()\n    /**\n     * method mintAndRegisterIp for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"mintAndRegisterIpEncode\",\n    value: function mintAndRegisterIpEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIp\",\n          args: [request.nftContract, request.recipient, request.ipMetadata]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIpAndAttachPILTerms for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpAndAttachPilTermsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIpAndAttachPilTerms\",\n    value: (function () {\n      var _mintAndRegisterIpAndAttachPilTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee117(request) {\n        var _yield$this$rpcClient47, call;\n        return _regeneratorRuntime().wrap(function _callee117$(_context117) {\n          while (1) switch (_context117.prev = _context117.next) {\n            case 0:\n              _context117.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIpAndAttachPILTerms\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.recipient, request.ipMetadata, request.terms]\n              });\n            case 2:\n              _yield$this$rpcClient47 = _context117.sent;\n              call = _yield$this$rpcClient47.request;\n              _context117.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context117.abrupt(\"return\", _context117.sent);\n            case 7:\n            case \"end\":\n              return _context117.stop();\n          }\n        }, _callee117, this);\n      }));\n      function mintAndRegisterIpAndAttachPilTerms(_x84) {\n        return _mintAndRegisterIpAndAttachPilTerms.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndAttachPilTerms;\n    }()\n    /**\n     * method mintAndRegisterIpAndAttachPILTerms for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpAndAttachPilTermsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"mintAndRegisterIpAndAttachPilTermsEncode\",\n    value: function mintAndRegisterIpAndAttachPilTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIpAndAttachPILTerms\",\n          args: [request.nftContract, request.recipient, request.ipMetadata, request.terms]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIpAndMakeDerivative for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivative\",\n    value: (function () {\n      var _mintAndRegisterIpAndMakeDerivative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee118(request) {\n        var _yield$this$rpcClient48, call;\n        return _regeneratorRuntime().wrap(function _callee118$(_context118) {\n          while (1) switch (_context118.prev = _context118.next) {\n            case 0:\n              _context118.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIpAndMakeDerivative\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.derivData, request.ipMetadata, request.recipient]\n              });\n            case 2:\n              _yield$this$rpcClient48 = _context118.sent;\n              call = _yield$this$rpcClient48.request;\n              _context118.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context118.abrupt(\"return\", _context118.sent);\n            case 7:\n            case \"end\":\n              return _context118.stop();\n          }\n        }, _callee118, this);\n      }));\n      function mintAndRegisterIpAndMakeDerivative(_x85) {\n        return _mintAndRegisterIpAndMakeDerivative.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndMakeDerivative;\n    }()\n    /**\n     * method mintAndRegisterIpAndMakeDerivative for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivativeEncode\",\n    value: function mintAndRegisterIpAndMakeDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIpAndMakeDerivative\",\n          args: [request.nftContract, request.derivData, request.ipMetadata, request.recipient]\n        })\n      };\n    }\n\n    /**\n     * method mintAndRegisterIpAndMakeDerivativeWithLicenseTokens for contract SPG\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n    value: (function () {\n      var _mintAndRegisterIpAndMakeDerivativeWithLicenseTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee119(request) {\n        var _yield$this$rpcClient49, call;\n        return _regeneratorRuntime().wrap(function _callee119$(_context119) {\n          while (1) switch (_context119.prev = _context119.next) {\n            case 0:\n              _context119.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.recipient]\n              });\n            case 2:\n              _yield$this$rpcClient49 = _context119.sent;\n              call = _yield$this$rpcClient49.request;\n              _context119.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context119.abrupt(\"return\", _context119.sent);\n            case 7:\n            case \"end\":\n              return _context119.stop();\n          }\n        }, _callee119, this);\n      }));\n      function mintAndRegisterIpAndMakeDerivativeWithLicenseTokens(_x86) {\n        return _mintAndRegisterIpAndMakeDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndMakeDerivativeWithLicenseTokens;\n    }()\n    /**\n     * method mintAndRegisterIpAndMakeDerivativeWithLicenseTokens for contract SPG with only encode\n     *\n     * @param request SpgMintAndRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokensEncode\",\n    value: function mintAndRegisterIpAndMakeDerivativeWithLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"mintAndRegisterIpAndMakeDerivativeWithLicenseTokens\",\n          args: [request.nftContract, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.recipient]\n        })\n      };\n    }\n\n    /**\n     * method registerIp for contract SPG\n     *\n     * @param request SpgRegisterIpRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIp\",\n    value: (function () {\n      var _registerIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee120(request) {\n        var _yield$this$rpcClient50, call;\n        return _regeneratorRuntime().wrap(function _callee120$(_context120) {\n          while (1) switch (_context120.prev = _context120.next) {\n            case 0:\n              _context120.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIp\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.ipMetadata, request.sigMetadata]\n              });\n            case 2:\n              _yield$this$rpcClient50 = _context120.sent;\n              call = _yield$this$rpcClient50.request;\n              _context120.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context120.abrupt(\"return\", _context120.sent);\n            case 7:\n            case \"end\":\n              return _context120.stop();\n          }\n        }, _callee120, this);\n      }));\n      function registerIp(_x87) {\n        return _registerIp.apply(this, arguments);\n      }\n      return registerIp;\n    }()\n    /**\n     * method registerIp for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerIpEncode\",\n    value: function registerIpEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIp\",\n          args: [request.nftContract, request.tokenId, request.ipMetadata, request.sigMetadata]\n        })\n      };\n    }\n\n    /**\n     * method registerIpAndAttachPILTerms for contract SPG\n     *\n     * @param request SpgRegisterIpAndAttachPilTermsRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIpAndAttachPilTerms\",\n    value: (function () {\n      var _registerIpAndAttachPilTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee121(request) {\n        var _yield$this$rpcClient51, call;\n        return _regeneratorRuntime().wrap(function _callee121$(_context121) {\n          while (1) switch (_context121.prev = _context121.next) {\n            case 0:\n              _context121.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIpAndAttachPILTerms\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.ipMetadata, request.terms, request.sigMetadata, request.sigAttach]\n              });\n            case 2:\n              _yield$this$rpcClient51 = _context121.sent;\n              call = _yield$this$rpcClient51.request;\n              _context121.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context121.abrupt(\"return\", _context121.sent);\n            case 7:\n            case \"end\":\n              return _context121.stop();\n          }\n        }, _callee121, this);\n      }));\n      function registerIpAndAttachPilTerms(_x88) {\n        return _registerIpAndAttachPilTerms.apply(this, arguments);\n      }\n      return registerIpAndAttachPilTerms;\n    }()\n    /**\n     * method registerIpAndAttachPILTerms for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpAndAttachPilTermsRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerIpAndAttachPilTermsEncode\",\n    value: function registerIpAndAttachPilTermsEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIpAndAttachPILTerms\",\n          args: [request.nftContract, request.tokenId, request.ipMetadata, request.terms, request.sigMetadata, request.sigAttach]\n        })\n      };\n    }\n\n    /**\n     * method registerIpAndMakeDerivative for contract SPG\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIpAndMakeDerivative\",\n    value: (function () {\n      var _registerIpAndMakeDerivative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee122(request) {\n        var _yield$this$rpcClient52, call;\n        return _regeneratorRuntime().wrap(function _callee122$(_context122) {\n          while (1) switch (_context122.prev = _context122.next) {\n            case 0:\n              _context122.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIpAndMakeDerivative\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.derivData, request.ipMetadata, request.sigMetadata, request.sigRegister]\n              });\n            case 2:\n              _yield$this$rpcClient52 = _context122.sent;\n              call = _yield$this$rpcClient52.request;\n              _context122.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context122.abrupt(\"return\", _context122.sent);\n            case 7:\n            case \"end\":\n              return _context122.stop();\n          }\n        }, _callee122, this);\n      }));\n      function registerIpAndMakeDerivative(_x89) {\n        return _registerIpAndMakeDerivative.apply(this, arguments);\n      }\n      return registerIpAndMakeDerivative;\n    }()\n    /**\n     * method registerIpAndMakeDerivative for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerIpAndMakeDerivativeEncode\",\n    value: function registerIpAndMakeDerivativeEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIpAndMakeDerivative\",\n          args: [request.nftContract, request.tokenId, request.derivData, request.ipMetadata, request.sigMetadata, request.sigRegister]\n        })\n      };\n    }\n\n    /**\n     * method registerIpAndMakeDerivativeWithLicenseTokens for contract SPG\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n    value: (function () {\n      var _registerIpAndMakeDerivativeWithLicenseTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee123(request) {\n        var _yield$this$rpcClient53, call;\n        return _regeneratorRuntime().wrap(function _callee123$(_context123) {\n          while (1) switch (_context123.prev = _context123.next) {\n            case 0:\n              _context123.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n                account: this.wallet.account,\n                args: [request.nftContract, request.tokenId, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.sigMetadata, request.sigRegister]\n              });\n            case 2:\n              _yield$this$rpcClient53 = _context123.sent;\n              call = _yield$this$rpcClient53.request;\n              _context123.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context123.abrupt(\"return\", _context123.sent);\n            case 7:\n            case \"end\":\n              return _context123.stop();\n          }\n        }, _callee123, this);\n      }));\n      function registerIpAndMakeDerivativeWithLicenseTokens(_x90) {\n        return _registerIpAndMakeDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return registerIpAndMakeDerivativeWithLicenseTokens;\n    }()\n    /**\n     * method registerIpAndMakeDerivativeWithLicenseTokens for contract SPG with only encode\n     *\n     * @param request SpgRegisterIpAndMakeDerivativeWithLicenseTokensRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerIpAndMakeDerivativeWithLicenseTokensEncode\",\n    value: function registerIpAndMakeDerivativeWithLicenseTokensEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerIpAndMakeDerivativeWithLicenseTokens\",\n          args: [request.nftContract, request.tokenId, request.licenseTokenIds, request.royaltyContext, request.ipMetadata, request.sigMetadata, request.sigRegister]\n        })\n      };\n    }\n\n    /**\n     * method registerPILTermsAndAttach for contract SPG\n     *\n     * @param request SpgRegisterPilTermsAndAttachRequest\n     * @return Promise<WriteContractReturnType>\n     */\n  }, {\n    key: \"registerPilTermsAndAttach\",\n    value: (function () {\n      var _registerPilTermsAndAttach = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee124(request) {\n        var _yield$this$rpcClient54, call;\n        return _regeneratorRuntime().wrap(function _callee124$(_context124) {\n          while (1) switch (_context124.prev = _context124.next) {\n            case 0:\n              _context124.next = 2;\n              return this.rpcClient.simulateContract({\n                abi: spgAbi,\n                address: this.address,\n                functionName: \"registerPILTermsAndAttach\",\n                account: this.wallet.account,\n                args: [request.ipId, request.terms]\n              });\n            case 2:\n              _yield$this$rpcClient54 = _context124.sent;\n              call = _yield$this$rpcClient54.request;\n              _context124.next = 6;\n              return this.wallet.writeContract(call);\n            case 6:\n              return _context124.abrupt(\"return\", _context124.sent);\n            case 7:\n            case \"end\":\n              return _context124.stop();\n          }\n        }, _callee124, this);\n      }));\n      function registerPilTermsAndAttach(_x91) {\n        return _registerPilTermsAndAttach.apply(this, arguments);\n      }\n      return registerPilTermsAndAttach;\n    }()\n    /**\n     * method registerPILTermsAndAttach for contract SPG with only encode\n     *\n     * @param request SpgRegisterPilTermsAndAttachRequest\n     * @return EncodedTxData\n     */\n    )\n  }, {\n    key: \"registerPilTermsAndAttachEncode\",\n    value: function registerPilTermsAndAttachEncode(request) {\n      return {\n        to: this.address,\n        data: encodeFunctionData({\n          abi: spgAbi,\n          functionName: \"registerPILTermsAndAttach\",\n          args: [request.ipId, request.terms]\n        })\n      };\n    }\n  }]);\n}(SpgEventClient);\n\n/**\n * This structure defines the terms for a Programmable IP License (PIL). These terms can be attached to IP Assets. The legal document of the PIL can be found in this repository.\n * @type LicenseTerms\n **/\n\nvar PIL_TYPE = /*#__PURE__*/function (PIL_TYPE) {\n  PIL_TYPE[PIL_TYPE[\"NON_COMMERCIAL_REMIX\"] = 0] = \"NON_COMMERCIAL_REMIX\";\n  PIL_TYPE[PIL_TYPE[\"COMMERCIAL_USE\"] = 1] = \"COMMERCIAL_USE\";\n  PIL_TYPE[PIL_TYPE[\"COMMERCIAL_REMIX\"] = 2] = \"COMMERCIAL_REMIX\";\n  return PIL_TYPE;\n}({});\n\nfunction getLicenseTermByType(type, term) {\n  var licenseTerms = {\n    transferable: true,\n    royaltyPolicy: zeroAddress,\n    defaultMintingFee: BigInt(0),\n    expiration: BigInt(0),\n    commercialUse: false,\n    commercialAttribution: false,\n    commercializerChecker: zeroAddress,\n    commercializerCheckerData: zeroAddress,\n    commercialRevShare: 0,\n    commercialRevCeiling: BigInt(0),\n    derivativesAllowed: true,\n    derivativesAttribution: true,\n    derivativesApproval: false,\n    derivativesReciprocal: true,\n    derivativeRevCeiling: BigInt(0),\n    currency: zeroAddress,\n    uri: \"\"\n  };\n  if (type === PIL_TYPE.NON_COMMERCIAL_REMIX) {\n    licenseTerms.commercializerCheckerData = \"0x\";\n    return licenseTerms;\n  } else if (type === PIL_TYPE.COMMERCIAL_USE) {\n    if (!term || term.defaultMintingFee === undefined || term.currency === undefined) {\n      throw new Error(\"MintingFee currency are required for commercial use PIL.\");\n    }\n    licenseTerms.royaltyPolicy = getAddress$2(term.royaltyPolicyLAPAddress);\n    licenseTerms.defaultMintingFee = BigInt(term.defaultMintingFee);\n    licenseTerms.commercialUse = true;\n    licenseTerms.commercialAttribution = true;\n    licenseTerms.derivativesReciprocal = false;\n    licenseTerms.currency = getAddress$2(term.currency);\n    return licenseTerms;\n  } else {\n    if (!term || term.defaultMintingFee === undefined || term.currency === undefined || term.commercialRevShare === undefined) {\n      throw new Error(\"MintingFee, currency and commercialRevShare are required for commercial remix PIL.\");\n    }\n    if (term.commercialRevShare < 0 || term.commercialRevShare > 100) {\n      throw new Error(\"CommercialRevShare should be between 0 and 100.\");\n    }\n    licenseTerms.royaltyPolicy = getAddress$2(term.royaltyPolicyLAPAddress);\n    licenseTerms.defaultMintingFee = BigInt(term.defaultMintingFee);\n    licenseTerms.commercialUse = true;\n    licenseTerms.commercialAttribution = true;\n    licenseTerms.commercialRevShare = term.commercialRevShare / 100 * 100000000;\n    licenseTerms.derivativesReciprocal = true;\n    licenseTerms.currency = getAddress$2(term.currency);\n    return licenseTerms;\n  }\n}\n\nvar AddressZero = \"0x0000000000000000000000000000000000000000\";\nvar HashZero = \"0x0000000000000000000000000000000000000000000000000000000000000000\";\nvar defaultFunctionSelector = \"0x00000000\";\n\n/**\n * Get the signature for setting permissions.\n * @param param - The parameter object containing necessary data to get the signature.\n * @param param.ipId - The IP ID.\n * @param param.deadline - The deadline.\n * @param param.nonce - The nonce.\n * @param param.wallet - The wallet client.\n * @param param.chainId - The chain ID.\n * @param param.permissions - The permissions.\n * @param param.permissionFunc - The permission function,default function is setPermission.\n * @returns A Promise that resolves to the signature.\n */\nvar getPermissionSignature = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(param) {\n    var ipId, deadline, state, wallet, chainId, permissions, permissionFunc, permissionFunction, accessAddress, data, nonce;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          ipId = param.ipId, deadline = param.deadline, state = param.state, wallet = param.wallet, chainId = param.chainId, permissions = param.permissions, permissionFunc = param.permissionFunc;\n          if (wallet.signTypedData) {\n            _context.next = 3;\n            break;\n          }\n          throw new Error(\"The wallet client does not support signTypedData, please try again.\");\n        case 3:\n          if (wallet.account) {\n            _context.next = 5;\n            break;\n          }\n          throw new Error(\"The wallet client does not have an account, please try again.\");\n        case 5:\n          permissionFunction = permissionFunc ? permissionFunc : \"setPermission\";\n          accessAddress = accessControllerAddress[Number(chainId)];\n          data = encodeFunctionData({\n            abi: accessControllerAbi,\n            functionName: permissionFunc ? permissionFunc : \"setPermission\",\n            args: permissionFunction === \"setPermission\" ? [getAddress$1(permissions[0].ipId, \"permissions[0].ipId\"), getAddress$1(permissions[0].signer, \"permissions[0].signer\"), getAddress$1(permissions[0].to, \"permissions[0].to\"), permissions[0].func ? toFunctionSelector(permissions[0].func) : defaultFunctionSelector, permissions[0].permission] : [permissions.map(function (item, index) {\n              return {\n                ipAccount: getAddress$1(item.ipId, \"permissions[\".concat(index, \"].ipId\")),\n                signer: getAddress$1(item.signer, \"permissions[\".concat(index, \"].signer\")),\n                to: getAddress$1(item.to, \"permissions[\".concat(index, \"].to\")),\n                func: item.func ? toFunctionSelector(item.func) : defaultFunctionSelector,\n                permission: item.permission\n              };\n            })]\n          });\n          nonce = keccak256(encodeAbiParameters([{\n            name: \"\",\n            type: \"bytes32\"\n          }, {\n            name: \"\",\n            type: \"bytes\"\n          }], [state, encodeFunctionData({\n            abi: ipAccountImplAbi,\n            functionName: \"execute\",\n            args: [accessAddress, 0n, data]\n          })]));\n          _context.next = 11;\n          return wallet.signTypedData({\n            account: wallet.account,\n            domain: {\n              name: \"Story Protocol IP Account\",\n              version: \"1\",\n              chainId: Number(chainId),\n              verifyingContract: getAddress$1(ipId, \"ipId\")\n            },\n            types: {\n              Execute: [{\n                name: \"to\",\n                type: \"address\"\n              }, {\n                name: \"value\",\n                type: \"uint256\"\n              }, {\n                name: \"data\",\n                type: \"bytes\"\n              }, {\n                name: \"nonce\",\n                type: \"bytes32\"\n              }, {\n                name: \"deadline\",\n                type: \"uint256\"\n              }]\n            },\n            primaryType: \"Execute\",\n            message: {\n              to: getAddress$1(accessControllerAddress[Number(chainId)], \"accessControllerAddress\"),\n              value: BigInt(0),\n              data: data,\n              nonce: nonce,\n              deadline: BigInt(deadline)\n            }\n          });\n        case 11:\n          return _context.abrupt(\"return\", _context.sent);\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return function getPermissionSignature(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nvar getDeadline = function getDeadline(deadline) {\n  if (deadline && (isNaN(Number(deadline)) || BigInt(deadline) < 0n)) {\n    throw new Error(\"Invalid deadline value.\");\n  }\n  var timestamp = BigInt(Date.now());\n  return deadline ? timestamp + BigInt(deadline) : timestamp + 1000n;\n};\n\n/**\n * Permission level\n * @enum {number}\n **/\nvar AccessPermission = /*#__PURE__*/function (AccessPermission) {\n  AccessPermission[AccessPermission[\"ABSTAIN\"] = 0] = \"ABSTAIN\";\n  AccessPermission[AccessPermission[\"ALLOW\"] = 1] = \"ALLOW\";\n  AccessPermission[AccessPermission[\"DENY\"] = 2] = \"DENY\";\n  return AccessPermission;\n}({});\n\nvar _excluded = [\"title\", \"description\", \"ipType\", \"relationships\", \"createdAt\", \"watermarkImg\", \"creators\", \"media\", \"attributes\", \"app\", \"tags\", \"robotTerms\"];\nvar IPAssetClient = /*#__PURE__*/function () {\n  function IPAssetClient(rpcClient, wallet, chainId) {\n    _classCallCheck(this, IPAssetClient);\n    this.licensingModuleClient = new LicensingModuleClient(rpcClient, wallet);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(rpcClient, wallet);\n    this.licenseTemplateClient = new PiLicenseTemplateClient(rpcClient, wallet);\n    this.licenseRegistryReadOnlyClient = new LicenseRegistryReadOnlyClient(rpcClient);\n    this.licenseTokenReadOnlyClient = new LicenseTokenReadOnlyClient(rpcClient);\n    this.royaltyPolicyLAPClient = new RoyaltyPolicyLapClient(rpcClient, wallet);\n    this.accessControllerClient = new AccessControllerClient(rpcClient, wallet);\n    this.coreMetadataModuleClient = new CoreMetadataModuleClient(rpcClient, wallet);\n    this.spgClient = new SpgClient(rpcClient, wallet);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n    this.chainId = chainId;\n  }\n\n  /**\n   * Create a new `IpCreator` object with the specified details.\n   * @param params - The parameters required to create the `IpCreator` object.\n   *   @param params.name The name of the creator.\n   *   @param params.address The wallet address of the creator.\n   *   @param params.description [Optional] A description of the creator.\n   *   @param params.image [Optional] The URL or path to an image representing the creator.\n   *   @param params.socialMedia [Optional] An array of social media profiles associated with the creator.\n   *     @param params.socialMedia[].platform The name of the social media platform.\n   *     @param params.socialMedia[].url The URL to the creator's profile on the platform.\n   *  @param params.contributionPercent The percentage of contribution by the creator, must add up to 100.\n   *  @param params.role [Optional] The role of the creator in relation to the IP.\n   * @returns An `IpCreator` object containing the provided details.\n   */\n  return _createClass(IPAssetClient, [{\n    key: \"generateCreatorMetadata\",\n    value: function generateCreatorMetadata(param) {\n      var name = param.name,\n        address = param.address,\n        _param$description = param.description,\n        description = _param$description === void 0 ? \"\" : _param$description,\n        _param$image = param.image,\n        image = _param$image === void 0 ? \"\" : _param$image,\n        _param$socialMedia = param.socialMedia,\n        socialMedia = _param$socialMedia === void 0 ? [] : _param$socialMedia,\n        contributionPercent = param.contributionPercent,\n        _param$role = param.role,\n        role = _param$role === void 0 ? \"\" : _param$role;\n      return {\n        name: name,\n        address: address,\n        description: description,\n        image: image,\n        socialMedia: socialMedia,\n        contributionPercent: contributionPercent,\n        role: role\n      };\n    }\n\n    /**\n     * Create a new `IpMetadata` object with the specified details.\n     * @param params - The parameters required to create the `IpMetadata` object.\n     *   @param params.title [Optional] The title of the IP.\n     *   @param params.description [Optional] A description of the IP.\n     *   @param params.ipType [Optional] The type of the IP asset (e.g., \"character\", \"chapter\").\n     *   @param params.relationships [Optional] An array of relationships between this IP and its parent IPs.\n     *     @param params.relationships[].ipId The ID of the parent IP.\n     *     @param params.relationships[].type The type of relationship (e.g., \"APPEARS_IN\").\n     *   @param params.createdAt [Optional] The creation date and time of the IP in ISO 8601 format.\n     *   @param params.watermarkImg [Optional] The URL or path to an image used as a watermark for the IP.\n     *   @param params.creators [Optional] An array of creators associated with the IP.\n     *     @param params.creators[].name The name of the creator.\n     *     @param params.creators[].address The address of the creator.\n     *     @param params.creators[].description [Optional] A description of the creator.\n     *     @param params.creators[].image [Optional] The URL or path to an image representing the creator.\n     *     @param params.creators[].socialMedia [Optional] An array of social media profiles for the creator.\n     *     @param params.creators[].socialMedia[].platform The social media platform name.\n     *     @param params.creators[].socialMedia[].url The URL to the creator's profile.\n     *     @param params.creators[].role [Optional] The role of the creator in relation to the IP.\n     *     @param params.creators[].contributionPercent The percentage of contribution by the creator.\n     *   @param params.media [Optional] An array of media related to the IP.\n     *     @param params.media[].name The name of the media.\n     *     @param params.media[].url The URL to the media.\n     *     @param params.media[].mimeType The MIME type of the media.\n     *   @param params.attributes [Optional] An array of key-value pairs providing additional metadata.\n     *     @param params.attributes[].key The key for the attribute.\n     *     @param params.attributes[].value The value for the attribute, can be a string or number.\n     *   @param params.app [Optional] Information about the application associated with the IP.\n     *     @param params.app.id The ID of the application.\n     *     @param params.app.name The name of the application.\n     *     @param params.app.website The website URL of the application.\n     *   @param params.tags [Optional] An array of tags associated with the IP.\n     *   @param params.robotTerms [Optional] Robot terms for the IP, specifying access rules.\n     *     @param params.robotTerms.userAgent The user agent for which the rules apply.\n     *     @param params.robotTerms.allow The rules allowing access.\n     *   @param params.additionalProperties [Optional] Any additional key-value pairs to include in the metadata.\n     * @returns An `IpMetadata` object containing the provided details and any additional properties.\n     */\n  }, {\n    key: \"generateIpMetadata\",\n    value: function generateIpMetadata(param) {\n      var _param$title = param.title,\n        title = _param$title === void 0 ? \"\" : _param$title,\n        _param$description2 = param.description,\n        description = _param$description2 === void 0 ? \"\" : _param$description2,\n        _param$ipType = param.ipType,\n        ipType = _param$ipType === void 0 ? \"\" : _param$ipType,\n        _param$relationships = param.relationships,\n        relationships = _param$relationships === void 0 ? [] : _param$relationships,\n        _param$createdAt = param.createdAt,\n        createdAt = _param$createdAt === void 0 ? \"\" : _param$createdAt,\n        _param$watermarkImg = param.watermarkImg,\n        watermarkImg = _param$watermarkImg === void 0 ? \"\" : _param$watermarkImg,\n        _param$creators = param.creators,\n        creators = _param$creators === void 0 ? [] : _param$creators,\n        _param$media = param.media,\n        media = _param$media === void 0 ? [] : _param$media,\n        _param$attributes = param.attributes,\n        attributes = _param$attributes === void 0 ? [] : _param$attributes,\n        app = param.app,\n        _param$tags = param.tags,\n        tags = _param$tags === void 0 ? [] : _param$tags,\n        robotTerms = param.robotTerms,\n        additionalProperties = _objectWithoutProperties(param, _excluded);\n      return _objectSpread2({\n        title: title,\n        description: description,\n        ipType: ipType,\n        relationships: relationships,\n        createdAt: createdAt,\n        watermarkImg: watermarkImg,\n        creators: creators,\n        media: media,\n        attributes: attributes,\n        app: app,\n        tags: tags,\n        robotTerms: robotTerms\n      }, additionalProperties);\n    }\n\n    /**\n     * Registers an NFT as IP, creating a corresponding IP record.\n     * @param request - The request object that contains all data needed to register IP.\n     *   @param request.nftContract The address of the NFT.\n     *   @param request.tokenId The token identifier of the NFT.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, resolverAddr, metadataProviderAddress, metadata)\n     */\n  }, {\n    key: \"register\",\n    value: (function () {\n      var _register = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$ipMetadata, _request$ipMetadata2, _request$ipMetadata3, _request$ipMetadata4, _request$txOptions, tokenId, ipIdAddress, isRegistered, object, _request$txOptions2, txHash, calculatedDeadline, signature, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              tokenId = BigInt(request.tokenId);\n              _context.next = 4;\n              return this.getIpIdAddress(request.nftContract, tokenId);\n            case 4:\n              ipIdAddress = _context.sent;\n              _context.next = 7;\n              return this.isRegistered(ipIdAddress);\n            case 7:\n              isRegistered = _context.sent;\n              if (!isRegistered) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                ipId: ipIdAddress\n              });\n            case 10:\n              object = {\n                tokenId: tokenId,\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata = request.ipMetadata) === null || _request$ipMetadata === void 0 ? void 0 : _request$ipMetadata.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata2 = request.ipMetadata) === null || _request$ipMetadata2 === void 0 ? void 0 : _request$ipMetadata2.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata3 = request.ipMetadata) === null || _request$ipMetadata3 === void 0 ? void 0 : _request$ipMetadata3.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata4 = request.ipMetadata) === null || _request$ipMetadata4 === void 0 ? void 0 : _request$ipMetadata4.nftMetadataHash) || zeroHash\n                },\n                sigMetadata: {\n                  signer: zeroAddress,\n                  deadline: BigInt(0),\n                  signature: zeroHash\n                }\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 19;\n                break;\n              }\n              if (!request.ipMetadata) {\n                _context.next = 16;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.spgClient.registerIpEncode(object)\n              });\n            case 16:\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.ipAssetRegistryClient.registerEncode({\n                  tokenContract: object.nftContract,\n                  tokenId: object.tokenId,\n                  chainid: chain[this.chainId]\n                })\n              });\n            case 17:\n              _context.next = 42;\n              break;\n            case 19:\n              if (!request.ipMetadata) {\n                _context.next = 30;\n                break;\n              }\n              calculatedDeadline = getDeadline(request.deadline);\n              _context.next = 23;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: toHex(0, {\n                  size: 32\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }]\n              });\n            case 23:\n              signature = _context.sent;\n              object.sigMetadata = {\n                signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                deadline: calculatedDeadline,\n                signature: signature\n              };\n              _context.next = 27;\n              return this.spgClient.registerIp(object);\n            case 27:\n              txHash = _context.sent;\n              _context.next = 33;\n              break;\n            case 30:\n              _context.next = 32;\n              return this.ipAssetRegistryClient.register({\n                tokenContract: object.nftContract,\n                tokenId: object.tokenId,\n                chainid: chain[this.chainId]\n              });\n            case 32:\n              txHash = _context.sent;\n            case 33:\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 41;\n                break;\n              }\n              _context.next = 36;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 36:\n              txReceipt = _context.sent;\n              targetLogs = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                ipId: targetLogs[0].ipId\n              });\n            case 41:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 42:\n              _context.next = 47;\n              break;\n            case 44:\n              _context.prev = 44;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to register IP\");\n            case 47:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 44]]);\n      }));\n      function register(_x) {\n        return _register.apply(this, arguments);\n      }\n      return register;\n    }()\n    /**\n     * Registers a derivative directly with parent IP's license terms, without needing license tokens,\n     * and attaches the license terms of the parent IPs to the derivative IP.\n     * The license terms must be attached to the parent IP before calling this function.\n     * All IPs attached default license terms by default.\n     * The derivative IP owner must be the caller or an authorized operator.\n     * @param request - The request object that contains all data needed to register derivative IP.\n     *   @param request.childIpId The derivative IP ID.\n     *   @param request.parentIpIds The parent IP IDs.\n     *   @param request.licenseTermsIds The IDs of the license terms that the parent IP supports.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n    )\n  }, {\n    key: \"registerDerivative\",\n    value: (function () {\n      var _registerDerivative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, isChildIpIdRegistered, _iterator, _step, parentId, isParentIpIdRegistered, i, isAttachedLicenseTerms, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return this.isRegistered(request.childIpId);\n            case 3:\n              isChildIpIdRegistered = _context2.sent;\n              if (isChildIpIdRegistered) {\n                _context2.next = 6;\n                break;\n              }\n              throw new Error(\"The child IP with id \".concat(request.childIpId, \" is not registered.\"));\n            case 6:\n              _iterator = _createForOfIteratorHelper(request.parentIpIds);\n              _context2.prev = 7;\n              _iterator.s();\n            case 9:\n              if ((_step = _iterator.n()).done) {\n                _context2.next = 18;\n                break;\n              }\n              parentId = _step.value;\n              _context2.next = 13;\n              return this.isRegistered(getAddress$1(parentId, \"request.parentIpIds\"));\n            case 13:\n              isParentIpIdRegistered = _context2.sent;\n              if (isParentIpIdRegistered) {\n                _context2.next = 16;\n                break;\n              }\n              throw new Error(\"The parent IP with id \".concat(parentId, \" is not registered.\"));\n            case 16:\n              _context2.next = 9;\n              break;\n            case 18:\n              _context2.next = 23;\n              break;\n            case 20:\n              _context2.prev = 20;\n              _context2.t0 = _context2[\"catch\"](7);\n              _iterator.e(_context2.t0);\n            case 23:\n              _context2.prev = 23;\n              _iterator.f();\n              return _context2.finish(23);\n            case 26:\n              if (!(request.parentIpIds.length !== request.licenseTermsIds.length)) {\n                _context2.next = 28;\n                break;\n              }\n              throw new Error(\"Parent IP IDs and License terms IDs must be provided in pairs.\");\n            case 28:\n              i = 0;\n            case 29:\n              if (!(i < request.parentIpIds.length)) {\n                _context2.next = 38;\n                break;\n              }\n              _context2.next = 32;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: getAddress$1(request.parentIpIds[i], \"request.parentIpIds\"),\n                licenseTemplate: request.licenseTemplate && getAddress$1(request.licenseTemplate, \"request.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: BigInt(request.licenseTermsIds[i])\n              });\n            case 32:\n              isAttachedLicenseTerms = _context2.sent;\n              if (isAttachedLicenseTerms) {\n                _context2.next = 35;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsIds[i], \" must be attached to the parent ipId \").concat(request.parentIpIds[i], \" before registering derivative.\"));\n            case 35:\n              i++;\n              _context2.next = 29;\n              break;\n            case 38:\n              req = {\n                childIpId: request.childIpId,\n                parentIpIds: request.parentIpIds,\n                licenseTermsIds: request.licenseTermsIds.map(function (id) {\n                  return BigInt(id);\n                }),\n                licenseTemplate: request.licenseTemplate || this.licenseTemplateClient.address,\n                royaltyContext: zeroAddress\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 43;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.registerDerivativeEncode(req)\n              });\n            case 43:\n              _context2.next = 45;\n              return this.licensingModuleClient.registerDerivative(req);\n            case 45:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 52;\n                break;\n              }\n              _context2.next = 49;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 49:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 52:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 53:\n              _context2.next = 58;\n              break;\n            case 55:\n              _context2.prev = 55;\n              _context2.t1 = _context2[\"catch\"](0);\n              handleError(_context2.t1, \"Failed to register derivative\");\n            case 58:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 55], [7, 20, 23, 26]]);\n      }));\n      function registerDerivative(_x2) {\n        return _registerDerivative.apply(this, arguments);\n      }\n      return registerDerivative;\n    }()\n    /**\n     * Registers a derivative with license tokens.\n     * the derivative IP is registered with license tokens minted from the parent IP's license terms.\n     * the license terms of the parent IPs issued with license tokens are attached to the derivative IP.\n     * the caller must be the derivative IP owner or an authorized operator.\n     * @param request - The request object that contains all data needed to register derivative license tokens.\n     *   @param request.childIpId The derivative IP ID.\n     *   @param request.licenseTokenIds The IDs of the license tokens.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n    )\n  }, {\n    key: \"registerDerivativeWithLicenseTokens\",\n    value: (function () {\n      var _registerDerivativeWithLicenseTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, isChildIpIdRegistered, _iterator2, _step2, licenseTokenId, tokenOwnerAddress, req, _request$txOptions6, txHash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.isRegistered(request.childIpId);\n            case 3:\n              isChildIpIdRegistered = _context3.sent;\n              if (isChildIpIdRegistered) {\n                _context3.next = 6;\n                break;\n              }\n              throw new Error(\"The child IP with id \".concat(request.childIpId, \" is not registered.\"));\n            case 6:\n              request.licenseTokenIds = request.licenseTokenIds.map(function (id) {\n                return BigInt(id);\n              });\n              _iterator2 = _createForOfIteratorHelper(request.licenseTokenIds);\n              _context3.prev = 8;\n              _iterator2.s();\n            case 10:\n              if ((_step2 = _iterator2.n()).done) {\n                _context3.next = 19;\n                break;\n              }\n              licenseTokenId = _step2.value;\n              _context3.next = 14;\n              return this.licenseTokenReadOnlyClient.ownerOf({\n                tokenId: licenseTokenId\n              });\n            case 14:\n              tokenOwnerAddress = _context3.sent;\n              if (tokenOwnerAddress) {\n                _context3.next = 17;\n                break;\n              }\n              throw new Error(\"License token id \".concat(licenseTokenId, \" must be owned by the caller.\"));\n            case 17:\n              _context3.next = 10;\n              break;\n            case 19:\n              _context3.next = 24;\n              break;\n            case 21:\n              _context3.prev = 21;\n              _context3.t0 = _context3[\"catch\"](8);\n              _iterator2.e(_context3.t0);\n            case 24:\n              _context3.prev = 24;\n              _iterator2.f();\n              return _context3.finish(24);\n            case 27:\n              req = {\n                childIpId: getAddress$1(request.childIpId, \"request.childIpId\"),\n                licenseTokenIds: request.licenseTokenIds,\n                royaltyContext: zeroAddress\n              };\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 32;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.registerDerivativeWithLicenseTokensEncode(req)\n              });\n            case 32:\n              _context3.next = 34;\n              return this.licensingModuleClient.registerDerivativeWithLicenseTokens(req);\n            case 34:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 41;\n                break;\n              }\n              _context3.next = 38;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 38:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 41:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 42:\n              _context3.next = 47;\n              break;\n            case 44:\n              _context3.prev = 44;\n              _context3.t1 = _context3[\"catch\"](0);\n              handleError(_context3.t1, \"Failed to register derivative with license tokens\");\n            case 47:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 44], [8, 21, 24, 27]]);\n      }));\n      function registerDerivativeWithLicenseTokens(_x3) {\n        return _registerDerivativeWithLicenseTokens.apply(this, arguments);\n      }\n      return registerDerivativeWithLicenseTokens;\n    }()\n    /**\n     * Mint an NFT from a collection and register it as an IP.\n     * @param request - The request object that contains all data needed to mint and register ip.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.pilType The type of the PIL.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.recipient [Optional] The address of the recipient of the minted NFT.\n     *   @param request.mintingFee [Optional] The fee to be paid when minting a license.\n     *   @param request.commercialRevShare [Optional] Percentage of revenue that must be shared with the licensor.\n     *   @param request.currency [Optional] The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID, Token ID, License Terms Id if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, name, uri, registrationDate)\n     * @emits LicenseTermsAttached (caller, ipId, licenseTemplate, licenseTermsId)\n     */\n    )\n  }, {\n    key: \"mintAndRegisterIpAssetWithPilTerms\",\n    value: (function () {\n      var _mintAndRegisterIpAssetWithPilTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$ipMetadata5, _request$ipMetadata6, _request$ipMetadata7, _request$ipMetadata8, _request$txOptions7, licenseTerm, object, _request$txOptions8, txHash, txReceipt, iPRegisteredLog, licenseTermsId;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              if (!(request.pilType === undefined || request.pilType === null)) {\n                _context4.next = 3;\n                break;\n              }\n              throw new Error(\"PIL type is required.\");\n            case 3:\n              licenseTerm = getLicenseTermByType(request.pilType, {\n                defaultMintingFee: request.mintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address,\n                commercialRevShare: request.commercialRevShare\n              });\n              object = {\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                recipient: request.recipient && getAddress$1(request.recipient, \"request.recipient\") || this.wallet.account.address,\n                terms: licenseTerm,\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata5 = request.ipMetadata) === null || _request$ipMetadata5 === void 0 ? void 0 : _request$ipMetadata5.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata6 = request.ipMetadata) === null || _request$ipMetadata6 === void 0 ? void 0 : _request$ipMetadata6.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata7 = request.ipMetadata) === null || _request$ipMetadata7 === void 0 ? void 0 : _request$ipMetadata7.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata8 = request.ipMetadata) === null || _request$ipMetadata8 === void 0 ? void 0 : _request$ipMetadata8.nftMetadataHash) || zeroHash\n                }\n              };\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.encodedTxDataOnly)) {\n                _context4.next = 9;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: this.spgClient.mintAndRegisterIpAndAttachPilTermsEncode(object)\n              });\n            case 9:\n              _context4.next = 11;\n              return this.spgClient.mintAndRegisterIpAndAttachPilTerms(object);\n            case 11:\n              txHash = _context4.sent;\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.waitForTransaction)) {\n                _context4.next = 21;\n                break;\n              }\n              _context4.next = 15;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 15:\n              txReceipt = _context4.sent;\n              iPRegisteredLog = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(txReceipt)[0];\n              _context4.next = 19;\n              return this.getLicenseTermsId(txReceipt);\n            case 19:\n              licenseTermsId = _context4.sent;\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                ipId: iPRegisteredLog.ipId,\n                licenseTermsId: licenseTermsId,\n                tokenId: iPRegisteredLog.tokenId\n              });\n            case 21:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 22:\n              _context4.next = 27;\n              break;\n            case 24:\n              _context4.prev = 24;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to mint and register IP and attach PIL terms\");\n            case 27:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 24]]);\n      }));\n      function mintAndRegisterIpAssetWithPilTerms(_x4) {\n        return _mintAndRegisterIpAssetWithPilTerms.apply(this, arguments);\n      }\n      return mintAndRegisterIpAssetWithPilTerms;\n    }()\n    /**\n     * Register a given NFT as an IP and attach Programmable IP License Terms.R.\n     * @param request - The request object that contains all data needed to mint and register ip.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.tokenId The ID of the NFT.\n     *   @param request.pilType The type of the PIL.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.mintingFee [Optional] The fee to be paid when minting a license.\n     *   @param request.commercialRevShare [Optional] Percentage of revenue that must be shared with the licensor.\n     *   @param request.currency [Optional] The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID, License Terms Id if waitForTxn is set to true.\n     * @emits LicenseTermsAttached (caller, ipId, licenseTemplate, licenseTermsId)\n     */\n    )\n  }, {\n    key: \"registerIpAndAttachPilTerms\",\n    value: (function () {\n      var _registerIpAndAttachPilTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$ipMetadata9, _request$ipMetadata10, _request$ipMetadata11, _request$ipMetadata12, _request$txOptions9, ipIdAddress, isRegistered, licenseTerm, calculatedDeadline, sigAttachSignature, object, sigMetadataSignature, _request$txOptions10, txHash, txReceipt, ipRegisterEvent, licenseTermsId;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              if (!(request.pilType === undefined || request.pilType === null)) {\n                _context5.next = 3;\n                break;\n              }\n              throw new Error(\"PIL type is required.\");\n            case 3:\n              request.tokenId = BigInt(request.tokenId);\n              _context5.next = 6;\n              return this.getIpIdAddress(request.nftContract, request.tokenId);\n            case 6:\n              ipIdAddress = _context5.sent;\n              _context5.next = 9;\n              return this.isRegistered(ipIdAddress);\n            case 9:\n              isRegistered = _context5.sent;\n              if (!isRegistered) {\n                _context5.next = 12;\n                break;\n              }\n              throw new Error(\"The NFT with id \".concat(request.tokenId, \" is already registered as IP.\"));\n            case 12:\n              licenseTerm = getLicenseTermByType(request.pilType, {\n                defaultMintingFee: request.mintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address,\n                commercialRevShare: request.commercialRevShare\n              });\n              calculatedDeadline = getDeadline(request.deadline);\n              _context5.next = 16;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: this.getSigSignatureState({\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.licensingModuleClient.address, \"licensingModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function attachLicenseTerms(address,address,uint256)\"\n                }]\n              });\n            case 16:\n              sigAttachSignature = _context5.sent;\n              object = {\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                tokenId: request.tokenId,\n                terms: licenseTerm,\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata9 = request.ipMetadata) === null || _request$ipMetadata9 === void 0 ? void 0 : _request$ipMetadata9.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata10 = request.ipMetadata) === null || _request$ipMetadata10 === void 0 ? void 0 : _request$ipMetadata10.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata11 = request.ipMetadata) === null || _request$ipMetadata11 === void 0 ? void 0 : _request$ipMetadata11.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata12 = request.ipMetadata) === null || _request$ipMetadata12 === void 0 ? void 0 : _request$ipMetadata12.nftMetadataHash) || zeroHash\n                },\n                sigMetadata: {\n                  signer: zeroAddress,\n                  deadline: BigInt(0),\n                  signature: zeroHash\n                },\n                sigAttach: {\n                  signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                  deadline: calculatedDeadline,\n                  signature: sigAttachSignature\n                }\n              };\n              _context5.next = 20;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: toHex(0, {\n                  size: 32\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }]\n              });\n            case 20:\n              sigMetadataSignature = _context5.sent;\n              object.sigMetadata = {\n                signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                deadline: calculatedDeadline,\n                signature: sigMetadataSignature\n              };\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.encodedTxDataOnly)) {\n                _context5.next = 26;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: this.spgClient.registerIpAndAttachPilTermsEncode(object)\n              });\n            case 26:\n              _context5.next = 28;\n              return this.spgClient.registerIpAndAttachPilTerms(object);\n            case 28:\n              txHash = _context5.sent;\n              if (!((_request$txOptions10 = request.txOptions) !== null && _request$txOptions10 !== void 0 && _request$txOptions10.waitForTransaction)) {\n                _context5.next = 38;\n                break;\n              }\n              _context5.next = 32;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 32:\n              txReceipt = _context5.sent;\n              ipRegisterEvent = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(txReceipt);\n              _context5.next = 36;\n              return this.getLicenseTermsId(txReceipt);\n            case 36:\n              licenseTermsId = _context5.sent;\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: licenseTermsId,\n                ipId: ipRegisterEvent[0].ipId\n              });\n            case 38:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 39:\n              _context5.next = 44;\n              break;\n            case 41:\n              _context5.prev = 41;\n              _context5.t0 = _context5[\"catch\"](0);\n              handleError(_context5.t0, \"Failed to register IP and attach PIL terms\");\n            case 44:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 41]]);\n      }));\n      function registerIpAndAttachPilTerms(_x5) {\n        return _registerIpAndAttachPilTerms.apply(this, arguments);\n      }\n      return registerIpAndAttachPilTerms;\n    }()\n    /**\n     * Register the given NFT as a derivative IP with metadata without using license tokens.\n     * @param request - The request object that contains all data needed to register derivative IP.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.tokenId The ID of the NFT.\n     *   @param request.derivData The derivative data to be used for registerDerivative.\n     *   @param request.derivData.parentIpIds The IDs of the parent IPs to link the registered derivative IP.\n     *   @param request.derivData.licenseTemplate [Optional] The address of the license template to be used for the linking.\n     *   @param request.derivData.licenseTermsIds The IDs of the license terms to be used for the linking.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds,default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, name, uri, registrationDate)\n     */\n    )\n  }, {\n    key: \"registerDerivativeIp\",\n    value: (function () {\n      var _registerDerivativeIp = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request) {\n        var _request$ipMetadata13, _request$ipMetadata14, _request$ipMetadata15, _request$ipMetadata16, _request$txOptions11, tokenId, ipIdAddress, isRegistered, i, isAttachedLicenseTerms, calculatedDeadline, sigRegisterSignature, object, sigMetadataSignature, _request$txOptions12, txHash, receipt, log;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              tokenId = BigInt(request.tokenId);\n              _context6.next = 4;\n              return this.getIpIdAddress(request.nftContract, tokenId);\n            case 4:\n              ipIdAddress = _context6.sent;\n              _context6.next = 7;\n              return this.isRegistered(ipIdAddress);\n            case 7:\n              isRegistered = _context6.sent;\n              if (!isRegistered) {\n                _context6.next = 10;\n                break;\n              }\n              throw new Error(\"The NFT with id \".concat(tokenId, \" is already registered as IP.\"));\n            case 10:\n              if (!(request.derivData.parentIpIds.length !== request.derivData.licenseTermsIds.length)) {\n                _context6.next = 12;\n                break;\n              }\n              throw new Error(\"Parent IP IDs and License terms IDs must be provided in pairs.\");\n            case 12:\n              i = 0;\n            case 13:\n              if (!(i < request.derivData.parentIpIds.length)) {\n                _context6.next = 22;\n                break;\n              }\n              _context6.next = 16;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: getAddress$1(request.derivData.parentIpIds[i], \"request.derivData.parentIpIds\"),\n                licenseTemplate: request.derivData.licenseTemplate && getAddress$1(request.derivData.licenseTemplate, \"request.derivData.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: BigInt(request.derivData.licenseTermsIds[i])\n              });\n            case 16:\n              isAttachedLicenseTerms = _context6.sent;\n              if (isAttachedLicenseTerms) {\n                _context6.next = 19;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.derivData.licenseTermsIds[i], \" must be attached to the parent ipId \").concat(request.derivData.parentIpIds[i], \" before registering derivative.\"));\n            case 19:\n              i++;\n              _context6.next = 13;\n              break;\n            case 22:\n              calculatedDeadline = getDeadline(request.deadline);\n              _context6.next = 25;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: this.getSigSignatureState({\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.licensingModuleClient.address, \"licensingModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function registerDerivative(address,address[],uint256[],address,bytes)\"\n                }]\n              });\n            case 25:\n              sigRegisterSignature = _context6.sent;\n              object = {\n                nftContract: getAddress$1(request.nftContract, \"request.nftContract\"),\n                tokenId: BigInt(request.tokenId),\n                derivData: {\n                  parentIpIds: request.derivData.parentIpIds.map(function (id) {\n                    return getAddress$1(id, \"request.derivData.parentIpIds\");\n                  }),\n                  licenseTermsIds: request.derivData.licenseTermsIds.map(function (id) {\n                    return BigInt(id);\n                  }),\n                  licenseTemplate: request.derivData.licenseTemplate && getAddress$1(request.derivData.licenseTemplate, \"request.derivData.licenseTemplate\") || this.licenseTemplateClient.address,\n                  royaltyContext: zeroAddress\n                },\n                sigRegister: {\n                  signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                  deadline: calculatedDeadline,\n                  signature: sigRegisterSignature\n                },\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata13 = request.ipMetadata) === null || _request$ipMetadata13 === void 0 ? void 0 : _request$ipMetadata13.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata14 = request.ipMetadata) === null || _request$ipMetadata14 === void 0 ? void 0 : _request$ipMetadata14.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata15 = request.ipMetadata) === null || _request$ipMetadata15 === void 0 ? void 0 : _request$ipMetadata15.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata16 = request.ipMetadata) === null || _request$ipMetadata16 === void 0 ? void 0 : _request$ipMetadata16.nftMetadataHash) || zeroHash\n                },\n                sigMetadata: {\n                  signer: zeroAddress,\n                  deadline: BigInt(0),\n                  signature: zeroHash\n                }\n              };\n              _context6.next = 29;\n              return getPermissionSignature({\n                ipId: ipIdAddress,\n                deadline: calculatedDeadline,\n                state: toHex(0, {\n                  size: 32\n                }),\n                wallet: this.wallet,\n                chainId: chain[this.chainId],\n                permissions: [{\n                  ipId: ipIdAddress,\n                  signer: getAddress$1(this.spgClient.address, \"spgAddress\"),\n                  to: getAddress$1(this.coreMetadataModuleClient.address, \"coreMetadataModuleAddress\"),\n                  permission: AccessPermission.ALLOW,\n                  func: \"function setAll(address,string,bytes32,bytes32)\"\n                }]\n              });\n            case 29:\n              sigMetadataSignature = _context6.sent;\n              object.sigMetadata = {\n                signer: getAddress$1(this.wallet.account.address, \"wallet.account.address\"),\n                deadline: calculatedDeadline,\n                signature: sigMetadataSignature\n              };\n              if (!((_request$txOptions11 = request.txOptions) !== null && _request$txOptions11 !== void 0 && _request$txOptions11.encodedTxDataOnly)) {\n                _context6.next = 35;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                encodedTxData: this.spgClient.registerIpAndMakeDerivativeEncode(object)\n              });\n            case 35:\n              _context6.next = 37;\n              return this.spgClient.registerIpAndMakeDerivative(object);\n            case 37:\n              txHash = _context6.sent;\n              if (!((_request$txOptions12 = request.txOptions) !== null && _request$txOptions12 !== void 0 && _request$txOptions12.waitForTransaction)) {\n                _context6.next = 44;\n                break;\n              }\n              _context6.next = 41;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 41:\n              receipt = _context6.sent;\n              log = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(receipt)[0];\n              return _context6.abrupt(\"return\", {\n                txHash: txHash,\n                ipId: log.ipId\n              });\n            case 44:\n              return _context6.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 45:\n              _context6.next = 50;\n              break;\n            case 47:\n              _context6.prev = 47;\n              _context6.t0 = _context6[\"catch\"](0);\n              handleError(_context6.t0, \"Failed to register derivative IP\");\n            case 50:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 47]]);\n      }));\n      function registerDerivativeIp(_x6) {\n        return _registerDerivativeIp.apply(this, arguments);\n      }\n      return registerDerivativeIp;\n    }()\n    /**\n     * Mint an NFT from a collection and register it as a derivative IP without license tokens.\n     * @param request - The request object that contains all data needed to mint and register ip and make derivative.\n     *   @param request.nftContract The address of the NFT collection.\n     *   @param request.derivData The derivative data to be used for registerDerivative.\n     *   @param request.derivData.parentIpIds The IDs of the parent IPs to link the registered derivative IP.\n     *   @param request.derivData.licenseTermsIds The IDs of the license terms to be used for the linking.\n     *   @param request.derivData.licenseTemplate [Optional] The address of the license template to be used for the linking.\n     *   @param request.ipMetadata - [Optional] The desired metadata for the newly minted NFT and newly registered IP.\n     *   @param request.ipMetadata.ipMetadataURI [Optional] The URI of the metadata for the IP.\n     *   @param request.ipMetadata.ipMetadataHash [Optional] The hash of the metadata for the IP.\n     *   @param request.ipMetadata.nftMetadataURI [Optional] The URI of the metadata for the NFT.\n     *   @param request.ipMetadata.nftMetadataHash [Optional] The hash of the metadata for the IP NFT.*\n     *   @param request.recipient [Optional] The address of the recipient of the minted NFT.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional IP ID if waitForTxn is set to true.\n     * @emits IPRegistered (ipId, chainId, tokenContract, tokenId, name, uri, registrationDate)\n     */\n    )\n  }, {\n    key: \"mintAndRegisterIpAndMakeDerivative\",\n    value: (function () {\n      var _mintAndRegisterIpAndMakeDerivative = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(request) {\n        var _request$ipMetadata17, _request$ipMetadata18, _request$ipMetadata19, _request$ipMetadata20, _request$txOptions13, i, isAttachedLicenseTerms, object, _request$txOptions14, txHash, receipt, log;\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              if (!(request.derivData.parentIpIds.length !== request.derivData.licenseTermsIds.length)) {\n                _context7.next = 3;\n                break;\n              }\n              throw new Error(\"Parent IP IDs and License terms IDs must be provided in pairs.\");\n            case 3:\n              i = 0;\n            case 4:\n              if (!(i < request.derivData.parentIpIds.length)) {\n                _context7.next = 13;\n                break;\n              }\n              _context7.next = 7;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: getAddress$1(request.derivData.parentIpIds[i], \"request.derivData.parentIpIds\"),\n                licenseTemplate: request.derivData.licenseTemplate && getAddress$1(request.derivData.licenseTemplate, \"request.derivData.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: BigInt(request.derivData.licenseTermsIds[i])\n              });\n            case 7:\n              isAttachedLicenseTerms = _context7.sent;\n              if (isAttachedLicenseTerms) {\n                _context7.next = 10;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.derivData.licenseTermsIds[i], \" must be attached to the parent ipId \").concat(request.derivData.parentIpIds[i], \" before registering derivative.\"));\n            case 10:\n              i++;\n              _context7.next = 4;\n              break;\n            case 13:\n              object = _objectSpread2(_objectSpread2({}, request), {}, {\n                derivData: _objectSpread2(_objectSpread2({}, request.derivData), {}, {\n                  royaltyContext: zeroAddress,\n                  licenseTemplate: request.derivData.licenseTemplate || this.licenseTemplateClient.address,\n                  licenseTermsIds: request.derivData.licenseTermsIds.map(function (id) {\n                    return BigInt(id);\n                  })\n                }),\n                ipMetadata: {\n                  ipMetadataURI: ((_request$ipMetadata17 = request.ipMetadata) === null || _request$ipMetadata17 === void 0 ? void 0 : _request$ipMetadata17.ipMetadataURI) || \"\",\n                  ipMetadataHash: ((_request$ipMetadata18 = request.ipMetadata) === null || _request$ipMetadata18 === void 0 ? void 0 : _request$ipMetadata18.ipMetadataHash) || zeroHash,\n                  nftMetadataURI: ((_request$ipMetadata19 = request.ipMetadata) === null || _request$ipMetadata19 === void 0 ? void 0 : _request$ipMetadata19.nftMetadataURI) || \"\",\n                  nftMetadataHash: ((_request$ipMetadata20 = request.ipMetadata) === null || _request$ipMetadata20 === void 0 ? void 0 : _request$ipMetadata20.nftMetadataHash) || zeroHash\n                },\n                recipient: request.recipient && getAddress$1(request.recipient, \"request.recipient\") || this.wallet.account.address\n              });\n              if (!((_request$txOptions13 = request.txOptions) !== null && _request$txOptions13 !== void 0 && _request$txOptions13.encodedTxDataOnly)) {\n                _context7.next = 18;\n                break;\n              }\n              return _context7.abrupt(\"return\", {\n                encodedTxData: this.spgClient.mintAndRegisterIpAndMakeDerivativeEncode(object)\n              });\n            case 18:\n              _context7.next = 20;\n              return this.spgClient.mintAndRegisterIpAndMakeDerivative(object);\n            case 20:\n              txHash = _context7.sent;\n              if (!((_request$txOptions14 = request.txOptions) !== null && _request$txOptions14 !== void 0 && _request$txOptions14.waitForTransaction)) {\n                _context7.next = 27;\n                break;\n              }\n              _context7.next = 24;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 24:\n              receipt = _context7.sent;\n              log = this.ipAssetRegistryClient.parseTxIpRegisteredEvent(receipt)[0];\n              return _context7.abrupt(\"return\", {\n                txHash: txHash,\n                childIpId: log.ipId\n              });\n            case 27:\n              return _context7.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 28:\n              _context7.next = 33;\n              break;\n            case 30:\n              _context7.prev = 30;\n              _context7.t0 = _context7[\"catch\"](0);\n              handleError(_context7.t0, \"Failed to mint and register IP and make derivative\");\n            case 33:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 30]]);\n      }));\n      function mintAndRegisterIpAndMakeDerivative(_x7) {\n        return _mintAndRegisterIpAndMakeDerivative.apply(this, arguments);\n      }\n      return mintAndRegisterIpAndMakeDerivative;\n    }())\n  }, {\n    key: \"getIpIdAddress\",\n    value: function () {\n      var _getIpIdAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(nftContract, tokenId) {\n        var ipId;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.ipAssetRegistryClient.ipId({\n                chainId: chain[this.chainId],\n                tokenContract: getAddress$1(nftContract, \"nftContract\"),\n                tokenId: BigInt(tokenId)\n              });\n            case 2:\n              ipId = _context8.sent;\n              return _context8.abrupt(\"return\", ipId);\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getIpIdAddress(_x8, _x9) {\n        return _getIpIdAddress.apply(this, arguments);\n      }\n      return getIpIdAddress;\n    }()\n  }, {\n    key: \"isRegistered\",\n    value: function () {\n      var _isRegistered = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(ipId) {\n        return _regeneratorRuntime().wrap(function _callee9$(_context9) {\n          while (1) switch (_context9.prev = _context9.next) {\n            case 0:\n              _context9.next = 2;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(ipId, \"ipId\")\n              });\n            case 2:\n              return _context9.abrupt(\"return\", _context9.sent);\n            case 3:\n            case \"end\":\n              return _context9.stop();\n          }\n        }, _callee9, this);\n      }));\n      function isRegistered(_x10) {\n        return _isRegistered.apply(this, arguments);\n      }\n      return isRegistered;\n    }()\n  }, {\n    key: \"getSigSignatureState\",\n    value: function getSigSignatureState(permission) {\n      var data = encodeFunctionData({\n        abi: accessControllerAbi,\n        functionName: \"setPermission\",\n        args: [getAddress$1(permission.ipId, \"permission.ipId\"), getAddress$1(permission.signer, \"permission.signer\"), getAddress$1(permission.to, \"permission.to\"), toFunctionSelector(permission.func), permission.permission]\n      });\n      var sigAttachState = keccak256(encodeAbiParameters([{\n        name: \"\",\n        type: \"bytes32\"\n      }, {\n        name: \"\",\n        type: \"bytes\"\n      }], [toHex(0, {\n        size: 32\n      }), encodeFunctionData({\n        abi: ipAccountImplAbi,\n        functionName: \"execute\",\n        args: [this.accessControllerClient.address, 0n, data]\n      })]));\n      return sigAttachState;\n    }\n  }, {\n    key: \"getLicenseTermsId\",\n    value: function () {\n      var _getLicenseTermsId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee10(txReceipt) {\n        var licensingModuleLicenseTermsAttachedEvent, licenseTermsId, defaultLicenseTerms;\n        return _regeneratorRuntime().wrap(function _callee10$(_context10) {\n          while (1) switch (_context10.prev = _context10.next) {\n            case 0:\n              licensingModuleLicenseTermsAttachedEvent = this.licensingModuleClient.parseTxLicenseTermsAttachedEvent(txReceipt);\n              licenseTermsId = licensingModuleLicenseTermsAttachedEvent.length >= 1 && licensingModuleLicenseTermsAttachedEvent[0].licenseTermsId;\n              if (!(licenseTermsId === false)) {\n                _context10.next = 7;\n                break;\n              }\n              _context10.next = 5;\n              return this.licenseRegistryReadOnlyClient.getDefaultLicenseTerms();\n            case 5:\n              defaultLicenseTerms = _context10.sent;\n              licenseTermsId = defaultLicenseTerms.licenseTermsId;\n            case 7:\n              return _context10.abrupt(\"return\", licenseTermsId);\n            case 8:\n            case \"end\":\n              return _context10.stop();\n          }\n        }, _callee10, this);\n      }));\n      function getLicenseTermsId(_x11) {\n        return _getLicenseTermsId.apply(this, arguments);\n      }\n      return getLicenseTermsId;\n    }()\n  }]);\n}();\n\nvar PermissionClient = /*#__PURE__*/function () {\n  function PermissionClient(rpcClient, wallet, chainId) {\n    _classCallCheck(this, PermissionClient);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n    this.chainId = chainId;\n    this.accessControllerClient = new AccessControllerClient(this.rpcClient, this.wallet);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(this.rpcClient, this.wallet);\n    this.spgClient = new SpgClient(this.rpcClient, this.wallet);\n    this.coreMetadataModuleClient = new CoreMetadataModuleClient(this.rpcClient, this.wallet);\n  }\n\n  /**\n   * Sets the permission for a specific function call\n   * Each policy is represented as a mapping from an IP account address to a signer address to a recipient\n   * address to a function selector to a permission level. The permission level can be 0 (ABSTAIN), 1 (ALLOW), or\n   * 2 (DENY).\n   * By default, all policies are set to 0 (ABSTAIN), which means that the permission is not set.\n   * The owner of ipAccount by default has all permission.\n   * address(0) => wildcard\n   * bytes4(0) => wildcard\n   * Specific permission overrides wildcard permission.\n   * @param request - The request object containing necessary data to set `permission`.\n   *   @param request.ipId The IP ID that grants the permission for `signer`.\n   *   @param request.signer The address that can call `to` on behalf of the `ipAccount`.\n   *   @param request.to The address that can be called by the `signer` (currently only modules can be `to`).\n   *   @param request.permission The new permission level.\n   *   @param request.func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to an object containing the transaction hash.\n   * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n   */\n  return _createClass(PermissionClient, [{\n    key: \"setPermission\",\n    value: (function () {\n      var _setPermission = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, req, _request$txOptions2, txHash;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.checkIsRegistered(request.ipId);\n            case 3:\n              req = {\n                ipAccount: request.ipId,\n                signer: request.signer,\n                to: request.to,\n                func: request.func ? toFunctionSelector(request.func) : defaultFunctionSelector,\n                permission: request.permission\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.accessControllerClient.setPermissionEncode(req)\n              });\n            case 8:\n              _context.next = 10;\n              return this.accessControllerClient.setPermission(req);\n            case 10:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 17;\n                break;\n              }\n              _context.next = 14;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 14:\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 17:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 18:\n              _context.next = 23;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to set permissions\");\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n      function setPermission(_x) {\n        return _setPermission.apply(this, arguments);\n      }\n      return setPermission;\n    }()\n    /**\n     * Specific permission overrides wildcard permission with signature.\n     * @param request - The request object containing necessary data to set permissions.\n     *   @param request.ipId The IP ID that grants the permission for `signer`\n     *   @param request.signer The address that can call `to` on behalf of the `ipAccount`\n     *   @param request.to The address that can be called by the `signer` (currently only modules can be `to`)\n     *   @param request.permission The new permission level.\n     *   @param request.func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n    )\n  }, {\n    key: \"createSetPermissionSignature\",\n    value: (function () {\n      var _createSetPermissionSignature = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, ipId, signer, to, txOptions, func, permission, deadline, ipAccountClient, data, _yield$ipAccountClien, state, calculatedDeadline, signature, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              ipId = request.ipId, signer = request.signer, to = request.to, txOptions = request.txOptions, func = request.func, permission = request.permission, deadline = request.deadline;\n              _context2.next = 4;\n              return this.checkIsRegistered(ipId);\n            case 4:\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, ipId);\n              data = encodeFunctionData({\n                abi: accessControllerAbi,\n                functionName: \"setPermission\",\n                args: [ipId, getAddress$1(signer, \"request.signer\"), getAddress$1(to, \"request.to\"), func ? toFunctionSelector(func) : defaultFunctionSelector, permission]\n              });\n              _context2.next = 8;\n              return ipAccountClient.state();\n            case 8:\n              _yield$ipAccountClien = _context2.sent;\n              state = _yield$ipAccountClien.result;\n              calculatedDeadline = getDeadline(deadline);\n              _context2.next = 13;\n              return getPermissionSignature({\n                ipId: ipId,\n                deadline: calculatedDeadline,\n                state: state,\n                permissions: [{\n                  ipId: ipId,\n                  signer: signer,\n                  to: to,\n                  permission: permission,\n                  func: func\n                }],\n                chainId: chain[this.chainId],\n                wallet: this.wallet\n              });\n            case 13:\n              signature = _context2.sent;\n              req = {\n                to: getAddress$1(this.accessControllerClient.address, \"accessControllerClientAddress\"),\n                value: BigInt(0),\n                data: data,\n                signer: signer,\n                deadline: calculatedDeadline,\n                signature: signature\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 19;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeWithSigEncode(req)\n              });\n            case 19:\n              _context2.next = 21;\n              return ipAccountClient.executeWithSig(req);\n            case 21:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 28;\n                break;\n              }\n              _context2.next = 25;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, txOptions), {}, {\n                hash: txHash\n              }));\n            case 25:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 28:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 29:\n              _context2.next = 34;\n              break;\n            case 31:\n              _context2.prev = 31;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to create set permission signature\");\n            case 34:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 31]]);\n      }));\n      function createSetPermissionSignature(_x2) {\n        return _createSetPermissionSignature.apply(this, arguments);\n      }\n      return createSetPermissionSignature;\n    }()\n    /**\n     * Sets permission to a signer for all functions across all modules.\n     * @param request - The request object containing necessary data to set all permissions.\n     *   @param request.ipId The IP ID that grants the permission for `signer`\n     *   @param request.signer The address of the signer receiving the permissions.\n     *   @param request.permission The new permission.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n    )\n  }, {\n    key: \"setAllPermissions\",\n    value: (function () {\n      var _setAllPermissions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, req, _request$txOptions6, txHash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.checkIsRegistered(request.ipId);\n            case 3:\n              req = {\n                ipAccount: request.ipId,\n                signer: request.signer,\n                permission: request.permission\n              };\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 8;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.accessControllerClient.setAllPermissionsEncode(req)\n              });\n            case 8:\n              _context3.next = 10;\n              return this.accessControllerClient.setAllPermissions(req);\n            case 10:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 17;\n                break;\n              }\n              _context3.next = 14;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 14:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 17:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 18:\n              _context3.next = 23;\n              break;\n            case 20:\n              _context3.prev = 20;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to set all permissions\");\n            case 23:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 20]]);\n      }));\n      function setAllPermissions(_x3) {\n        return _setAllPermissions.apply(this, arguments);\n      }\n      return setAllPermissions;\n    }()\n    /**\n     * Sets a batch of permissions in a single transaction.\n     * @param request - The request object containing necessary data to set all permissions.\n     * @param {Array} request.permissions - An array of `Permission` structure, each representing the permission to be set.\n     *   @param request.permissions[].ipId The IP ID that grants the permission for `signer`.\n     *   @param request.permissions[].signer The address that can call `to` on behalf of the `ipAccount`.\n     *   @param request.permissions[].to The address that can be called by the `signer` (currently only modules can be `to`).\n     *   @param request.permissions[].permission The new permission level.\n     *   @param request.permissions[].func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n     *   @param request.deadline [Optional] The deadline for the signature in milliseconds, default is 1000ms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n    )\n  }, {\n    key: \"setBatchPermissions\",\n    value: (function () {\n      var _setBatchPermissions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$txOptions7, permissions, txOptions, _iterator, _step, permission, req, _request$txOptions8, txHash;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              permissions = request.permissions, txOptions = request.txOptions;\n              _iterator = _createForOfIteratorHelper(permissions);\n              _context4.prev = 3;\n              _iterator.s();\n            case 5:\n              if ((_step = _iterator.n()).done) {\n                _context4.next = 11;\n                break;\n              }\n              permission = _step.value;\n              _context4.next = 9;\n              return this.checkIsRegistered(permission.ipId);\n            case 9:\n              _context4.next = 5;\n              break;\n            case 11:\n              _context4.next = 16;\n              break;\n            case 13:\n              _context4.prev = 13;\n              _context4.t0 = _context4[\"catch\"](3);\n              _iterator.e(_context4.t0);\n            case 16:\n              _context4.prev = 16;\n              _iterator.f();\n              return _context4.finish(16);\n            case 19:\n              req = {\n                permissions: permissions.map(function (permission) {\n                  return {\n                    ipAccount: permission.ipId,\n                    signer: permission.signer,\n                    to: permission.to,\n                    func: permission.func ? toFunctionSelector(permission.func) : defaultFunctionSelector,\n                    permission: permission.permission\n                  };\n                })\n              };\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.encodedTxDataOnly)) {\n                _context4.next = 24;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: this.accessControllerClient.setBatchPermissionsEncode(req)\n              });\n            case 24:\n              _context4.next = 26;\n              return this.accessControllerClient.setBatchPermissions(req);\n            case 26:\n              txHash = _context4.sent;\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.waitForTransaction)) {\n                _context4.next = 33;\n                break;\n              }\n              _context4.next = 30;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, txOptions), {}, {\n                hash: txHash\n              }));\n            case 30:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 33:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 34:\n              _context4.next = 39;\n              break;\n            case 36:\n              _context4.prev = 36;\n              _context4.t1 = _context4[\"catch\"](0);\n              handleError(_context4.t1, \"Failed to set batch permissions\");\n            case 39:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 36], [3, 13, 16, 19]]);\n      }));\n      function setBatchPermissions(_x4) {\n        return _setBatchPermissions.apply(this, arguments);\n      }\n      return setBatchPermissions;\n    }()\n    /**\n     * Sets a batch of permissions in a single transaction with signature.\n     * @param request - The request object containing necessary data to set permissions.\n     *   @param request.ipId The IP ID that grants the permission for `signer`\n     *   @param {Array} request.permissions - An array of `Permission` structure, each representing the permission to be set.\n     *   @param request.permissions[].ipId The IP ID that grants the permission for `signer`.\n     *   @param request.permissions[].signer The address that can call `to` on behalf of the `ipAccount`.\n     *   @param request.permissions[].to The address that can be called by the `signer` (currently only modules can be `to`).\n     *   @param request.permissions[].permission The new permission level.\n     *   @param request.permissions[].func [Optional] The function selector string of `to` that can be called by the `signer` on behalf of the `ipAccount`. Be default, it allows all functions.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     * @emits PermissionSet (ipAccountOwner, ipAccount, signer, to, func, permission)\n     */\n    )\n  }, {\n    key: \"createBatchPermissionSignature\",\n    value: (function () {\n      var _createBatchPermissionSignature = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$txOptions9, permissions, deadline, ipId, txOptions, _iterator2, _step2, permission, ipAccountClient, data, _yield$ipAccountClien2, state, calculatedDeadline, signature, req, _request$txOptions10, txHash;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              permissions = request.permissions, deadline = request.deadline, ipId = request.ipId, txOptions = request.txOptions;\n              _iterator2 = _createForOfIteratorHelper(permissions);\n              _context5.prev = 3;\n              _iterator2.s();\n            case 5:\n              if ((_step2 = _iterator2.n()).done) {\n                _context5.next = 11;\n                break;\n              }\n              permission = _step2.value;\n              _context5.next = 9;\n              return this.checkIsRegistered(permission.ipId);\n            case 9:\n              _context5.next = 5;\n              break;\n            case 11:\n              _context5.next = 16;\n              break;\n            case 13:\n              _context5.prev = 13;\n              _context5.t0 = _context5[\"catch\"](3);\n              _iterator2.e(_context5.t0);\n            case 16:\n              _context5.prev = 16;\n              _iterator2.f();\n              return _context5.finish(16);\n            case 19:\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, ipId);\n              data = encodeFunctionData({\n                abi: accessControllerAbi,\n                functionName: \"setBatchPermissions\",\n                args: [permissions.map(function (permission) {\n                  return {\n                    ipAccount: permission.ipId,\n                    signer: permission.signer,\n                    to: permission.to,\n                    func: permission.func ? toFunctionSelector(permission.func) : defaultFunctionSelector,\n                    permission: permission.permission\n                  };\n                })]\n              });\n              _context5.next = 23;\n              return ipAccountClient.state();\n            case 23:\n              _yield$ipAccountClien2 = _context5.sent;\n              state = _yield$ipAccountClien2.result;\n              calculatedDeadline = getDeadline(deadline);\n              _context5.next = 28;\n              return getPermissionSignature({\n                ipId: ipId,\n                deadline: calculatedDeadline,\n                state: state,\n                permissions: permissions,\n                chainId: chain[this.chainId],\n                wallet: this.wallet,\n                permissionFunc: \"setBatchPermissions\"\n              });\n            case 28:\n              signature = _context5.sent;\n              req = {\n                to: getAddress$1(this.accessControllerClient.address, \"accessControllerAddress\"),\n                value: BigInt(0),\n                data: data,\n                signer: getAddress$1(this.wallet.account.address, \"walletAccountAddress\"),\n                deadline: calculatedDeadline,\n                signature: signature\n              };\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.encodedTxDataOnly)) {\n                _context5.next = 34;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeWithSigEncode(req)\n              });\n            case 34:\n              _context5.next = 36;\n              return ipAccountClient.executeWithSig(req);\n            case 36:\n              txHash = _context5.sent;\n              if (!((_request$txOptions10 = request.txOptions) !== null && _request$txOptions10 !== void 0 && _request$txOptions10.waitForTransaction)) {\n                _context5.next = 43;\n                break;\n              }\n              _context5.next = 40;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, txOptions), {}, {\n                hash: txHash\n              }));\n            case 40:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 43:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 44:\n              _context5.next = 49;\n              break;\n            case 46:\n              _context5.prev = 46;\n              _context5.t1 = _context5[\"catch\"](0);\n              handleError(_context5.t1, \"Failed to create batch permission signature\");\n            case 49:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 46], [3, 13, 16, 19]]);\n      }));\n      function createBatchPermissionSignature(_x5) {\n        return _createBatchPermissionSignature.apply(this, arguments);\n      }\n      return createBatchPermissionSignature;\n    }())\n  }, {\n    key: \"checkIsRegistered\",\n    value: function () {\n      var _checkIsRegistered = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(ipId) {\n        var isRegistered;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(ipId, \"ipId\")\n              });\n            case 2:\n              isRegistered = _context6.sent;\n              if (isRegistered) {\n                _context6.next = 5;\n                break;\n              }\n              throw new Error(\"IP id with \".concat(ipId, \" is not registered.\"));\n            case 5:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function checkIsRegistered(_x6) {\n        return _checkIsRegistered.apply(this, arguments);\n      }\n      return checkIsRegistered;\n    }()\n  }]);\n}();\n\nvar LicenseClient = /*#__PURE__*/function () {\n  function LicenseClient(rpcClient, wallet) {\n    _classCallCheck(this, LicenseClient);\n    this.licensingModuleClient = new LicensingModuleClient(rpcClient, wallet);\n    this.licenseRegistryClient = new LicenseRegistryEventClient(rpcClient);\n    this.piLicenseTemplateReadOnlyClient = new PiLicenseTemplateReadOnlyClient(rpcClient);\n    this.licenseTemplateClient = new PiLicenseTemplateClient(rpcClient, wallet);\n    this.royaltyPolicyLAPClient = new RoyaltyPolicyLapClient(rpcClient, wallet);\n    this.royaltyModuleReadOnlyClient = new RoyaltyModuleReadOnlyClient(rpcClient);\n    this.licenseRegistryReadOnlyClient = new LicenseRegistryReadOnlyClient(rpcClient);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(rpcClient, wallet);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n  }\n  /**\n   * Registers new license terms and return the ID of the newly registered license terms.\n   * @param request - The request object that contains all data needed to register a license term.\n   *   @param request.transferable Indicates whether the license is transferable or not.\n   *   @param request.royaltyPolicy The address of the royalty policy contract which required to StoryProtocol in advance.\n   *   @param request.mintingFee The fee to be paid when minting a license.\n   *   @param request.expiration The expiration period of the license.\n   *   @param request.commercialUse Indicates whether the work can be used commercially or not.\n   *   @param request.commercialAttribution Whether attribution is required when reproducing the work commercially or not.\n   *   @param request.commercializerChecker Commercializers that are allowed to commercially exploit the work. If zero address, then no restrictions is enforced.\n   *   @param request.commercializerCheckerData The data to be passed to the commercializer checker contract.\n   *   @param request.commercialRevShare Percentage of revenue that must be shared with the licensor.\n   *   @param request.commercialRevCeiling The maximum revenue that can be generated from the commercial use of the work.\n   *   @param request.derivativesAllowed Indicates whether the licensee can create derivatives of his work or not.\n   *   @param request.derivativesAttribution Indicates whether attribution is required for derivatives of the work or not.\n   *   @param request.derivativesApproval Indicates whether the licensor must approve derivatives of the work before they can be linked to the licensor IP ID or not.\n   *   @param request.derivativesReciprocal Indicates whether the licensee must license derivatives of the work under the same terms or not.\n   *   @param request.derivativeRevCeiling The maximum revenue that can be generated from the derivative use of the work.\n   *   @param request.currency The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n   *   @param request.uri The URI of the license terms, which can be used to fetch the offchain license terms.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to an object containing the optional transaction hash, optional transaction encodedTxData and optional license terms Id.\n   * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n   */\n  return _createClass(LicenseClient, [{\n    key: \"registerPILTerms\",\n    value: (function () {\n      var _registerPILTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, royaltyPolicy, currency, isWhitelistedArbitrationPolicy, isWhitelistedRoyaltyToken, object, licenseTermsId, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              royaltyPolicy = request.royaltyPolicy, currency = request.currency;\n              if (!(getAddress$1(royaltyPolicy, \"request.royaltyPolicy\") !== zeroAddress)) {\n                _context.next = 8;\n                break;\n              }\n              _context.next = 5;\n              return this.royaltyModuleReadOnlyClient.isWhitelistedRoyaltyPolicy({\n                royaltyPolicy: royaltyPolicy\n              });\n            case 5:\n              isWhitelistedArbitrationPolicy = _context.sent;\n              if (isWhitelistedArbitrationPolicy) {\n                _context.next = 8;\n                break;\n              }\n              throw new Error(\"The royalty policy is not whitelisted.\");\n            case 8:\n              if (!(getAddress$1(currency, \"request.currency\") !== zeroAddress)) {\n                _context.next = 14;\n                break;\n              }\n              _context.next = 11;\n              return this.royaltyModuleReadOnlyClient.isWhitelistedRoyaltyToken({\n                token: currency\n              });\n            case 11:\n              isWhitelistedRoyaltyToken = _context.sent;\n              if (isWhitelistedRoyaltyToken) {\n                _context.next = 14;\n                break;\n              }\n              throw new Error(\"The currency token is not whitelisted.\");\n            case 14:\n              if (!(royaltyPolicy !== zeroAddress && currency === zeroAddress)) {\n                _context.next = 16;\n                break;\n              }\n              throw new Error(\"Royalty policy requires currency token.\");\n            case 16:\n              object = _objectSpread2(_objectSpread2({}, request), {}, {\n                defaultMintingFee: BigInt(request.defaultMintingFee),\n                expiration: BigInt(request.expiration),\n                commercialRevCeiling: BigInt(request.commercialRevCeiling),\n                derivativeRevCeiling: BigInt(request.derivativeRevCeiling)\n              });\n              this.verifyCommercialUse(object);\n              this.verifyDerivatives(object);\n              if (!(object.commercialRevShare < 0 || object.commercialRevShare > 100)) {\n                _context.next = 23;\n                break;\n              }\n              throw new Error(\"CommercialRevShare should be between 0 and 100.\");\n            case 23:\n              object.commercialRevShare = object.commercialRevShare / 100 * 100000000;\n            case 24:\n              _context.next = 26;\n              return this.getLicenseTermsId(object);\n            case 26:\n              licenseTermsId = _context.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context.next = 29;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 29:\n              if (!(request !== null && request !== void 0 && (_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 33;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: object\n                })\n              });\n            case 33:\n              _context.next = 35;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: object\n              });\n            case 35:\n              txHash = _context.sent;\n              if (!(request !== null && request !== void 0 && (_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 44;\n                break;\n              }\n              _context.next = 39;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 39:\n              txReceipt = _context.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 44:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 45:\n              _context.next = 50;\n              break;\n            case 47:\n              _context.prev = 47;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to register license terms\");\n            case 50:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 47]]);\n      }));\n      function registerPILTerms(_x) {\n        return _registerPILTerms.apply(this, arguments);\n      }\n      return registerPILTerms;\n    }()\n    /**\n     * Convenient function to register a PIL non commercial social remix license to the registry\n     * @param request - [Optional] The request object that contains all data needed to register a PIL non commercial social remix license.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the optional transaction hash and optional license terms Id.\n     * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n     */\n    )\n  }, {\n    key: \"registerNonComSocialRemixingPIL\",\n    value: (function () {\n      var _registerNonComSocialRemixingPIL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, licenseTerms, licenseTermsId, _request$txOptions4, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              licenseTerms = getLicenseTermByType(PIL_TYPE.NON_COMMERCIAL_REMIX);\n              _context2.next = 4;\n              return this.getLicenseTermsId(licenseTerms);\n            case 4:\n              licenseTermsId = _context2.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 7:\n              if (!(request !== null && request !== void 0 && (_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 11;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: licenseTerms\n                })\n              });\n            case 11:\n              _context2.next = 13;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: licenseTerms\n              });\n            case 13:\n              txHash = _context2.sent;\n              if (!(request !== null && request !== void 0 && (_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 22;\n                break;\n              }\n              _context2.next = 17;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 17:\n              txReceipt = _context2.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context2.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 22:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 23:\n              _context2.next = 28;\n              break;\n            case 25:\n              _context2.prev = 25;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to register non commercial social remixing PIL\");\n            case 28:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 25]]);\n      }));\n      function registerNonComSocialRemixingPIL(_x2) {\n        return _registerNonComSocialRemixingPIL.apply(this, arguments);\n      }\n      return registerNonComSocialRemixingPIL;\n    }()\n    /**\n     * Convenient function to register a PIL commercial use license to the registry.\n     * @param request - The request object that contains all data needed to register a PIL commercial use license.\n     *   @param request.defaultMintingFee The fee to be paid when minting a license.\n     *   @param request.currency The ERC20 token to be used to pay the minting fee and the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the optional transaction hash and optional license terms Id.\n     * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n     */\n    )\n  }, {\n    key: \"registerCommercialUsePIL\",\n    value: (function () {\n      var _registerCommercialUsePIL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, licenseTerms, licenseTermsId, _request$txOptions6, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              licenseTerms = getLicenseTermByType(PIL_TYPE.COMMERCIAL_USE, {\n                defaultMintingFee: request.defaultMintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address\n              });\n              _context3.next = 4;\n              return this.getLicenseTermsId(licenseTerms);\n            case 4:\n              licenseTermsId = _context3.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context3.next = 7;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 7:\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 11;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: licenseTerms\n                })\n              });\n            case 11:\n              _context3.next = 13;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: licenseTerms\n              });\n            case 13:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 22;\n                break;\n              }\n              _context3.next = 17;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 17:\n              txReceipt = _context3.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context3.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 22:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 23:\n              _context3.next = 28;\n              break;\n            case 25:\n              _context3.prev = 25;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to register commercial use PIL\");\n            case 28:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 25]]);\n      }));\n      function registerCommercialUsePIL(_x3) {\n        return _registerCommercialUsePIL.apply(this, arguments);\n      }\n      return registerCommercialUsePIL;\n    }()\n    /**\n     * Convenient function to register a PIL commercial Remix license to the registry.\n     * @param request - The request object that contains all data needed to register license.\n     *   @param request.defaultMintingFee The fee to be paid when minting a license.\n     *   @param request.commercialRevShare Percentage of revenue that must be shared with the licensor.\n     *   @param request.currency The ERC20 token to be used to pay the minting fee. the token must be registered in story protocol.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the optional transaction hash and optional license terms Id.\n     * @emits LicenseTermsRegistered (licenseTermsId, licenseTemplate, licenseTerms);\n     */\n    )\n  }, {\n    key: \"registerCommercialRemixPIL\",\n    value: (function () {\n      var _registerCommercialRemixPIL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$txOptions7, licenseTerms, licenseTermsId, _request$txOptions8, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              licenseTerms = getLicenseTermByType(PIL_TYPE.COMMERCIAL_REMIX, {\n                defaultMintingFee: request.defaultMintingFee,\n                currency: request.currency,\n                royaltyPolicyLAPAddress: this.royaltyPolicyLAPClient.address,\n                commercialRevShare: request.commercialRevShare\n              });\n              _context4.next = 4;\n              return this.getLicenseTermsId(licenseTerms);\n            case 4:\n              licenseTermsId = _context4.sent;\n              if (!(licenseTermsId !== 0n)) {\n                _context4.next = 7;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                licenseTermsId: licenseTermsId\n              });\n            case 7:\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.encodedTxDataOnly)) {\n                _context4.next = 11;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: this.licenseTemplateClient.registerLicenseTermsEncode({\n                  terms: licenseTerms\n                })\n              });\n            case 11:\n              _context4.next = 13;\n              return this.licenseTemplateClient.registerLicenseTerms({\n                terms: licenseTerms\n              });\n            case 13:\n              txHash = _context4.sent;\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.waitForTransaction)) {\n                _context4.next = 22;\n                break;\n              }\n              _context4.next = 17;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 17:\n              txReceipt = _context4.sent;\n              targetLogs = this.licenseTemplateClient.parseTxLicenseTermsRegisteredEvent(txReceipt);\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTermsId: targetLogs[0].licenseTermsId\n              });\n            case 22:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 23:\n              _context4.next = 28;\n              break;\n            case 25:\n              _context4.prev = 25;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to register commercial remix PIL\");\n            case 28:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 25]]);\n      }));\n      function registerCommercialRemixPIL(_x4) {\n        return _registerCommercialRemixPIL.apply(this, arguments);\n      }\n      return registerCommercialRemixPIL;\n    }()\n    /**\n     * Attaches license terms to an IP.\n     * @param request - The request object that contains all data needed to attach license terms.\n     *   @param request.ipId The address of the IP to which the license terms are attached.\n     *   @param request.licenseTemplate The address of the license template.\n     *   @param request.licenseTermsId The ID of the license terms.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n    )\n  }, {\n    key: \"attachLicenseTerms\",\n    value: (function () {\n      var _attachLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$txOptions9, isRegistered, isExisted, isAttachedLicenseTerms, req, _request$txOptions10, txHash;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              request.licenseTermsId = BigInt(request.licenseTermsId);\n              _context5.next = 4;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(request.ipId, \"request.ipId\")\n              });\n            case 4:\n              isRegistered = _context5.sent;\n              if (isRegistered) {\n                _context5.next = 7;\n                break;\n              }\n              throw new Error(\"The IP with id \".concat(request.ipId, \" is not registered.\"));\n            case 7:\n              _context5.next = 9;\n              return this.piLicenseTemplateReadOnlyClient.exists({\n                licenseTermsId: request.licenseTermsId\n              });\n            case 9:\n              isExisted = _context5.sent;\n              if (isExisted) {\n                _context5.next = 12;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsId, \" do not exist.\"));\n            case 12:\n              _context5.next = 14;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: request.ipId,\n                licenseTemplate: request.licenseTemplate && getAddress$1(request.licenseTemplate, \"request.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId\n              });\n            case 14:\n              isAttachedLicenseTerms = _context5.sent;\n              if (!isAttachedLicenseTerms) {\n                _context5.next = 17;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                txHash: \"\",\n                success: false\n              });\n            case 17:\n              req = {\n                ipId: request.ipId,\n                licenseTemplate: request.licenseTemplate || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId\n              };\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.encodedTxDataOnly)) {\n                _context5.next = 22;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.attachLicenseTermsEncode(req)\n              });\n            case 22:\n              _context5.next = 24;\n              return this.licensingModuleClient.attachLicenseTerms(req);\n            case 24:\n              txHash = _context5.sent;\n              if (!((_request$txOptions10 = request.txOptions) !== null && _request$txOptions10 !== void 0 && _request$txOptions10.waitForTransaction)) {\n                _context5.next = 31;\n                break;\n              }\n              _context5.next = 28;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 28:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                success: true\n              });\n            case 31:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 32:\n              _context5.next = 37;\n              break;\n            case 34:\n              _context5.prev = 34;\n              _context5.t0 = _context5[\"catch\"](0);\n              handleError(_context5.t0, \"Failed to attach license terms\");\n            case 37:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 34]]);\n      }));\n      function attachLicenseTerms(_x5) {\n        return _attachLicenseTerms.apply(this, arguments);\n      }\n      return attachLicenseTerms;\n    }()\n    /**\n     * Mints license tokens for the license terms attached to an IP.\n     * The license tokens are minted to the receiver.\n     * The license terms must be attached to the IP before calling this function.\n     * But it can mint license token of default license terms without attaching the default license terms,\n     * since it is attached to all IPs by default.\n     * IP owners can mint license tokens for their IPs for arbitrary license terms\n     * without attaching the license terms to IP.\n     * It might require the caller pay the minting fee, depending on the license terms or configured by the iP owner.\n     * The minting fee is paid in the minting fee token specified in the license terms or configured by the IP owner.\n     * IP owners can configure the minting fee of their IPs or\n     * configure the minting fee module to determine the minting fee.\n     * @param request - The request object that contains all data needed to mint license tokens.\n     *   @param request.licensorIpId The licensor IP ID.\n     *   @param request.licenseTemplate The address of the license template.\n     *   @param request.licenseTermsId The ID of the license terms within the license template.\n     *   @param request.amount The amount of license tokens to mint.\n     *   @param request.receiver The address of the receiver.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional license token IDs if waitForTxn is set to true.\n     * @emits LicenseTokensMinted (msg.sender, licensorIpId, licenseTemplate, licenseTermsId, amount, receiver, startLicenseTokenId);\n     */\n    )\n  }, {\n    key: \"mintLicenseTokens\",\n    value: (function () {\n      var _mintLicenseTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(request) {\n        var _request$txOptions11, isLicenseIpIdRegistered, isExisted, isAttachedLicenseTerms, amount, req, _request$txOptions12, txHash, txReceipt, targetLogs, startLicenseTokenId, licenseTokenIds, i;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.prev = 0;\n              request.licenseTermsId = BigInt(request.licenseTermsId);\n              _context6.next = 4;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(request.licensorIpId, \"request.licensorIpId\")\n              });\n            case 4:\n              isLicenseIpIdRegistered = _context6.sent;\n              if (isLicenseIpIdRegistered) {\n                _context6.next = 7;\n                break;\n              }\n              throw new Error(\"The licensor IP with id \".concat(request.licensorIpId, \" is not registered.\"));\n            case 7:\n              _context6.next = 9;\n              return this.piLicenseTemplateReadOnlyClient.exists({\n                licenseTermsId: request.licenseTermsId\n              });\n            case 9:\n              isExisted = _context6.sent;\n              if (isExisted) {\n                _context6.next = 12;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsId, \" do not exist.\"));\n            case 12:\n              _context6.next = 14;\n              return this.licenseRegistryReadOnlyClient.hasIpAttachedLicenseTerms({\n                ipId: request.licensorIpId,\n                licenseTemplate: request.licenseTemplate && getAddress$1(request.licenseTemplate, \"request.licenseTemplate\") || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId\n              });\n            case 14:\n              isAttachedLicenseTerms = _context6.sent;\n              if (isAttachedLicenseTerms) {\n                _context6.next = 17;\n                break;\n              }\n              throw new Error(\"License terms id \".concat(request.licenseTermsId, \" is not attached to the IP with id \").concat(request.licensorIpId, \".\"));\n            case 17:\n              amount = BigInt(request.amount || 1);\n              req = {\n                licensorIpId: request.licensorIpId,\n                licenseTemplate: request.licenseTemplate || this.licenseTemplateClient.address,\n                licenseTermsId: request.licenseTermsId,\n                amount: amount,\n                receiver: request.receiver && getAddress$1(request.receiver, \"request.receiver\") || this.wallet.account.address,\n                royaltyContext: zeroAddress\n              };\n              if (!((_request$txOptions11 = request.txOptions) !== null && _request$txOptions11 !== void 0 && _request$txOptions11.encodedTxDataOnly)) {\n                _context6.next = 23;\n                break;\n              }\n              return _context6.abrupt(\"return\", {\n                encodedTxData: this.licensingModuleClient.mintLicenseTokensEncode(req)\n              });\n            case 23:\n              _context6.next = 25;\n              return this.licensingModuleClient.mintLicenseTokens(req);\n            case 25:\n              txHash = _context6.sent;\n              if (!((_request$txOptions12 = request.txOptions) !== null && _request$txOptions12 !== void 0 && _request$txOptions12.waitForTransaction)) {\n                _context6.next = 37;\n                break;\n              }\n              _context6.next = 29;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 29:\n              txReceipt = _context6.sent;\n              targetLogs = this.licensingModuleClient.parseTxLicenseTokensMintedEvent(txReceipt);\n              startLicenseTokenId = targetLogs[0].startLicenseTokenId;\n              licenseTokenIds = [];\n              for (i = 0; i < amount; i++) {\n                licenseTokenIds.push(startLicenseTokenId + BigInt(i));\n              }\n              return _context6.abrupt(\"return\", {\n                txHash: txHash,\n                licenseTokenIds: licenseTokenIds\n              });\n            case 37:\n              return _context6.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 38:\n              _context6.next = 43;\n              break;\n            case 40:\n              _context6.prev = 40;\n              _context6.t0 = _context6[\"catch\"](0);\n              handleError(_context6.t0, \"Failed to mint license tokens\");\n            case 43:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this, [[0, 40]]);\n      }));\n      function mintLicenseTokens(_x6) {\n        return _mintLicenseTokens.apply(this, arguments);\n      }\n      return mintLicenseTokens;\n    }()\n    /**\n     * Gets license terms of the given ID.\n     * @param selectedLicenseTermsId The ID of the license terms.\n     * @returns A Promise that resolves to an object containing the PILTerms associate with the given ID.\n     */\n    )\n  }, {\n    key: \"getLicenseTerms\",\n    value: (function () {\n      var _getLicenseTerms = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(selectedLicenseTermsId) {\n        return _regeneratorRuntime().wrap(function _callee7$(_context7) {\n          while (1) switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.prev = 0;\n              _context7.next = 3;\n              return this.piLicenseTemplateReadOnlyClient.getLicenseTerms({\n                selectedLicenseTermsId: BigInt(selectedLicenseTermsId)\n              });\n            case 3:\n              return _context7.abrupt(\"return\", _context7.sent);\n            case 6:\n              _context7.prev = 6;\n              _context7.t0 = _context7[\"catch\"](0);\n              handleError(_context7.t0, \"Failed to get license terms\");\n            case 9:\n            case \"end\":\n              return _context7.stop();\n          }\n        }, _callee7, this, [[0, 6]]);\n      }));\n      function getLicenseTerms(_x7) {\n        return _getLicenseTerms.apply(this, arguments);\n      }\n      return getLicenseTerms;\n    }())\n  }, {\n    key: \"getLicenseTermsId\",\n    value: function () {\n      var _getLicenseTermsId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8(request) {\n        var licenseRes;\n        return _regeneratorRuntime().wrap(function _callee8$(_context8) {\n          while (1) switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return this.licenseTemplateClient.getLicenseTermsId({\n                terms: request\n              });\n            case 2:\n              licenseRes = _context8.sent;\n              return _context8.abrupt(\"return\", licenseRes.selectedLicenseTermsId);\n            case 4:\n            case \"end\":\n              return _context8.stop();\n          }\n        }, _callee8, this);\n      }));\n      function getLicenseTermsId(_x8) {\n        return _getLicenseTermsId.apply(this, arguments);\n      }\n      return getLicenseTermsId;\n    }()\n  }, {\n    key: \"verifyCommercialUse\",\n    value: function verifyCommercialUse(terms) {\n      if (!terms.commercialUse) {\n        if (terms.commercialAttribution) {\n          throw new Error(\"Cannot add commercial attribution when commercial use is disabled.\");\n        }\n        if (terms.commercializerChecker !== zeroAddress) {\n          throw new Error(\"Cannot add commercializerChecker when commercial use is disabled.\");\n        }\n        if (terms.commercialRevShare > 0) {\n          throw new Error(\"Cannot add commercial revenue share when commercial use is disabled.\");\n        }\n        if (terms.commercialRevCeiling > 0) {\n          throw new Error(\"Cannot add commercial revenue ceiling when commercial use is disabled.\");\n        }\n        if (terms.derivativeRevCeiling > 0) {\n          throw new Error(\"Cannot add derivative revenue ceiling share when commercial use is disabled.\");\n        }\n        if (terms.royaltyPolicy !== zeroAddress) {\n          throw new Error(\"Cannot add commercial royalty policy when commercial use is disabled.\");\n        }\n      } else {\n        if (terms.royaltyPolicy === zeroAddress) {\n          throw new Error(\"Royalty policy is required when commercial use is enabled.\");\n        }\n      }\n    }\n  }, {\n    key: \"verifyDerivatives\",\n    value: function verifyDerivatives(terms) {\n      if (!terms.derivativesAllowed) {\n        if (terms.derivativesAttribution) {\n          throw new Error(\"Cannot add derivative attribution when derivative use is disabled.\");\n        }\n        if (terms.derivativesApproval) {\n          throw new Error(\"Cannot add derivative approval when derivative use is disabled.\");\n        }\n        if (terms.derivativesReciprocal) {\n          throw new Error(\"Cannot add derivative reciprocal when derivative use is disabled.\");\n        }\n        if (terms.derivativeRevCeiling > 0) {\n          throw new Error(\"Cannot add derivative revenue ceiling when derivative use is disabled.\");\n        }\n      }\n    }\n  }]);\n}();\n\nvar DisputeClient = /*#__PURE__*/function () {\n  function DisputeClient(rpcClient, wallet) {\n    _classCallCheck(this, DisputeClient);\n    this.rpcClient = rpcClient;\n    this.disputeModuleClient = new DisputeModuleClient(rpcClient, wallet);\n  }\n\n  /**\n   * Raises a dispute on a given ipId\n   * @param request - The request object containing necessary data to raise a dispute.\n   *   @param request.targetIpId - The IP ID that is the target of the dispute.\n   *   @param request.arbitrationPolicy - The address of the arbitration policy.\n   *   @param request.linkToDisputeEvidence - The link to the dispute evidence.\n   *   @param request.targetTag - The target tag of the dispute.\n   *   @param request.calldata - Optional calldata to initialize the policy.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to a RaiseDisputeResponse containing the transaction hash.\n   * @throws `NotRegisteredIpId` if targetIpId is not registered in the IPA Registry.\n   * @throws `NotWhitelistedDisputeTag` if targetTag is not whitelisted.\n   * @throws `ZeroLinkToDisputeEvidence` if linkToDisputeEvidence is empty\n   * @calls raiseDispute(address _targetIpId, string memory _linkToDisputeEvidence, bytes32 _targetTag, bytes calldata _data) external nonReentrant returns (uint256) {\n   * @emits DisputeRaised (disputeId_, targetIpId, msg.sender, arbitrationPolicy, linkToDisputeEvidence, targetTag, calldata);\n   */\n  return _createClass(DisputeClient, [{\n    key: \"raiseDispute\",\n    value: (function () {\n      var _raiseDispute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, req, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              req = {\n                targetIpId: getAddress$1(request.targetIpId, \"request.targetIpId\"),\n                linkToDisputeEvidence: request.linkToDisputeEvidence,\n                targetTag: stringToHex(request.targetTag, {\n                  size: 32\n                }),\n                data: request.calldata || \"0x\"\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 6;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.disputeModuleClient.raiseDisputeEncode(req)\n              });\n            case 6:\n              _context.next = 8;\n              return this.disputeModuleClient.raiseDispute(req);\n            case 8:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 15;\n                break;\n              }\n              _context.next = 12;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 12:\n              txReceipt = _context.sent;\n              targetLogs = this.disputeModuleClient.parseTxDisputeRaisedEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                disputeId: targetLogs[0].disputeId\n              });\n            case 15:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 16:\n              _context.next = 21;\n              break;\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to raise dispute\");\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 18]]);\n      }));\n      function raiseDispute(_x) {\n        return _raiseDispute.apply(this, arguments);\n      }\n      return raiseDispute;\n    }()\n    /**\n     * Cancels an ongoing dispute\n     * @param request - The request object containing details to cancel the dispute.\n     *   @param request.disputeId The ID of the dispute to be cancelled.\n     *   @param request.calldata Optional additional data used in the cancellation process.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to a CancelDisputeResponse containing the transaction hash.\n     * @throws NotInDisputeState, if the currentTag of the Dispute is not being disputed\n     * @throws NotDisputeInitiator, if the transaction executor is not the one that initiated the dispute\n     * @throws error if the Dispute's ArbitrationPolicy contract is not valid\n     * @calls cancelDispute(uint256 _disputeId, bytes calldata _data) external nonReentrant {\n     * @emits DisputeCancelled (_disputeId, _data);\n     */\n    )\n  }, {\n    key: \"cancelDispute\",\n    value: (function () {\n      var _cancelDispute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              req = {\n                disputeId: BigInt(request.disputeId),\n                data: request.calldata ? request.calldata : \"0x\"\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 6;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.disputeModuleClient.cancelDisputeEncode(req)\n              });\n            case 6:\n              _context2.next = 8;\n              return this.disputeModuleClient.cancelDispute(req);\n            case 8:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 12;\n                break;\n              }\n              _context2.next = 12;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 12:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 13:\n              _context2.next = 18;\n              break;\n            case 15:\n              _context2.prev = 15;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to cancel dispute\");\n            case 18:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 15]]);\n      }));\n      function cancelDispute(_x2) {\n        return _cancelDispute.apply(this, arguments);\n      }\n      return cancelDispute;\n    }()\n    /**\n     * Resolves a dispute after it has been judged\n     * @param request - The request object containing details to resolve the dispute.\n     *   @param request.disputeId The ID of the dispute to be resolved.\n     *   @param request.data The data to resolve the dispute.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to a ResolveDisputeResponse.\n     * @throws NotAbleToResolve, if currentTag is still in dispute (i.e still needs a judgement to be set)\n     * @throws NotDisputeInitiator, if the transaction executor is not the one that initiated the dispute\n     * @emits DisputeResolved (_disputeId)\n     */\n    )\n  }, {\n    key: \"resolveDispute\",\n    value: (function () {\n      var _resolveDispute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var _request$txOptions5, req, _request$txOptions6, txHash;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              req = {\n                disputeId: BigInt(request.disputeId),\n                data: request.data\n              };\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context3.next = 6;\n                break;\n              }\n              return _context3.abrupt(\"return\", {\n                encodedTxData: this.disputeModuleClient.resolveDisputeEncode(req)\n              });\n            case 6:\n              _context3.next = 8;\n              return this.disputeModuleClient.resolveDispute(req);\n            case 8:\n              txHash = _context3.sent;\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.waitForTransaction)) {\n                _context3.next = 12;\n                break;\n              }\n              _context3.next = 12;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 12:\n              return _context3.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 13:\n              _context3.next = 18;\n              break;\n            case 15:\n              _context3.prev = 15;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to resolve dispute\");\n            case 18:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 15]]);\n      }));\n      function resolveDispute(_x3) {\n        return _resolveDispute.apply(this, arguments);\n      }\n      return resolveDispute;\n    }())\n  }]);\n}();\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nvar IPAccountClient = /*#__PURE__*/function () {\n  function IPAccountClient(rpcClient, wallet) {\n    _classCallCheck(this, IPAccountClient);\n    this.wallet = wallet;\n    this.rpcClient = rpcClient;\n  }\n\n  /** Executes a transaction from the IP Account.\n   * @param request - The request object containing necessary data to execute IP Account a transaction.\n   *   @param request.ipId The Ip Id to get ip account.\n   *   @param request.to The recipient of the transaction.\n   *   @param request.value The amount of Ether to send.\n   *   @param request.accountAddress The ipId to send.\n   *   @param request.data The data to send along with the transaction.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns Tx hash for the transaction.\n   */\n  return _createClass(IPAccountClient, [{\n    key: \"execute\",\n    value: (function () {\n      var _execute = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, ipAccountClient, req, _request$txOptions2, txHash;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(request.ipId, \"request.ipId\"));\n              req = {\n                to: request.to,\n                value: BigInt(0),\n                data: request.data\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 7;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeEncode(_objectSpread2(_objectSpread2({}, req), {}, {\n                  operation: 0\n                }))\n              });\n            case 7:\n              _context.next = 9;\n              return ipAccountClient.execute(_objectSpread2(_objectSpread2({}, req), {}, {\n                operation: 0\n              }));\n            case 9:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 13;\n                break;\n              }\n              _context.next = 13;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 13:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 14:\n              _context.next = 19;\n              break;\n            case 16:\n              _context.prev = 16;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to execute the IP Account transaction\");\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 16]]);\n      }));\n      function execute(_x) {\n        return _execute.apply(this, arguments);\n      }\n      return execute;\n    }()\n    /** Executes a transaction from the IP Account.\n     * @param request - The request object containing necessary data to execute IP Account a transaction.\n     *   @param request.ipId The Ip Id to get ip account.\n     *   @param request.to The recipient of the transaction.\n     *   @param request.value The amount of Ether to send.\n     *   @param request.data The data to send along with the transaction.\n     *   @param request.signer The signer of the transaction.\n     *   @param request.deadline The deadline of the transaction signature.\n     *   @param request.signature The signature of the transaction, EIP-712 encoded.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns Tx hash for the transaction.\n     */\n    )\n  }, {\n    key: \"executeWithSig\",\n    value: (function () {\n      var _executeWithSig = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, ipAccountClient, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              ipAccountClient = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(request.ipId, \"request.ipId\"));\n              req = {\n                to: getAddress$1(request.to, \"request.to\"),\n                value: BigInt(0),\n                data: request.data,\n                signer: getAddress$1(request.signer, \"request.signer\"),\n                deadline: BigInt(request.deadline),\n                signature: request.signature\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 7;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: ipAccountClient.executeWithSigEncode(req)\n              });\n            case 7:\n              _context2.next = 9;\n              return ipAccountClient.executeWithSig(req);\n            case 9:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 13;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 13:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 14:\n              _context2.next = 19;\n              break;\n            case 16:\n              _context2.prev = 16;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to execute with signature for the IP Account transaction\");\n            case 19:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 16]]);\n      }));\n      function executeWithSig(_x2) {\n        return _executeWithSig.apply(this, arguments);\n      }\n      return executeWithSig;\n    }()\n    /** Returns the IPAccount's internal nonce for transaction ordering.\n     * @param ipId The IP ID\n     * @returns A Promise that resolves to the IP Account's nonce.\n     */\n    )\n  }, {\n    key: \"getIpAccountNonce\",\n    value: (function () {\n      var _getIpAccountNonce = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(ipId) {\n        var ipAccount, _yield$ipAccount$stat, state;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              ipAccount = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(ipId, \"ipId\"));\n              _context3.next = 4;\n              return ipAccount.state();\n            case 4:\n              _yield$ipAccount$stat = _context3.sent;\n              state = _yield$ipAccount$stat.result;\n              return _context3.abrupt(\"return\", state);\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to get the IP Account nonce\");\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 9]]);\n      }));\n      function getIpAccountNonce(_x3) {\n        return _getIpAccountNonce.apply(this, arguments);\n      }\n      return getIpAccountNonce;\n    }()\n    /**\n     * Returns the identifier of the non-fungible token which owns the account\n     * @returns A Promise that resolves to an object containing the chain ID, token contract address, and token ID.\n     */\n    )\n  }, {\n    key: \"getToken\",\n    value: (function () {\n      var _getToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(ipId) {\n        var ipAccount, _yield$ipAccount$toke, _yield$ipAccount$toke2, chainId, tokenContract, tokenId;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              ipAccount = new IpAccountImplClient(this.rpcClient, this.wallet, getAddress$1(ipId, \"ipId\"));\n              _context4.next = 4;\n              return ipAccount.token();\n            case 4:\n              _yield$ipAccount$toke = _context4.sent;\n              _yield$ipAccount$toke2 = _slicedToArray(_yield$ipAccount$toke, 3);\n              chainId = _yield$ipAccount$toke2[0];\n              tokenContract = _yield$ipAccount$toke2[1];\n              tokenId = _yield$ipAccount$toke2[2];\n              return _context4.abrupt(\"return\", {\n                chainId: chainId,\n                tokenContract: tokenContract,\n                tokenId: tokenId\n              });\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to get the token\");\n            case 15:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 12]]);\n      }));\n      function getToken(_x4) {\n        return _getToken.apply(this, arguments);\n      }\n      return getToken;\n    }())\n  }]);\n}();\n\nvar RoyaltyClient = /*#__PURE__*/function () {\n  function RoyaltyClient(rpcClient, wallet) {\n    _classCallCheck(this, RoyaltyClient);\n    this.royaltyPolicyLapClient = new RoyaltyPolicyLapClient(rpcClient, wallet);\n    this.royaltyModuleClient = new RoyaltyModuleClient(rpcClient, wallet);\n    this.ipAssetRegistryClient = new IpAssetRegistryClient(rpcClient, wallet);\n    this.ipAccountClient = new IPAccountClient(rpcClient, wallet);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n  }\n\n  /**\n   * Allows ancestors to claim the royalty tokens and any accrued revenue tokens\n   * @param request - The request object that contains all data needed to collect royalty tokens.\n   *   @param request.parentIpId The ip id of the ancestor to whom the royalty tokens belong to.\n   *   @param request.royaltyVaultIpId The id of the royalty vault.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to an object containing the transaction hash and optional the amount of royalty tokens collected if waitForTxn is set to true.\n   * @emits RoyaltyTokensCollected (ancestorIpId, royaltyTokensCollected)\n   */\n  return _createClass(RoyaltyClient, [{\n    key: \"collectRoyaltyTokens\",\n    value: (function () {\n      var _collectRoyaltyTokens = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$txOptions, isParentIpIdRegistered, proxyAddress, ipRoyaltyVault, req, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(request.parentIpId, \"request.parentIpId\")\n              });\n            case 3:\n              isParentIpIdRegistered = _context.sent;\n              if (isParentIpIdRegistered) {\n                _context.next = 6;\n                break;\n              }\n              throw new Error(\"The parent IP with id \".concat(request.parentIpId, \" is not registered.\"));\n            case 6:\n              _context.next = 8;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 8:\n              proxyAddress = _context.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              req = {\n                ancestorIpId: request.parentIpId\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 15;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: ipRoyaltyVault.collectRoyaltyTokensEncode(req)\n              });\n            case 15:\n              _context.next = 17;\n              return ipRoyaltyVault.collectRoyaltyTokens(req);\n            case 17:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 26;\n                break;\n              }\n              _context.next = 21;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 21:\n              txReceipt = _context.sent;\n              targetLogs = ipRoyaltyVault.parseTxRoyaltyTokensCollectedEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                royaltyTokensCollected: targetLogs[0].royaltyTokensCollected\n              });\n            case 26:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 27:\n              _context.next = 32;\n              break;\n            case 29:\n              _context.prev = 29;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to collect royalty tokens\");\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 29]]);\n      }));\n      function collectRoyaltyTokens(_x) {\n        return _collectRoyaltyTokens.apply(this, arguments);\n      }\n      return collectRoyaltyTokens;\n    }()\n    /**\n     * Allows the function caller to pay royalties to the receiver IP asset on behalf of the payer IP asset.\n     * @param request - The request object that contains all data needed to pay royalty on behalf.\n     *   @param request.receiverIpId The ipId that receives the royalties.\n     *   @param request.payerIpId The ID of the IP asset that pays the royalties.\n     *   @param request.token The token to use to pay the royalties.\n     *   @param request.amount The amount to pay.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash.\n     */\n    )\n  }, {\n    key: \"payRoyaltyOnBehalf\",\n    value: (function () {\n      var _payRoyaltyOnBehalf = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(request) {\n        var _request$txOptions3, receiverIpId, payerIpId, token, amount, isReceiverRegistered, isPayerRegistered, req, _request$txOptions4, txHash;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              receiverIpId = request.receiverIpId, payerIpId = request.payerIpId, token = request.token, amount = request.amount;\n              _context2.next = 4;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(receiverIpId, \"request.receiverIpId\")\n              });\n            case 4:\n              isReceiverRegistered = _context2.sent;\n              if (isReceiverRegistered) {\n                _context2.next = 7;\n                break;\n              }\n              throw new Error(\"The receiver IP with id \".concat(receiverIpId, \" is not registered.\"));\n            case 7:\n              if (!(getAddress$1(payerIpId, \"request.payerIpId\") && payerIpId !== zeroAddress)) {\n                _context2.next = 13;\n                break;\n              }\n              _context2.next = 10;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: payerIpId\n              });\n            case 10:\n              isPayerRegistered = _context2.sent;\n              if (isPayerRegistered) {\n                _context2.next = 13;\n                break;\n              }\n              throw new Error(\"The payer IP with id \".concat(request.payerIpId, \" is not registered.\"));\n            case 13:\n              req = {\n                receiverIpId: receiverIpId,\n                payerIpId: payerIpId,\n                token: getAddress$1(token, \"request.token\"),\n                amount: BigInt(amount)\n              };\n              if (!((_request$txOptions3 = request.txOptions) !== null && _request$txOptions3 !== void 0 && _request$txOptions3.encodedTxDataOnly)) {\n                _context2.next = 18;\n                break;\n              }\n              return _context2.abrupt(\"return\", {\n                encodedTxData: this.royaltyModuleClient.payRoyaltyOnBehalfEncode(req)\n              });\n            case 18:\n              _context2.next = 20;\n              return this.royaltyModuleClient.payRoyaltyOnBehalf(req);\n            case 20:\n              txHash = _context2.sent;\n              if (!((_request$txOptions4 = request.txOptions) !== null && _request$txOptions4 !== void 0 && _request$txOptions4.waitForTransaction)) {\n                _context2.next = 27;\n                break;\n              }\n              _context2.next = 24;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 24:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 27:\n              return _context2.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 28:\n              _context2.next = 33;\n              break;\n            case 30:\n              _context2.prev = 30;\n              _context2.t0 = _context2[\"catch\"](0);\n              handleError(_context2.t0, \"Failed to pay royalty on behalf\");\n            case 33:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2, this, [[0, 30]]);\n      }));\n      function payRoyaltyOnBehalf(_x2) {\n        return _payRoyaltyOnBehalf.apply(this, arguments);\n      }\n      return payRoyaltyOnBehalf;\n    }()\n    /**\n     * Calculates the amount of revenue token claimable by a token holder at certain snapshot.\n     * @param request - The request object that contains all data needed to claim Revenue.\n     *   @param request.royaltyVaultIpId The id of the royalty vault.\n     *   @param request.account The address of the token holder.\n     *   @param request.snapshotId The snapshot id.\n     *   @param request.token The revenue token to claim.\n     * @returns A Promise that contains the amount of revenue token claimable\n     */\n    )\n  }, {\n    key: \"claimableRevenue\",\n    value: (function () {\n      var _claimableRevenue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(request) {\n        var proxyAddress, ipRoyaltyVault;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 3:\n              proxyAddress = _context3.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              _context3.next = 7;\n              return ipRoyaltyVault.claimableRevenue({\n                account: getAddress$1(request.account, \"request.account\"),\n                snapshotId: BigInt(request.snapshotId),\n                token: getAddress$1(request.token, \"request.token\")\n              });\n            case 7:\n              return _context3.abrupt(\"return\", _context3.sent);\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](0);\n              handleError(_context3.t0, \"Failed to calculate claimable revenue\");\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3, this, [[0, 10]]);\n      }));\n      function claimableRevenue(_x3) {\n        return _claimableRevenue.apply(this, arguments);\n      }\n      return claimableRevenue;\n    }()\n    /**\n     * Allows token holders to claim by a list of snapshot ids based on the token balance at certain snapshot\n     * @param request - The request object that contains all data needed to claim revenue.\n     *   @param request.snapshotIds The list of snapshot ids.\n     *   @param request.royaltyVaultIpId The id of the royalty vault.\n     *   @param request.token The revenue token to claim.\n     *   @param request.account [Optional] The ipId to send.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional claimableToken if waitForTxn is set to true.\n     * @emits RevenueTokenClaimed (claimer, token, amount).\n     */\n    )\n  }, {\n    key: \"claimRevenue\",\n    value: (function () {\n      var _claimRevenue = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(request) {\n        var _request$txOptions7, proxyAddress, ipRoyaltyVault, txHash, _request$txOptions5, iPAccountExecuteResponse, _request$txOptions6, req, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 3:\n              proxyAddress = _context4.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              request.snapshotIds = request.snapshotIds.map(function (item) {\n                return BigInt(item);\n              });\n              if (!request.account) {\n                _context4.next = 15;\n                break;\n              }\n              _context4.next = 9;\n              return this.ipAccountClient.execute({\n                to: proxyAddress,\n                value: 0,\n                ipId: getAddress$1(request.account, \"request.account\"),\n                txOptions: request.txOptions,\n                data: encodeFunctionData({\n                  abi: ipRoyaltyVaultImplAbi,\n                  functionName: \"claimRevenueBySnapshotBatch\",\n                  args: [request.snapshotIds, request.token]\n                })\n              });\n            case 9:\n              iPAccountExecuteResponse = _context4.sent;\n              if (!((_request$txOptions5 = request.txOptions) !== null && _request$txOptions5 !== void 0 && _request$txOptions5.encodedTxDataOnly)) {\n                _context4.next = 12;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: iPAccountExecuteResponse.encodedTxData\n              });\n            case 12:\n              txHash = iPAccountExecuteResponse.txHash;\n              _context4.next = 23;\n              break;\n            case 15:\n              req = {\n                snapshotIds: request.snapshotIds,\n                token: getAddress$1(request.token, \"request.token\")\n              };\n              if (!((_request$txOptions6 = request.txOptions) !== null && _request$txOptions6 !== void 0 && _request$txOptions6.encodedTxDataOnly)) {\n                _context4.next = 20;\n                break;\n              }\n              return _context4.abrupt(\"return\", {\n                encodedTxData: ipRoyaltyVault.claimRevenueBySnapshotBatchEncode(req)\n              });\n            case 20:\n              _context4.next = 22;\n              return ipRoyaltyVault.claimRevenueBySnapshotBatch(req);\n            case 22:\n              txHash = _context4.sent;\n            case 23:\n              if (!((_request$txOptions7 = request.txOptions) !== null && _request$txOptions7 !== void 0 && _request$txOptions7.waitForTransaction)) {\n                _context4.next = 31;\n                break;\n              }\n              _context4.next = 26;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 26:\n              txReceipt = _context4.sent;\n              targetLogs = ipRoyaltyVault.parseTxRevenueTokenClaimedEvent(txReceipt);\n              return _context4.abrupt(\"return\", {\n                txHash: txHash,\n                claimableToken: targetLogs[0].amount\n              });\n            case 31:\n              return _context4.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 32:\n              _context4.next = 37;\n              break;\n            case 34:\n              _context4.prev = 34;\n              _context4.t0 = _context4[\"catch\"](0);\n              handleError(_context4.t0, \"Failed to claim revenue\");\n            case 37:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4, this, [[0, 34]]);\n      }));\n      function claimRevenue(_x4) {\n        return _claimRevenue.apply(this, arguments);\n      }\n      return claimRevenue;\n    }()\n    /**\n     * Snapshots the claimable revenue and royalty token amounts.\n     * @param request - The request object that contains all data needed to snapshot.\n     *   @param request.royaltyVaultIpId The id of the royalty vault.\n     *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n     * @returns A Promise that resolves to an object containing the transaction hash and optional snapshotId if waitForTxn is set to true.\n     * @emits SnapshotCompleted (snapshotId, snapshotTimestamp, unclaimedTokens).\n     */\n    )\n  }, {\n    key: \"snapshot\",\n    value: (function () {\n      var _snapshot = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(request) {\n        var _request$txOptions8, proxyAddress, ipRoyaltyVault, _request$txOptions9, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.prev = 0;\n              _context5.next = 3;\n              return this.getRoyaltyVaultAddress(getAddress$1(request.royaltyVaultIpId, \"request.royaltyVaultIpId\"));\n            case 3:\n              proxyAddress = _context5.sent;\n              ipRoyaltyVault = new IpRoyaltyVaultImplClient(this.rpcClient, this.wallet, proxyAddress);\n              if (!((_request$txOptions8 = request.txOptions) !== null && _request$txOptions8 !== void 0 && _request$txOptions8.encodedTxDataOnly)) {\n                _context5.next = 9;\n                break;\n              }\n              return _context5.abrupt(\"return\", {\n                encodedTxData: ipRoyaltyVault.snapshotEncode()\n              });\n            case 9:\n              _context5.next = 11;\n              return ipRoyaltyVault.snapshot();\n            case 11:\n              txHash = _context5.sent;\n              if (!((_request$txOptions9 = request.txOptions) !== null && _request$txOptions9 !== void 0 && _request$txOptions9.waitForTransaction)) {\n                _context5.next = 20;\n                break;\n              }\n              _context5.next = 15;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 15:\n              txReceipt = _context5.sent;\n              targetLogs = ipRoyaltyVault.parseTxSnapshotCompletedEvent(txReceipt);\n              return _context5.abrupt(\"return\", {\n                txHash: txHash,\n                snapshotId: targetLogs[0].snapshotId\n              });\n            case 20:\n              return _context5.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 21:\n              _context5.next = 26;\n              break;\n            case 23:\n              _context5.prev = 23;\n              _context5.t0 = _context5[\"catch\"](0);\n              handleError(_context5.t0, \"Failed to snapshot\");\n            case 26:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5, this, [[0, 23]]);\n      }));\n      function snapshot(_x5) {\n        return _snapshot.apply(this, arguments);\n      }\n      return snapshot;\n    }()\n    /**\n     * Get the royalty vault proxy address of given royaltyVaultIpId.\n     * @param royaltyVaultIpId the id of the royalty vault.\n     * @returns A Promise that resolves to an object containing the royalty vault address.\n     */\n    )\n  }, {\n    key: \"getRoyaltyVaultAddress\",\n    value: (function () {\n      var _getRoyaltyVaultAddress = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(royaltyVaultIpId) {\n        var isRoyaltyVaultIpIdRegistered, data;\n        return _regeneratorRuntime().wrap(function _callee6$(_context6) {\n          while (1) switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return this.ipAssetRegistryClient.isRegistered({\n                id: getAddress$1(royaltyVaultIpId, \"royaltyVaultIpId\")\n              });\n            case 2:\n              isRoyaltyVaultIpIdRegistered = _context6.sent;\n              if (isRoyaltyVaultIpIdRegistered) {\n                _context6.next = 5;\n                break;\n              }\n              throw new Error(\"The royalty vault IP with id \".concat(royaltyVaultIpId, \" is not registered.\"));\n            case 5:\n              _context6.next = 7;\n              return this.royaltyPolicyLapClient.getRoyaltyData({\n                ipId: royaltyVaultIpId\n              });\n            case 7:\n              data = _context6.sent;\n              if (!(!data[1] || data[1] === \"0x\")) {\n                _context6.next = 10;\n                break;\n              }\n              throw new Error(\"The royalty vault IP with id \".concat(royaltyVaultIpId, \" address is not set.\"));\n            case 10:\n              return _context6.abrupt(\"return\", data[1]);\n            case 11:\n            case \"end\":\n              return _context6.stop();\n          }\n        }, _callee6, this);\n      }));\n      function getRoyaltyVaultAddress(_x6) {\n        return _getRoyaltyVaultAddress.apply(this, arguments);\n      }\n      return getRoyaltyVaultAddress;\n    }())\n  }]);\n}();\n\nvar NftClient = /*#__PURE__*/function () {\n  function NftClient(rpcClient, wallet) {\n    _classCallCheck(this, NftClient);\n    this.rpcClient = rpcClient;\n    this.wallet = wallet;\n    this.spgClient = new SpgClient(rpcClient, wallet);\n  }\n\n  /**\n   * Creates a new SPG NFT Collection.\n   * @param request - The request object containing necessary data to create a SPG NFT Collection.\n   *   @param request.name - The name of the collection.\n   * \t @param request.symbol - The symbol of the collection.\n   * \t @param request.maxSupply - The maximum supply of the collection.\n   * \t @param request.mintFee - The cost to mint a token.\n   * \t @param request.mintFeeToken - The token to mint.\n   * \t @param request.owner - The owner of the collection.\n   *   @param request.txOptions - [Optional] transaction. This extends `WaitForTransactionReceiptParameters` from the Viem library, excluding the `hash` property.\n   * @returns A Promise that resolves to a CreateNFTCollectionResponse containing the transaction hash and collection address.\n   * @emits CollectionCreated (nftContract);\n   */\n  return _createClass(NftClient, [{\n    key: \"createNFTCollection\",\n    value: (function () {\n      var _createNFTCollection = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(request) {\n        var _request$maxSupply, _request$mintFee, _request$mintFeeToken, _request$txOptions, req, _request$txOptions2, txHash, txReceipt, targetLogs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (!(request.mintFee !== undefined && (request.mintFee < 0n || !isAddress(request.mintFeeToken || \"\")))) {\n                _context.next = 3;\n                break;\n              }\n              throw new Error(\"Invalid mint fee token address, mint fee is greater than 0.\");\n            case 3:\n              req = {\n                name: request.name,\n                symbol: request.symbol,\n                maxSupply: (_request$maxSupply = request.maxSupply) !== null && _request$maxSupply !== void 0 ? _request$maxSupply : Number(maxUint32),\n                mintFee: (_request$mintFee = request.mintFee) !== null && _request$mintFee !== void 0 ? _request$mintFee : 0n,\n                mintFeeToken: (_request$mintFeeToken = request.mintFeeToken) !== null && _request$mintFeeToken !== void 0 ? _request$mintFeeToken : zeroAddress,\n                owner: request.owner && getAddress$1(request.owner, \"request.owner\") || this.wallet.account.address\n              };\n              if (!((_request$txOptions = request.txOptions) !== null && _request$txOptions !== void 0 && _request$txOptions.encodedTxDataOnly)) {\n                _context.next = 8;\n                break;\n              }\n              return _context.abrupt(\"return\", {\n                encodedTxData: this.spgClient.createCollectionEncode(req)\n              });\n            case 8:\n              _context.next = 10;\n              return this.spgClient.createCollection(req);\n            case 10:\n              txHash = _context.sent;\n              if (!((_request$txOptions2 = request.txOptions) !== null && _request$txOptions2 !== void 0 && _request$txOptions2.waitForTransaction)) {\n                _context.next = 17;\n                break;\n              }\n              _context.next = 14;\n              return this.rpcClient.waitForTransactionReceipt(_objectSpread2(_objectSpread2({}, request.txOptions), {}, {\n                hash: txHash\n              }));\n            case 14:\n              txReceipt = _context.sent;\n              targetLogs = this.spgClient.parseTxCollectionCreatedEvent(txReceipt);\n              return _context.abrupt(\"return\", {\n                txHash: txHash,\n                nftContract: targetLogs[0].nftContract\n              });\n            case 17:\n              return _context.abrupt(\"return\", {\n                txHash: txHash\n              });\n            case 18:\n              _context.next = 23;\n              break;\n            case 20:\n              _context.prev = 20;\n              _context.t0 = _context[\"catch\"](0);\n              handleError(_context.t0, \"Failed to create a SPG NFT collection\");\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, this, [[0, 20]]);\n      }));\n      function createNFTCollection(_x) {\n        return _createNFTCollection.apply(this, arguments);\n      }\n      return createNFTCollection;\n    }())\n  }]);\n}();\n\nif (typeof process !== \"undefined\") {\n  dotenv.config();\n}\n/**\n * The StoryClient is the main entry point for the SDK.\n */\nvar StoryClient = /*#__PURE__*/function () {\n  /**\n   * @param config - the configuration for the SDK client\n   */\n  function StoryClient(config) {\n    _classCallCheck(this, StoryClient);\n    _defineProperty(this, \"_ipAsset\", null);\n    _defineProperty(this, \"_permission\", null);\n    _defineProperty(this, \"_license\", null);\n    _defineProperty(this, \"_dispute\", null);\n    _defineProperty(this, \"_ipAccount\", null);\n    _defineProperty(this, \"_royalty\", null);\n    _defineProperty(this, \"_nftClient\", null);\n    this.config = _objectSpread2(_objectSpread2({}, config), {}, {\n      chainId: config.chainId || \"iliad\"\n    });\n    if (!this.config.transport) {\n      throw new Error(\"transport is null, please pass in a valid RPC Provider URL as the transport.\");\n    }\n    var clientConfig = {\n      chain: chainStringToViemChain(this.config.chainId),\n      transport: this.config.transport\n    };\n    this.rpcClient = createPublicClient(clientConfig);\n    if (this.config.wallet) {\n      this.wallet = this.config.wallet;\n    } else if (this.config.account) {\n      var account = this.config.account;\n      this.wallet = createWalletClient(_objectSpread2(_objectSpread2({}, clientConfig), {}, {\n        account: account\n      }));\n    } else {\n      throw new Error(\"must specify a wallet or account\");\n    }\n  }\n\n  /**\n   * Factory method for creating a SDK client with a signer.\n   *\n   * @param config StoryClient - the configuration for a new SDK client\n   */\n  return _createClass(StoryClient, [{\n    key: \"ipAsset\",\n    get:\n    /**\n     * Getter for the ip asset client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the IPAssetClient instance\n     */\n    function get() {\n      if (this._ipAsset === null) {\n        this._ipAsset = new IPAssetClient(this.rpcClient, this.wallet, this.config.chainId);\n      }\n      return this._ipAsset;\n    }\n\n    /**\n     * Getter for the permission client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the PermissionClient instance\n     */\n  }, {\n    key: \"permission\",\n    get: function get() {\n      if (this._permission === null) {\n        this._permission = new PermissionClient(this.rpcClient, this.wallet, this.config.chainId);\n      }\n      return this._permission;\n    }\n\n    /**\n     * Getter for the license client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the LicenseClient instance\n     */\n  }, {\n    key: \"license\",\n    get: function get() {\n      if (this._license === null) {\n        this._license = new LicenseClient(this.rpcClient, this.wallet);\n      }\n      return this._license;\n    }\n\n    /**\n     * Getter for the dispute client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the DisputeClient instance\n     */\n  }, {\n    key: \"dispute\",\n    get: function get() {\n      if (this._dispute === null) {\n        this._dispute = new DisputeClient(this.rpcClient, this.wallet);\n      }\n      return this._dispute;\n    }\n\n    /**\n     * Getter for the ip account client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the IPAccountClient instance\n     */\n  }, {\n    key: \"ipAccount\",\n    get: function get() {\n      if (this._ipAccount === null) {\n        this._ipAccount = new IPAccountClient(this.rpcClient, this.wallet);\n      }\n      return this._ipAccount;\n    }\n\n    /**\n     * Getter for the royalty client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the RoyaltyClient instance\n     */\n  }, {\n    key: \"royalty\",\n    get: function get() {\n      if (this._royalty === null) {\n        this._royalty = new RoyaltyClient(this.rpcClient, this.wallet);\n      }\n      return this._royalty;\n    }\n\n    /**\n     * Getter for the NFT client. The client is lazily created when\n     * this method is called.\n     *\n     * @returns the NftClient instance\n     */\n  }, {\n    key: \"nftClient\",\n    get: function get() {\n      if (this._nftClient === null) {\n        this._nftClient = new NftClient(this.rpcClient, this.wallet);\n      }\n      return this._nftClient;\n    }\n  }], [{\n    key: \"newClient\",\n    value: function newClient(config) {\n      return new StoryClient(config);\n    }\n\n    /**\n     * Factory method for creating a SDK client with a signer.\n     *\n     * @param config WalletClientConfig - the configuration for a new SDK client\n     */\n  }, {\n    key: \"newClientUseWallet\",\n    value: function newClientUseWallet(config) {\n      return new StoryClient({\n        chainId: config.chainId,\n        transport: config.transport,\n        wallet: config.wallet\n      });\n    }\n\n    /**\n     * Factory method for creating a SDK client with a signer.\n     *\n     * @param config UseAccountStoryConfig - the configuration for a new SDK client\n     */\n  }, {\n    key: \"newClientUseAccount\",\n    value: function newClientUseAccount(config) {\n      return new StoryClient({\n        account: config.account,\n        chainId: config.chainId,\n        transport: config.transport\n      });\n    }\n  }]);\n}();\n\nexport { AccessPermission, AddressZero, DisputeClient, HashZero, IPAccountClient, IPAssetClient, LicenseClient, NftClient, PIL_TYPE, PermissionClient, RoyaltyClient, StoryClient, getPermissionSignature, iliad };\n"],"mappings":"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,kBAAkB,CAAC;UACvBsQ,GAAG,EAAEhB,kBAAkB;UACvB0C,YAAY,EAAE,qCAAqC;UACnDlH,IAAI,EAAE,CAAC6G,OAAO,CAACge,SAAS,EAAEhe,OAAO,CAAC8mB,eAAe,EAAE9mB,OAAO,CAAC2lB,cAAc;QAC3E,CAAC;MACH,CAAC;IACH;EACF,CAAC,CAAC,CAAC;AACL,CAAC,CAAC9B,0BAA0B,CAAC;;AAE7B;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAIqD,4BAA4B,GAAG,aAAa,YAAY;EAC1D,SAASA,4BAA4BA,CAAC5oB,SAAS,EAAE7D,OAAO,EA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AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAIoB,cAAc,GAAG,aAAa,YAAY;EAC5C,SAASA,cAAcA,CAACl5B,SAAS,EAAE7D,OAAO,EAAE;IAC1C,IAAIg9B,kBAAkB;IACtBlmC,eAAe,CAAC,IAAI,EAAEimC,cAAc,CAAC;IACrC,IAAI,CAAC/8B,OAAO,GAAGA,OAAO,IAAIjM,UAAU,CAAC4P,UAAU,EAAE,CAACq5B,kBAAkB,GAAGn5B,SAAS,CAACvD,KAAK,MAAM,IAAI,IAAI08B,kBAAkB,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,kBAAkB,CAAC39B,EAAE,CAAC;IACnK,IAAI,CAACwE,SAAS,GAAGA,SAAS;EAC5B;;EAEA;AACF;AACA;EACE,OAAOxM,YAAY,CAAC0lC,cAAc,EAAE,CAAC;IACnCtnC,GAAG,EAAE,6BAA6B;IAClCC,KAAK,EAAE,SAASunC,2BAA2BA,CAACC,SAAS,EAAE;MACrD,OAAO,IAAI,CAACr5B,SAAS,CAACI,kBAAkB,CAAC;QACvCC,GAAG,EAAER,MAAM;QACX1D,OAAO,EAAE,IAAI,CAACA,OAAO;QACrBmE,SAAS,EAAE,mBAAmB;QAC9BC,MAAM,EAAE,SAASA,MAAMA,CAACC,GAAG,EAAE;UAC3BA,GAAG,CAAC1N,OAAO,CAAC,UAAU8B,EAAE,EAAE;YACxB,OAAOykC,SAAS,CAACzkC,EAAE,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}