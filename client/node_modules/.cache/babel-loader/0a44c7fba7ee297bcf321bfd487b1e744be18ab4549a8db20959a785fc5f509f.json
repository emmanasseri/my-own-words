{"ast":null,"code":"export function isHex(value) {\n  let {\n    strict = true\n  } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!value) return false;\n  if (typeof value !== 'string') return false;\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x');\n}","map":{"version":3,"names":["isHex","value","strict","arguments","length","undefined","test","startsWith"],"sources":["/Users/emmanasseri/Desktop/my-own-words/client/node_modules/viem/utils/data/isHex.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\n\nexport type IsHexErrorType = ErrorType\n\nexport function isHex(\n  value: unknown,\n  { strict = true }: { strict?: boolean | undefined } = {},\n): value is Hex {\n  if (!value) return false\n  if (typeof value !== 'string') return false\n  return strict ? /^0x[0-9a-fA-F]*$/.test(value) : value.startsWith('0x')\n}\n"],"mappings":"AAKA,OAAM,SAAUA,KAAKA,CACnBC,KAAc,EAC0C;EAAA,IAAxD;IAAEC,MAAM,GAAG;EAAI,IAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAuC,EAAE;EAExD,IAAI,CAACF,KAAK,EAAE,OAAO,KAAK;EACxB,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE,OAAO,KAAK;EAC3C,OAAOC,MAAM,GAAG,kBAAkB,CAACI,IAAI,CAACL,KAAK,CAAC,GAAGA,KAAK,CAACM,UAAU,CAAC,IAAI,CAAC;AACzE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}