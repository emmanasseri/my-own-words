{"ast":null,"code":"export function extractChain(_ref) {\n  let {\n    chains,\n    id\n  } = _ref;\n  return chains.find(chain => chain.id === id);\n}","map":{"version":3,"names":["extractChain","_ref","chains","id","find","chain"],"sources":["/Users/emmanasseri/Desktop/my-own-words/client/node_modules/viem/utils/chain/extractChain.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { Chain } from '../../types/chain.js'\n\nexport type ExtractChainParameters<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = {\n  chains: chains\n  id: chainId | chains[number]['id']\n}\n\nexport type ExtractChainReturnType<\n  chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n> = Extract<chains[number], { id: chainId }>\n\nexport type ExtractChainErrorType = ErrorType\n\nexport function extractChain<\n  const chains extends readonly Chain[],\n  chainId extends chains[number]['id'],\n>({\n  chains,\n  id,\n}: ExtractChainParameters<chains, chainId>): ExtractChainReturnType<\n  chains,\n  chainId\n> {\n  return chains.find((chain) => chain.id === id) as ExtractChainReturnType<\n    chains,\n    chainId\n  >\n}\n"],"mappings":"AAkBA,OAAM,SAAUA,YAAYA,CAAAC,IAAA,EAMc;EAAA,IAHxC;IACAC,MAAM;IACNC;EAAE,CACsC,GAAAF,IAAA;EAIxC,OAAOC,MAAM,CAACE,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACF,EAAE,KAAKA,EAAE,CAG5C;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}