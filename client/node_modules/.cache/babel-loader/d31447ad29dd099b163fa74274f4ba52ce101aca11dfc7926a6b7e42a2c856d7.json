{"ast":null,"code":"import React from\"react\";import{Modal,ModalOverlay,ModalContent,ModalHeader,ModalCloseButton,ModalBody,ModalFooter,Button,Text}from\"@chakra-ui/react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MessageOtherAuthorModal=_ref=>{let{isOpen,onClose,onProceed}=_ref;return/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"Message the Other Author\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsx(ModalBody,{children:/*#__PURE__*/_jsx(Text,{children:\"With your approval, the wizard will share the results of its confidence score with the other author. This will be fully anonymous. Would you like to proceed with the message?\"})}),/*#__PURE__*/_jsxs(ModalFooter,{children:[/*#__PURE__*/_jsx(Button,{colorScheme:\"blue\",mr:3,onClick:onProceed,children:\"Yes\"}),/*#__PURE__*/_jsx(Button,{variant:\"ghost\",onClick:onClose,children:\"Cancel\"})]})]})]});};export default MessageOtherAuthorModal;","map":{"version":3,"names":["React","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","ModalFooter","Button","Text","jsx","_jsx","jsxs","_jsxs","MessageOtherAuthorModal","_ref","isOpen","onClose","onProceed","children","colorScheme","mr","onClick","variant"],"sources":["/Users/emmanasseri/Desktop/my-own-words/client/src/components/Messaging/MessageOtherAuthorModal.tsx"],"sourcesContent":["import React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n  Button,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\ninterface MessageOtherAuthorModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onProceed: () => void; // This will handle the logic when the user clicks \"Yes\"\n}\n\nconst MessageOtherAuthorModal: React.FC<MessageOtherAuthorModalProps> = ({\n  isOpen,\n  onClose,\n  onProceed,\n}) => {\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Message the Other Author</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <Text>\n            With your approval, the wizard will share the results of its\n            confidence score with the other author. This will be fully anonymous.\n            Would you like to proceed with the message?\n          </Text>\n        </ModalBody>\n\n        <ModalFooter>\n          <Button colorScheme=\"blue\" mr={3} onClick={onProceed}>\n            Yes\n          </Button>\n          <Button variant=\"ghost\" onClick={onClose}>\n            Cancel\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  );\n};\n\nexport default MessageOtherAuthorModal;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OACEC,KAAK,CACLC,YAAY,CACZC,YAAY,CACZC,WAAW,CACXC,gBAAgB,CAChBC,SAAS,CACTC,WAAW,CACXC,MAAM,CACNC,IAAI,KAEC,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAQ1B,KAAM,CAAAC,uBAA+D,CAAGC,IAAA,EAIlE,IAJmE,CACvEC,MAAM,CACNC,OAAO,CACPC,SACF,CAAC,CAAAH,IAAA,CACC,mBACEF,KAAA,CAACZ,KAAK,EAACe,MAAM,CAAEA,MAAO,CAACC,OAAO,CAAEA,OAAQ,CAAAE,QAAA,eACtCR,IAAA,CAACT,YAAY,GAAE,CAAC,cAChBW,KAAA,CAACV,YAAY,EAAAgB,QAAA,eACXR,IAAA,CAACP,WAAW,EAAAe,QAAA,CAAC,0BAAwB,CAAa,CAAC,cACnDR,IAAA,CAACN,gBAAgB,GAAE,CAAC,cACpBM,IAAA,CAACL,SAAS,EAAAa,QAAA,cACRR,IAAA,CAACF,IAAI,EAAAU,QAAA,CAAC,gLAIN,CAAM,CAAC,CACE,CAAC,cAEZN,KAAA,CAACN,WAAW,EAAAY,QAAA,eACVR,IAAA,CAACH,MAAM,EAACY,WAAW,CAAC,MAAM,CAACC,EAAE,CAAE,CAAE,CAACC,OAAO,CAAEJ,SAAU,CAAAC,QAAA,CAAC,KAEtD,CAAQ,CAAC,cACTR,IAAA,CAACH,MAAM,EAACe,OAAO,CAAC,OAAO,CAACD,OAAO,CAAEL,OAAQ,CAAAE,QAAA,CAAC,QAE1C,CAAQ,CAAC,EACE,CAAC,EACF,CAAC,EACV,CAAC,CAEZ,CAAC,CAED,cAAe,CAAAL,uBAAuB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}