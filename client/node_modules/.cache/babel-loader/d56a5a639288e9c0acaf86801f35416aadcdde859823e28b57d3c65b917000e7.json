{"ast":null,"code":"import { gweiUnits } from '../../constants/unit.js';\nimport { formatUnits } from './formatUnits.js';\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei) {\n  let unit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'wei';\n  return formatUnits(wei, gweiUnits[unit]);\n}","map":{"version":3,"names":["gweiUnits","formatUnits","formatGwei","wei","unit","arguments","length","undefined"],"sources":["/Users/emmanasseri/Desktop/my-own-words/node_modules/viem/utils/unit/formatGwei.ts"],"sourcesContent":["import { gweiUnits } from '../../constants/unit.js'\n\nimport { type FormatUnitsErrorType, formatUnits } from './formatUnits.js'\n\nexport type FormatGweiErrorType = FormatUnitsErrorType\n\n/**\n * Converts numerical wei to a string representation of gwei.\n *\n * - Docs: https://viem.sh/docs/utilities/formatGwei\n *\n * @example\n * import { formatGwei } from 'viem'\n *\n * formatGwei(1000000000n)\n * // '1'\n */\nexport function formatGwei(wei: bigint, unit: 'wei' = 'wei') {\n  return formatUnits(wei, gweiUnits[unit])\n}\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,yBAAyB;AAEnD,SAAoCC,WAAW,QAAQ,kBAAkB;AAIzE;;;;;;;;;;;AAWA,OAAM,SAAUC,UAAUA,CAACC,GAAW,EAAqB;EAAA,IAAnBC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAc,KAAK;EACzD,OAAOJ,WAAW,CAACE,GAAG,EAAEH,SAAS,CAACI,IAAI,CAAC,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}